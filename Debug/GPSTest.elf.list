
GPSTest.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001284  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .init_array   00000004  0800140c  0800140c  0001140c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .fini_array   00000004  08001410  08001410  00011410  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .data         000000ac  20000000  08001414  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .ccmram       00000000  10000000  10000000  000200ac  2**0
                  CONTENTS
  6 .bss          00000040  200000ac  200000ac  000200ac  2**2
                  ALLOC
  7 ._user_heap_stack 00002000  200000ec  200000ec  000200ac  2**0
                  ALLOC
  8 .ARM.attributes 0000002c  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
  9 .debug_info   0000412b  00000000  00000000  000200d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000eae  00000000  00000000  00024203  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000570  00000000  00000000  000250b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004d8  00000000  00000000  00025628  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00001a8a  00000000  00000000  00025b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000021a6  00000000  00000000  0002758a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      000000ab  00000000  00000000  00029730  2**0
                  CONTENTS, READONLY
 16 .debug_frame  000010c8  00000000  00000000  000297dc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	200000ac 	.word	0x200000ac
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080013f4 	.word	0x080013f4

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	200000b0 	.word	0x200000b0
 80001c4:	080013f4 	.word	0x080013f4

080001c8 <NMI_Handler>:
 * @brief		This function handles NMI exception.
 *
 * @return		None
 *****************************************************************************
 */
void NMI_Handler(void) {
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0
}
 80001cc:	bf00      	nop
 80001ce:	46bd      	mov	sp, r7
 80001d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001d4:	4770      	bx	lr
 80001d6:	bf00      	nop

080001d8 <HardFault_Handler>:
 * @brief		This function handles Hard Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void HardFault_Handler(void) {
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Hard Fault exception occurs */
	Default_Handler();
 80001dc:	f000 f89c 	bl	8000318 <ADC_IRQHandler>
}
 80001e0:	bf00      	nop
 80001e2:	bd80      	pop	{r7, pc}

080001e4 <MemManage_Handler>:
 * @brief		This function handles Memory Manage exception.
 *
 * @return		None
 *****************************************************************************
 */
void MemManage_Handler(void) {
 80001e4:	b480      	push	{r7}
 80001e6:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Memory Manage exception occurs */
	while (1) {
	}
 80001e8:	e7fe      	b.n	80001e8 <MemManage_Handler+0x4>
 80001ea:	bf00      	nop

080001ec <BusFault_Handler>:
 * @brief		This function handles Bus Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void BusFault_Handler(void) {
 80001ec:	b580      	push	{r7, lr}
 80001ee:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Bus Fault exception occurs */
	Default_Handler();
 80001f0:	f000 f892 	bl	8000318 <ADC_IRQHandler>
}
 80001f4:	bf00      	nop
 80001f6:	bd80      	pop	{r7, pc}

080001f8 <UsageFault_Handler>:
 * @brief		This function handles Usage Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void UsageFault_Handler(void) {
 80001f8:	b580      	push	{r7, lr}
 80001fa:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Usage Fault exception occurs */
	Default_Handler();
 80001fc:	f000 f88c 	bl	8000318 <ADC_IRQHandler>
}
 8000200:	bf00      	nop
 8000202:	bd80      	pop	{r7, pc}

08000204 <SVC_Handler>:
 * @brief		This function handles SVCall exception.
 *
 * @return		None
 *****************************************************************************
 */
void SVC_Handler(void) {
 8000204:	b480      	push	{r7}
 8000206:	af00      	add	r7, sp, #0
}
 8000208:	bf00      	nop
 800020a:	46bd      	mov	sp, r7
 800020c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000210:	4770      	bx	lr
 8000212:	bf00      	nop

08000214 <DebugMon_Handler>:
 * @brief		This function handles Debug Monitor exception.
 *
 * @return		None
 *****************************************************************************
 */
void DebugMon_Handler(void) {
 8000214:	b480      	push	{r7}
 8000216:	af00      	add	r7, sp, #0
}
 8000218:	bf00      	nop
 800021a:	46bd      	mov	sp, r7
 800021c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000220:	4770      	bx	lr
 8000222:	bf00      	nop

08000224 <PendSV_Handler>:
 * @brief		This function handles PendSVC exception.
 *
 * @return		None
 *****************************************************************************
 */
void PendSV_Handler(void) {
 8000224:	b480      	push	{r7}
 8000226:	af00      	add	r7, sp, #0
}
 8000228:	bf00      	nop
 800022a:	46bd      	mov	sp, r7
 800022c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000230:	4770      	bx	lr
 8000232:	bf00      	nop

08000234 <SysTick_Handler>:
 * @brief		This function handles SysTick Handler.
 *
 * @return		None
 *****************************************************************************
 */
void SysTick_Handler(void) {
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
	TimingDelay_Decrement();
 8000238:	f000 f8f0 	bl	800041c <TimingDelay_Decrement>
}
 800023c:	bf00      	nop
 800023e:	bd80      	pop	{r7, pc}

08000240 <EXTI0_IRQHandler>:
 * @brief		This function handles the EXTI Lines 9:5.
 *
 * @return		None
 *****************************************************************************
 */
void EXTI0_IRQHandler(void) {
 8000240:	b580      	push	{r7, lr}
 8000242:	af00      	add	r7, sp, #0

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON3_PIN)) != RESET) {
 8000244:	2001      	movs	r0, #1
 8000246:	f000 fcc5 	bl	8000bd4 <EXTI_GetITStatus>
 800024a:	4603      	mov	r3, r0
 800024c:	2b00      	cmp	r3, #0
 800024e:	d002      	beq.n	8000256 <EXTI0_IRQHandler+0x16>
		/* CARME IO1 Button3 Interrupt Handler */
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON3_PIN));
 8000250:	2001      	movs	r0, #1
 8000252:	f000 fcd9 	bl	8000c08 <EXTI_ClearITPendingBit>
	}
}
 8000256:	bf00      	nop
 8000258:	bd80      	pop	{r7, pc}
 800025a:	bf00      	nop

0800025c <EXTI9_5_IRQHandler>:
 * @brief		This function handles the EXTI Lines 9:5.
 *
 * @return		None
 *****************************************************************************
 */
void EXTI9_5_IRQHandler(void) {
 800025c:	b580      	push	{r7, lr}
 800025e:	af00      	add	r7, sp, #0

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON0_PIN)) != RESET) {
 8000260:	2080      	movs	r0, #128	; 0x80
 8000262:	f000 fcb7 	bl	8000bd4 <EXTI_GetITStatus>
 8000266:	4603      	mov	r3, r0
 8000268:	2b00      	cmp	r3, #0
 800026a:	d002      	beq.n	8000272 <EXTI9_5_IRQHandler+0x16>
		/* CARME IO1 Button0 Interrupt Handler */
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON0_PIN));
 800026c:	2080      	movs	r0, #128	; 0x80
 800026e:	f000 fccb 	bl	8000c08 <EXTI_ClearITPendingBit>
	}

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_CAN_nCAN_INT_PIN)) != RESET) {
 8000272:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000276:	f000 fcad 	bl	8000bd4 <EXTI_GetITStatus>
 800027a:	4603      	mov	r3, r0
 800027c:	2b00      	cmp	r3, #0
 800027e:	d005      	beq.n	800028c <EXTI9_5_IRQHandler+0x30>
		CARME_CAN_Interrupt_Handler();
 8000280:	f000 f936 	bl	80004f0 <CARME_CAN_Interrupt_Handler>
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_CAN_nCAN_INT_PIN));
 8000284:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000288:	f000 fcbe 	bl	8000c08 <EXTI_ClearITPendingBit>
	}
}
 800028c:	bf00      	nop
 800028e:	bd80      	pop	{r7, pc}

08000290 <EXTI15_10_IRQHandler>:
 * @brief		This function handles the EXTI Lines 15:10.
 *
 * @return		None
 *****************************************************************************
 */
void EXTI15_10_IRQHandler(void) {
 8000290:	b580      	push	{r7, lr}
 8000292:	af00      	add	r7, sp, #0

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON1_PIN)) != RESET) {
 8000294:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8000298:	f000 fc9c 	bl	8000bd4 <EXTI_GetITStatus>
 800029c:	4603      	mov	r3, r0
 800029e:	2b00      	cmp	r3, #0
 80002a0:	d003      	beq.n	80002aa <EXTI15_10_IRQHandler+0x1a>
		/* CARME IO1 Button1 Interrupt Handler */
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON1_PIN));
 80002a2:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80002a6:	f000 fcaf 	bl	8000c08 <EXTI_ClearITPendingBit>
	}

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON2_PIN)) != RESET) {
 80002aa:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80002ae:	f000 fc91 	bl	8000bd4 <EXTI_GetITStatus>
 80002b2:	4603      	mov	r3, r0
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d003      	beq.n	80002c0 <EXTI15_10_IRQHandler+0x30>
		/* CARME IO1 Button2 Interrupt Handler */
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON2_PIN));
 80002b8:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80002bc:	f000 fca4 	bl	8000c08 <EXTI_ClearITPendingBit>
	}
}
 80002c0:	bf00      	nop
 80002c2:	bd80      	pop	{r7, pc}

080002c4 <Reset_Handler>:
	.weak	Reset_Handler
	.type	Reset_Handler, %function

Reset_Handler:
	/* Copy the data segment initializers from flash to SRAM */
	MOVS	r1, #0
 80002c4:	2100      	movs	r1, #0
	B		LoopCopyDataInit
 80002c6:	e003      	b.n	80002d0 <LoopCopyDataInit>

080002c8 <CopyDataInit>:

CopyDataInit:
	LDR		r3, =_sidata
 80002c8:	4b0c      	ldr	r3, [pc, #48]	; (80002fc <ProgramFinish+0x2>)
	LDR		r3, [r3, r1]
 80002ca:	585b      	ldr	r3, [r3, r1]
	STR		r3, [r0, r1]
 80002cc:	5043      	str	r3, [r0, r1]
	ADDS	r1, r1, #4
 80002ce:	3104      	adds	r1, #4

080002d0 <LoopCopyDataInit>:

LoopCopyDataInit:
	LDR		r0, =_sdata
 80002d0:	480b      	ldr	r0, [pc, #44]	; (8000300 <ProgramFinish+0x6>)
	LDR		r3, =_edata
 80002d2:	4b0c      	ldr	r3, [pc, #48]	; (8000304 <ProgramFinish+0xa>)
	ADDS	r2, r0, r1
 80002d4:	1842      	adds	r2, r0, r1
	CMP		r2, r3
 80002d6:	429a      	cmp	r2, r3
	BCC		CopyDataInit
 80002d8:	d3f6      	bcc.n	80002c8 <CopyDataInit>
	LDR		r2, =_sbss
 80002da:	4a0b      	ldr	r2, [pc, #44]	; (8000308 <ProgramFinish+0xe>)
	B		LoopFillZerobss
 80002dc:	e002      	b.n	80002e4 <LoopFillZerobss>

080002de <FillZerobss>:

/* Zero fill the bss segment. */
FillZerobss:
	MOVS	r3, #0
 80002de:	2300      	movs	r3, #0
	STR		r3, [r2], #4
 80002e0:	f842 3b04 	str.w	r3, [r2], #4

080002e4 <LoopFillZerobss>:

LoopFillZerobss:
	LDR		r3, =_ebss
 80002e4:	4b09      	ldr	r3, [pc, #36]	; (800030c <ProgramFinish+0x12>)
	CMP		r2, r3
 80002e6:	429a      	cmp	r2, r3
	BCC		FillZerobss
 80002e8:	d3f9      	bcc.n	80002de <FillZerobss>

	BL		SystemInit			/* Call the clock system initialization		*/
 80002ea:	f000 fbc5 	bl	8000a78 <SystemInit>
	BL		CARME_Init			/* Call the CARME-M4 board initialization	*/
 80002ee:	f000 f97b 	bl	80005e8 <CARME_Init>
	BL		__libc_init_array	/* Call static constructors					*/
 80002f2:	f000 f8bf 	bl	8000474 <__libc_init_array>
	BL		main				/* Call the application's entry point		*/
 80002f6:	f000 f8a3 	bl	8000440 <main>

080002fa <ProgramFinish>:
ProgramFinish:
	B		ProgramFinish		/* while true do nothing					*/
 80002fa:	e7fe      	b.n	80002fa <ProgramFinish>
	/* Copy the data segment initializers from flash to SRAM */
	MOVS	r1, #0
	B		LoopCopyDataInit

CopyDataInit:
	LDR		r3, =_sidata
 80002fc:	08001414 	.word	0x08001414
	LDR		r3, [r3, r1]
	STR		r3, [r0, r1]
	ADDS	r1, r1, #4

LoopCopyDataInit:
	LDR		r0, =_sdata
 8000300:	20000000 	.word	0x20000000
	LDR		r3, =_edata
 8000304:	200000ac 	.word	0x200000ac
	ADDS	r2, r0, r1
	CMP		r2, r3
	BCC		CopyDataInit
	LDR		r2, =_sbss
 8000308:	200000ac 	.word	0x200000ac
FillZerobss:
	MOVS	r3, #0
	STR		r3, [r2], #4

LoopFillZerobss:
	LDR		r3, =_ebss
 800030c:	200000ec 	.word	0x200000ec

08000310 <dowait>:
 *				infinite loop, preserving the system state for examination
 *				by a debugger.
 */
.section	.text.Default_Handler, "ax", %progbits
dowait:
	LDR		r0, =0xA037A0
 8000310:	4819      	ldr	r0, [pc, #100]	; (8000378 <Infinite_Loop+0x16>)

08000312 <dowaitloop>:
dowaitloop:
	SUBS	r0, #1
 8000312:	3801      	subs	r0, #1
	BNE		dowaitloop
 8000314:	d1fd      	bne.n	8000312 <dowaitloop>
	BX		lr
 8000316:	4770      	bx	lr

08000318 <ADC_IRQHandler>:

Default_Handler:
	LDR		r1, =0x40023800		// RCC_BASE
 8000318:	4918      	ldr	r1, [pc, #96]	; (800037c <Infinite_Loop+0x1a>)
	LDR		r3, [r1, #0x30]		// RCC->AHB1ENR
 800031a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
	LDR		r2, =0x100			// RCC_AHB1Periph_GPIOI
 800031c:	f44f 7280 	mov.w	r2, #256	; 0x100
	ORR		r3, r3, r2			// RCC->AHB1ENR |= RCC_AHB1Periph_GPIOI
 8000320:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x30]
 8000324:	630b      	str	r3, [r1, #48]	; 0x30
	LDR		r1, =0x40022000		// GPIOI_BASE
 8000326:	4916      	ldr	r1, [pc, #88]	; (8000380 <Infinite_Loop+0x1e>)
	/* GPIO port mode register */
	LDR		r3, [r1, #0x00]		// GPIOI->MODER
 8000328:	680b      	ldr	r3, [r1, #0]
	LDR		r2, =0x0000C000
 800032a:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 800032e:	ea23 0302 	bic.w	r3, r3, r2
	LDR		r2, =0x00004000
 8000332:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	ORR		r3, r3, r2
 8000336:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x00]
 800033a:	600b      	str	r3, [r1, #0]
	/* GPIO port output type register */
	LDR		r3, [r1, #0x04]		// GPIOI->OTYPER
 800033c:	684b      	ldr	r3, [r1, #4]
	LDR		r2, =0x00000080
 800033e:	2280      	movs	r2, #128	; 0x80
	BIC		r3, r3, r2
 8000340:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x04]
 8000344:	604b      	str	r3, [r1, #4]
	/* GPIO port output speed register */
	LDR		r3, [r1, #0x08]		// GPIOI->OSPEEDR
 8000346:	688b      	ldr	r3, [r1, #8]
	LDR		r2, =0x0000C000
 8000348:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 800034c:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x08]
 8000350:	608b      	str	r3, [r1, #8]
	/* GPIO port pull-up/pull-down register */
	LDR		r3, [r1, #0x0C]		// GPIOI->PUPDR
 8000352:	68cb      	ldr	r3, [r1, #12]
	LDR		r2, =0x0000C000
 8000354:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 8000358:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x0C]
 800035c:	60cb      	str	r3, [r1, #12]
	/* GPIO port output data register */
	LDR		r3, [r1, #0x14]		// GPIOI->ODR
 800035e:	694b      	ldr	r3, [r1, #20]
	LDR		r2, =0x00000080
 8000360:	2280      	movs	r2, #128	; 0x80

08000362 <Infinite_Loop>:
Infinite_Loop:
	ORR		r3, r3, r2
 8000362:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x14]		// Set LED
 8000366:	614b      	str	r3, [r1, #20]
	BL		dowait
 8000368:	f7ff ffd2 	bl	8000310 <dowait>
	BIC		r3, r3, r2
 800036c:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x14]		// Reset LED
 8000370:	614b      	str	r3, [r1, #20]
	BL		dowait
 8000372:	f7ff ffcd 	bl	8000310 <dowait>
	B		Infinite_Loop
 8000376:	e7f4      	b.n	8000362 <Infinite_Loop>
 *				infinite loop, preserving the system state for examination
 *				by a debugger.
 */
.section	.text.Default_Handler, "ax", %progbits
dowait:
	LDR		r0, =0xA037A0
 8000378:	00a037a0 	.word	0x00a037a0
	SUBS	r0, #1
	BNE		dowaitloop
	BX		lr

Default_Handler:
	LDR		r1, =0x40023800		// RCC_BASE
 800037c:	40023800 	.word	0x40023800
	LDR		r3, [r1, #0x30]		// RCC->AHB1ENR
	LDR		r2, =0x100			// RCC_AHB1Periph_GPIOI
	ORR		r3, r3, r2			// RCC->AHB1ENR |= RCC_AHB1Periph_GPIOI
	STR		r3, [r1, #0x30]
	LDR		r1, =0x40022000		// GPIOI_BASE
 8000380:	40022000 	.word	0x40022000

08000384 <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000384:	b480      	push	{r7}
 8000386:	b083      	sub	sp, #12
 8000388:	af00      	add	r7, sp, #0
 800038a:	4603      	mov	r3, r0
 800038c:	6039      	str	r1, [r7, #0]
 800038e:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
 8000390:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000394:	2b00      	cmp	r3, #0
 8000396:	da0b      	bge.n	80003b0 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 8000398:	490d      	ldr	r1, [pc, #52]	; (80003d0 <NVIC_SetPriority+0x4c>)
 800039a:	79fb      	ldrb	r3, [r7, #7]
 800039c:	f003 030f 	and.w	r3, r3, #15
 80003a0:	3b04      	subs	r3, #4
 80003a2:	683a      	ldr	r2, [r7, #0]
 80003a4:	b2d2      	uxtb	r2, r2
 80003a6:	0112      	lsls	r2, r2, #4
 80003a8:	b2d2      	uxtb	r2, r2
 80003aa:	440b      	add	r3, r1
 80003ac:	761a      	strb	r2, [r3, #24]
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
}
 80003ae:	e009      	b.n	80003c4 <NVIC_SetPriority+0x40>
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 80003b0:	4908      	ldr	r1, [pc, #32]	; (80003d4 <NVIC_SetPriority+0x50>)
 80003b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003b6:	683a      	ldr	r2, [r7, #0]
 80003b8:	b2d2      	uxtb	r2, r2
 80003ba:	0112      	lsls	r2, r2, #4
 80003bc:	b2d2      	uxtb	r2, r2
 80003be:	440b      	add	r3, r1
 80003c0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80003c4:	bf00      	nop
 80003c6:	370c      	adds	r7, #12
 80003c8:	46bd      	mov	sp, r7
 80003ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ce:	4770      	bx	lr
 80003d0:	e000ed00 	.word	0xe000ed00
 80003d4:	e000e100 	.word	0xe000e100

080003d8 <SysTick_Config>:
    function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	b082      	sub	sp, #8
 80003dc:	af00      	add	r7, sp, #0
 80003de:	6078      	str	r0, [r7, #4]
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	3b01      	subs	r3, #1
 80003e4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80003e8:	d301      	bcc.n	80003ee <SysTick_Config+0x16>
 80003ea:	2301      	movs	r3, #1
 80003ec:	e00f      	b.n	800040e <SysTick_Config+0x36>

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 80003ee:	4a0a      	ldr	r2, [pc, #40]	; (8000418 <SysTick_Config+0x40>)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	3b01      	subs	r3, #1
 80003f4:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
 80003f6:	210f      	movs	r1, #15
 80003f8:	f04f 30ff 	mov.w	r0, #4294967295
 80003fc:	f7ff ffc2 	bl	8000384 <NVIC_SetPriority>
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 8000400:	4b05      	ldr	r3, [pc, #20]	; (8000418 <SysTick_Config+0x40>)
 8000402:	2200      	movs	r2, #0
 8000404:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000406:	4b04      	ldr	r3, [pc, #16]	; (8000418 <SysTick_Config+0x40>)
 8000408:	2207      	movs	r2, #7
 800040a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */
  return (0);                                                  /* Function successful */
 800040c:	2300      	movs	r3, #0
}
 800040e:	4618      	mov	r0, r3
 8000410:	3708      	adds	r7, #8
 8000412:	46bd      	mov	sp, r7
 8000414:	bd80      	pop	{r7, pc}
 8000416:	bf00      	nop
 8000418:	e000e010 	.word	0xe000e010

0800041c <TimingDelay_Decrement>:

/**
 * @brief		Decrement the TimingDelay. This function is called in the
 *				SysTick_Handler.
 */
void TimingDelay_Decrement(void) {
 800041c:	b480      	push	{r7}
 800041e:	af00      	add	r7, sp, #0
	if (TimingDelay > 0U) {
 8000420:	4b06      	ldr	r3, [pc, #24]	; (800043c <TimingDelay_Decrement+0x20>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	2b00      	cmp	r3, #0
 8000426:	d004      	beq.n	8000432 <TimingDelay_Decrement+0x16>
		TimingDelay--;
 8000428:	4b04      	ldr	r3, [pc, #16]	; (800043c <TimingDelay_Decrement+0x20>)
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	3b01      	subs	r3, #1
 800042e:	4a03      	ldr	r2, [pc, #12]	; (800043c <TimingDelay_Decrement+0x20>)
 8000430:	6013      	str	r3, [r2, #0]
	}
}
 8000432:	bf00      	nop
 8000434:	46bd      	mov	sp, r7
 8000436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800043a:	4770      	bx	lr
 800043c:	200000c8 	.word	0x200000c8

08000440 <main>:

/**
 * @brief		main
 * @return		0 if success
 */
int main(void) {
 8000440:	b580      	push	{r7, lr}
 8000442:	b082      	sub	sp, #8
 8000444:	af00      	add	r7, sp, #0

	uint8_t i = 0U;
 8000446:	2300      	movs	r3, #0
 8000448:	71fb      	strb	r3, [r7, #7]

	if (SysTick_Config(SystemCoreClock / INT_PER_SEC) == 1U) {
 800044a:	4b08      	ldr	r3, [pc, #32]	; (800046c <main+0x2c>)
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	4a08      	ldr	r2, [pc, #32]	; (8000470 <main+0x30>)
 8000450:	fba2 2303 	umull	r2, r3, r2, r3
 8000454:	099b      	lsrs	r3, r3, #6
 8000456:	4618      	mov	r0, r3
 8000458:	f7ff ffbe 	bl	80003d8 <SysTick_Config>
 800045c:	4603      	mov	r3, r0
 800045e:	2b01      	cmp	r3, #1
 8000460:	d100      	bne.n	8000464 <main+0x24>
		while (1) {
		}
 8000462:	e7fe      	b.n	8000462 <main+0x22>
	}

	for (;;) {
		i++;
 8000464:	79fb      	ldrb	r3, [r7, #7]
 8000466:	3301      	adds	r3, #1
 8000468:	71fb      	strb	r3, [r7, #7]
	}
 800046a:	e7fb      	b.n	8000464 <main+0x24>
 800046c:	200000a8 	.word	0x200000a8
 8000470:	10624dd3 	.word	0x10624dd3

08000474 <__libc_init_array>:
 8000474:	b570      	push	{r4, r5, r6, lr}
 8000476:	4b0e      	ldr	r3, [pc, #56]	; (80004b0 <__libc_init_array+0x3c>)
 8000478:	4c0e      	ldr	r4, [pc, #56]	; (80004b4 <__libc_init_array+0x40>)
 800047a:	1ae4      	subs	r4, r4, r3
 800047c:	10a4      	asrs	r4, r4, #2
 800047e:	2500      	movs	r5, #0
 8000480:	461e      	mov	r6, r3
 8000482:	42a5      	cmp	r5, r4
 8000484:	d004      	beq.n	8000490 <__libc_init_array+0x1c>
 8000486:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800048a:	4798      	blx	r3
 800048c:	3501      	adds	r5, #1
 800048e:	e7f8      	b.n	8000482 <__libc_init_array+0xe>
 8000490:	f000 ffb0 	bl	80013f4 <_init>
 8000494:	4c08      	ldr	r4, [pc, #32]	; (80004b8 <__libc_init_array+0x44>)
 8000496:	4b09      	ldr	r3, [pc, #36]	; (80004bc <__libc_init_array+0x48>)
 8000498:	1ae4      	subs	r4, r4, r3
 800049a:	10a4      	asrs	r4, r4, #2
 800049c:	2500      	movs	r5, #0
 800049e:	461e      	mov	r6, r3
 80004a0:	42a5      	cmp	r5, r4
 80004a2:	d004      	beq.n	80004ae <__libc_init_array+0x3a>
 80004a4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004a8:	4798      	blx	r3
 80004aa:	3501      	adds	r5, #1
 80004ac:	e7f8      	b.n	80004a0 <__libc_init_array+0x2c>
 80004ae:	bd70      	pop	{r4, r5, r6, pc}
 80004b0:	0800140c 	.word	0x0800140c
 80004b4:	0800140c 	.word	0x0800140c
 80004b8:	08001410 	.word	0x08001410
 80004bc:	0800140c 	.word	0x0800140c

080004c0 <CARME_CAN_Read_Register>:
 80004c0:	b480      	push	{r7}
 80004c2:	b083      	sub	sp, #12
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	4603      	mov	r3, r0
 80004c8:	71fb      	strb	r3, [r7, #7]
 80004ca:	4b07      	ldr	r3, [pc, #28]	; (80004e8 <CARME_CAN_Read_Register+0x28>)
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	79fa      	ldrb	r2, [r7, #7]
 80004d0:	701a      	strb	r2, [r3, #0]
 80004d2:	4b06      	ldr	r3, [pc, #24]	; (80004ec <CARME_CAN_Read_Register+0x2c>)
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	781b      	ldrb	r3, [r3, #0]
 80004d8:	b2db      	uxtb	r3, r3
 80004da:	4618      	mov	r0, r3
 80004dc:	370c      	adds	r7, #12
 80004de:	46bd      	mov	sp, r7
 80004e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e4:	4770      	bx	lr
 80004e6:	bf00      	nop
 80004e8:	20000000 	.word	0x20000000
 80004ec:	20000004 	.word	0x20000004

080004f0 <CARME_CAN_Interrupt_Handler>:
 80004f0:	b580      	push	{r7, lr}
 80004f2:	b082      	sub	sp, #8
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	2003      	movs	r0, #3
 80004f8:	f7ff ffe2 	bl	80004c0 <CARME_CAN_Read_Register>
 80004fc:	4603      	mov	r3, r0
 80004fe:	71fb      	strb	r3, [r7, #7]
 8000500:	79fb      	ldrb	r3, [r7, #7]
 8000502:	f003 0301 	and.w	r3, r3, #1
 8000506:	2b00      	cmp	r3, #0
 8000508:	d007      	beq.n	800051a <CARME_CAN_Interrupt_Handler+0x2a>
 800050a:	4b36      	ldr	r3, [pc, #216]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	2b00      	cmp	r3, #0
 8000510:	d05c      	beq.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 8000512:	4b34      	ldr	r3, [pc, #208]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	4798      	blx	r3
 8000518:	e058      	b.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 800051a:	79fb      	ldrb	r3, [r7, #7]
 800051c:	f003 0302 	and.w	r3, r3, #2
 8000520:	2b00      	cmp	r3, #0
 8000522:	d007      	beq.n	8000534 <CARME_CAN_Interrupt_Handler+0x44>
 8000524:	4b2f      	ldr	r3, [pc, #188]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 8000526:	685b      	ldr	r3, [r3, #4]
 8000528:	2b00      	cmp	r3, #0
 800052a:	d04f      	beq.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 800052c:	4b2d      	ldr	r3, [pc, #180]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 800052e:	685b      	ldr	r3, [r3, #4]
 8000530:	4798      	blx	r3
 8000532:	e04b      	b.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 8000534:	79fb      	ldrb	r3, [r7, #7]
 8000536:	f003 0304 	and.w	r3, r3, #4
 800053a:	2b00      	cmp	r3, #0
 800053c:	d007      	beq.n	800054e <CARME_CAN_Interrupt_Handler+0x5e>
 800053e:	4b29      	ldr	r3, [pc, #164]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 8000540:	689b      	ldr	r3, [r3, #8]
 8000542:	2b00      	cmp	r3, #0
 8000544:	d042      	beq.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 8000546:	4b27      	ldr	r3, [pc, #156]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 8000548:	689b      	ldr	r3, [r3, #8]
 800054a:	4798      	blx	r3
 800054c:	e03e      	b.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 800054e:	79fb      	ldrb	r3, [r7, #7]
 8000550:	f003 0308 	and.w	r3, r3, #8
 8000554:	2b00      	cmp	r3, #0
 8000556:	d007      	beq.n	8000568 <CARME_CAN_Interrupt_Handler+0x78>
 8000558:	4b22      	ldr	r3, [pc, #136]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 800055a:	68db      	ldr	r3, [r3, #12]
 800055c:	2b00      	cmp	r3, #0
 800055e:	d035      	beq.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 8000560:	4b20      	ldr	r3, [pc, #128]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 8000562:	68db      	ldr	r3, [r3, #12]
 8000564:	4798      	blx	r3
 8000566:	e031      	b.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 8000568:	79fb      	ldrb	r3, [r7, #7]
 800056a:	f003 0310 	and.w	r3, r3, #16
 800056e:	2b00      	cmp	r3, #0
 8000570:	d007      	beq.n	8000582 <CARME_CAN_Interrupt_Handler+0x92>
 8000572:	4b1c      	ldr	r3, [pc, #112]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 8000574:	691b      	ldr	r3, [r3, #16]
 8000576:	2b00      	cmp	r3, #0
 8000578:	d028      	beq.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 800057a:	4b1a      	ldr	r3, [pc, #104]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 800057c:	691b      	ldr	r3, [r3, #16]
 800057e:	4798      	blx	r3
 8000580:	e024      	b.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 8000582:	79fb      	ldrb	r3, [r7, #7]
 8000584:	f003 0320 	and.w	r3, r3, #32
 8000588:	2b00      	cmp	r3, #0
 800058a:	d007      	beq.n	800059c <CARME_CAN_Interrupt_Handler+0xac>
 800058c:	4b15      	ldr	r3, [pc, #84]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 800058e:	695b      	ldr	r3, [r3, #20]
 8000590:	2b00      	cmp	r3, #0
 8000592:	d01b      	beq.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 8000594:	4b13      	ldr	r3, [pc, #76]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 8000596:	695b      	ldr	r3, [r3, #20]
 8000598:	4798      	blx	r3
 800059a:	e017      	b.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 800059c:	79fb      	ldrb	r3, [r7, #7]
 800059e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80005a2:	2b00      	cmp	r3, #0
 80005a4:	d007      	beq.n	80005b6 <CARME_CAN_Interrupt_Handler+0xc6>
 80005a6:	4b0f      	ldr	r3, [pc, #60]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 80005a8:	699b      	ldr	r3, [r3, #24]
 80005aa:	2b00      	cmp	r3, #0
 80005ac:	d00e      	beq.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 80005ae:	4b0d      	ldr	r3, [pc, #52]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 80005b0:	699b      	ldr	r3, [r3, #24]
 80005b2:	4798      	blx	r3
 80005b4:	e00a      	b.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 80005b6:	79fb      	ldrb	r3, [r7, #7]
 80005b8:	b25b      	sxtb	r3, r3
 80005ba:	2b00      	cmp	r3, #0
 80005bc:	da06      	bge.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 80005be:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 80005c0:	69db      	ldr	r3, [r3, #28]
 80005c2:	2b00      	cmp	r3, #0
 80005c4:	d002      	beq.n	80005cc <CARME_CAN_Interrupt_Handler+0xdc>
 80005c6:	4b07      	ldr	r3, [pc, #28]	; (80005e4 <CARME_CAN_Interrupt_Handler+0xf4>)
 80005c8:	69db      	ldr	r3, [r3, #28]
 80005ca:	4798      	blx	r3
 80005cc:	2003      	movs	r0, #3
 80005ce:	f7ff ff77 	bl	80004c0 <CARME_CAN_Read_Register>
 80005d2:	4603      	mov	r3, r0
 80005d4:	71fb      	strb	r3, [r7, #7]
 80005d6:	79fb      	ldrb	r3, [r7, #7]
 80005d8:	2b00      	cmp	r3, #0
 80005da:	d191      	bne.n	8000500 <CARME_CAN_Interrupt_Handler+0x10>
 80005dc:	3708      	adds	r7, #8
 80005de:	46bd      	mov	sp, r7
 80005e0:	bd80      	pop	{r7, pc}
 80005e2:	bf00      	nop
 80005e4:	200000cc 	.word	0x200000cc

080005e8 <CARME_Init>:
 80005e8:	b580      	push	{r7, lr}
 80005ea:	af00      	add	r7, sp, #0
 80005ec:	2001      	movs	r0, #1
 80005ee:	2101      	movs	r1, #1
 80005f0:	f000 fda8 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 80005f4:	2002      	movs	r0, #2
 80005f6:	2101      	movs	r1, #1
 80005f8:	f000 fda4 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 80005fc:	2004      	movs	r0, #4
 80005fe:	2101      	movs	r1, #1
 8000600:	f000 fda0 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 8000604:	2008      	movs	r0, #8
 8000606:	2101      	movs	r1, #1
 8000608:	f000 fd9c 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 800060c:	2010      	movs	r0, #16
 800060e:	2101      	movs	r1, #1
 8000610:	f000 fd98 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 8000614:	2020      	movs	r0, #32
 8000616:	2101      	movs	r1, #1
 8000618:	f000 fd94 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 800061c:	2040      	movs	r0, #64	; 0x40
 800061e:	2101      	movs	r1, #1
 8000620:	f000 fd90 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 8000624:	2080      	movs	r0, #128	; 0x80
 8000626:	2101      	movs	r1, #1
 8000628:	f000 fd8c 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 800062c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000630:	2101      	movs	r1, #1
 8000632:	f000 fd87 	bl	8001144 <RCC_AHB1PeriphClockCmd>
 8000636:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800063a:	2101      	movs	r1, #1
 800063c:	f000 fdbe 	bl	80011bc <RCC_APB2PeriphClockCmd>
 8000640:	4810      	ldr	r0, [pc, #64]	; (8000684 <CARME_Init+0x9c>)
 8000642:	f000 fbdf 	bl	8000e04 <GPIO_DeInit>
 8000646:	4810      	ldr	r0, [pc, #64]	; (8000688 <CARME_Init+0xa0>)
 8000648:	f000 fbdc 	bl	8000e04 <GPIO_DeInit>
 800064c:	480f      	ldr	r0, [pc, #60]	; (800068c <CARME_Init+0xa4>)
 800064e:	f000 fbd9 	bl	8000e04 <GPIO_DeInit>
 8000652:	480f      	ldr	r0, [pc, #60]	; (8000690 <CARME_Init+0xa8>)
 8000654:	f000 fbd6 	bl	8000e04 <GPIO_DeInit>
 8000658:	480e      	ldr	r0, [pc, #56]	; (8000694 <CARME_Init+0xac>)
 800065a:	f000 fbd3 	bl	8000e04 <GPIO_DeInit>
 800065e:	480e      	ldr	r0, [pc, #56]	; (8000698 <CARME_Init+0xb0>)
 8000660:	f000 fbd0 	bl	8000e04 <GPIO_DeInit>
 8000664:	480d      	ldr	r0, [pc, #52]	; (800069c <CARME_Init+0xb4>)
 8000666:	f000 fbcd 	bl	8000e04 <GPIO_DeInit>
 800066a:	480d      	ldr	r0, [pc, #52]	; (80006a0 <CARME_Init+0xb8>)
 800066c:	f000 fbca 	bl	8000e04 <GPIO_DeInit>
 8000670:	480c      	ldr	r0, [pc, #48]	; (80006a4 <CARME_Init+0xbc>)
 8000672:	f000 fbc7 	bl	8000e04 <GPIO_DeInit>
 8000676:	f000 f8f3 	bl	8000860 <CARME_AGPIO_Init>
 800067a:	f000 f815 	bl	80006a8 <CARME_FSMC_GPIO_Init>
 800067e:	f000 f83d 	bl	80006fc <CARME_FSMC_Init>
 8000682:	bd80      	pop	{r7, pc}
 8000684:	40020000 	.word	0x40020000
 8000688:	40020400 	.word	0x40020400
 800068c:	40020800 	.word	0x40020800
 8000690:	40020c00 	.word	0x40020c00
 8000694:	40021000 	.word	0x40021000
 8000698:	40021400 	.word	0x40021400
 800069c:	40021800 	.word	0x40021800
 80006a0:	40021c00 	.word	0x40021c00
 80006a4:	40022000 	.word	0x40022000

080006a8 <CARME_FSMC_GPIO_Init>:
 80006a8:	b580      	push	{r7, lr}
 80006aa:	b0ec      	sub	sp, #432	; 0x1b0
 80006ac:	af00      	add	r7, sp, #0
 80006ae:	f107 0208 	add.w	r2, r7, #8
 80006b2:	4b11      	ldr	r3, [pc, #68]	; (80006f8 <CARME_FSMC_GPIO_Init+0x50>)
 80006b4:	4611      	mov	r1, r2
 80006b6:	461a      	mov	r2, r3
 80006b8:	f44f 73d4 	mov.w	r3, #424	; 0x1a8
 80006bc:	4608      	mov	r0, r1
 80006be:	4611      	mov	r1, r2
 80006c0:	461a      	mov	r2, r3
 80006c2:	f000 fdb7 	bl	8001234 <memcpy>
 80006c6:	463b      	mov	r3, r7
 80006c8:	2202      	movs	r2, #2
 80006ca:	715a      	strb	r2, [r3, #5]
 80006cc:	463b      	mov	r3, r7
 80006ce:	2202      	movs	r2, #2
 80006d0:	711a      	strb	r2, [r3, #4]
 80006d2:	463b      	mov	r3, r7
 80006d4:	2202      	movs	r2, #2
 80006d6:	71da      	strb	r2, [r3, #7]
 80006d8:	463b      	mov	r3, r7
 80006da:	2200      	movs	r2, #0
 80006dc:	719a      	strb	r2, [r3, #6]
 80006de:	f107 0208 	add.w	r2, r7, #8
 80006e2:	463b      	mov	r3, r7
 80006e4:	4610      	mov	r0, r2
 80006e6:	4619      	mov	r1, r3
 80006e8:	2235      	movs	r2, #53	; 0x35
 80006ea:	f000 f8cb 	bl	8000884 <CARME_GPIO_Init>
 80006ee:	f507 77d8 	add.w	r7, r7, #432	; 0x1b0
 80006f2:	46bd      	mov	sp, r7
 80006f4:	bd80      	pop	{r7, pc}
 80006f6:	bf00      	nop
 80006f8:	0800124c 	.word	0x0800124c

080006fc <CARME_FSMC_Init>:
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b096      	sub	sp, #88	; 0x58
 8000700:	af00      	add	r7, sp, #0
 8000702:	2001      	movs	r0, #1
 8000704:	2101      	movs	r1, #1
 8000706:	f000 fd3b 	bl	8001180 <RCC_AHB3PeriphClockCmd>
 800070a:	2000      	movs	r0, #0
 800070c:	f000 fa8a 	bl	8000c24 <FSMC_NORSRAMDeInit>
 8000710:	2002      	movs	r0, #2
 8000712:	f000 fa87 	bl	8000c24 <FSMC_NORSRAMDeInit>
 8000716:	2004      	movs	r0, #4
 8000718:	f000 fa84 	bl	8000c24 <FSMC_NORSRAMDeInit>
 800071c:	2006      	movs	r0, #6
 800071e:	f000 fa81 	bl	8000c24 <FSMC_NORSRAMDeInit>
 8000722:	463b      	mov	r3, r7
 8000724:	653b      	str	r3, [r7, #80]	; 0x50
 8000726:	463b      	mov	r3, r7
 8000728:	657b      	str	r3, [r7, #84]	; 0x54
 800072a:	2305      	movs	r3, #5
 800072c:	603b      	str	r3, [r7, #0]
 800072e:	2300      	movs	r3, #0
 8000730:	607b      	str	r3, [r7, #4]
 8000732:	2309      	movs	r3, #9
 8000734:	60bb      	str	r3, [r7, #8]
 8000736:	2300      	movs	r3, #0
 8000738:	60fb      	str	r3, [r7, #12]
 800073a:	2300      	movs	r3, #0
 800073c:	613b      	str	r3, [r7, #16]
 800073e:	2300      	movs	r3, #0
 8000740:	617b      	str	r3, [r7, #20]
 8000742:	2300      	movs	r3, #0
 8000744:	61bb      	str	r3, [r7, #24]
 8000746:	2302      	movs	r3, #2
 8000748:	61fb      	str	r3, [r7, #28]
 800074a:	2300      	movs	r3, #0
 800074c:	623b      	str	r3, [r7, #32]
 800074e:	2304      	movs	r3, #4
 8000750:	627b      	str	r3, [r7, #36]	; 0x24
 8000752:	2310      	movs	r3, #16
 8000754:	62bb      	str	r3, [r7, #40]	; 0x28
 8000756:	2300      	movs	r3, #0
 8000758:	62fb      	str	r3, [r7, #44]	; 0x2c
 800075a:	2300      	movs	r3, #0
 800075c:	633b      	str	r3, [r7, #48]	; 0x30
 800075e:	2300      	movs	r3, #0
 8000760:	637b      	str	r3, [r7, #52]	; 0x34
 8000762:	2300      	movs	r3, #0
 8000764:	63bb      	str	r3, [r7, #56]	; 0x38
 8000766:	2300      	movs	r3, #0
 8000768:	63fb      	str	r3, [r7, #60]	; 0x3c
 800076a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800076e:	643b      	str	r3, [r7, #64]	; 0x40
 8000770:	2300      	movs	r3, #0
 8000772:	647b      	str	r3, [r7, #68]	; 0x44
 8000774:	2300      	movs	r3, #0
 8000776:	64bb      	str	r3, [r7, #72]	; 0x48
 8000778:	2300      	movs	r3, #0
 800077a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800077c:	f107 031c 	add.w	r3, r7, #28
 8000780:	4618      	mov	r0, r3
 8000782:	f000 fa7b 	bl	8000c7c <FSMC_NORSRAMInit>
 8000786:	2002      	movs	r0, #2
 8000788:	2101      	movs	r1, #1
 800078a:	f000 fb11 	bl	8000db0 <FSMC_NORSRAMCmd>
 800078e:	2305      	movs	r3, #5
 8000790:	603b      	str	r3, [r7, #0]
 8000792:	2300      	movs	r3, #0
 8000794:	607b      	str	r3, [r7, #4]
 8000796:	2309      	movs	r3, #9
 8000798:	60bb      	str	r3, [r7, #8]
 800079a:	2300      	movs	r3, #0
 800079c:	60fb      	str	r3, [r7, #12]
 800079e:	2300      	movs	r3, #0
 80007a0:	613b      	str	r3, [r7, #16]
 80007a2:	2300      	movs	r3, #0
 80007a4:	617b      	str	r3, [r7, #20]
 80007a6:	2300      	movs	r3, #0
 80007a8:	61bb      	str	r3, [r7, #24]
 80007aa:	2304      	movs	r3, #4
 80007ac:	61fb      	str	r3, [r7, #28]
 80007ae:	2300      	movs	r3, #0
 80007b0:	623b      	str	r3, [r7, #32]
 80007b2:	2300      	movs	r3, #0
 80007b4:	627b      	str	r3, [r7, #36]	; 0x24
 80007b6:	2310      	movs	r3, #16
 80007b8:	62bb      	str	r3, [r7, #40]	; 0x28
 80007ba:	2300      	movs	r3, #0
 80007bc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80007be:	2300      	movs	r3, #0
 80007c0:	633b      	str	r3, [r7, #48]	; 0x30
 80007c2:	2300      	movs	r3, #0
 80007c4:	637b      	str	r3, [r7, #52]	; 0x34
 80007c6:	2300      	movs	r3, #0
 80007c8:	63bb      	str	r3, [r7, #56]	; 0x38
 80007ca:	2300      	movs	r3, #0
 80007cc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80007ce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80007d2:	643b      	str	r3, [r7, #64]	; 0x40
 80007d4:	2300      	movs	r3, #0
 80007d6:	647b      	str	r3, [r7, #68]	; 0x44
 80007d8:	2300      	movs	r3, #0
 80007da:	64bb      	str	r3, [r7, #72]	; 0x48
 80007dc:	2300      	movs	r3, #0
 80007de:	64fb      	str	r3, [r7, #76]	; 0x4c
 80007e0:	f107 031c 	add.w	r3, r7, #28
 80007e4:	4618      	mov	r0, r3
 80007e6:	f000 fa49 	bl	8000c7c <FSMC_NORSRAMInit>
 80007ea:	2004      	movs	r0, #4
 80007ec:	2101      	movs	r1, #1
 80007ee:	f000 fadf 	bl	8000db0 <FSMC_NORSRAMCmd>
 80007f2:	2301      	movs	r3, #1
 80007f4:	603b      	str	r3, [r7, #0]
 80007f6:	2308      	movs	r3, #8
 80007f8:	607b      	str	r3, [r7, #4]
 80007fa:	230f      	movs	r3, #15
 80007fc:	60bb      	str	r3, [r7, #8]
 80007fe:	2300      	movs	r3, #0
 8000800:	60fb      	str	r3, [r7, #12]
 8000802:	2300      	movs	r3, #0
 8000804:	613b      	str	r3, [r7, #16]
 8000806:	2305      	movs	r3, #5
 8000808:	617b      	str	r3, [r7, #20]
 800080a:	f04f 5340 	mov.w	r3, #805306368	; 0x30000000
 800080e:	61bb      	str	r3, [r7, #24]
 8000810:	2306      	movs	r3, #6
 8000812:	61fb      	str	r3, [r7, #28]
 8000814:	2300      	movs	r3, #0
 8000816:	623b      	str	r3, [r7, #32]
 8000818:	2300      	movs	r3, #0
 800081a:	627b      	str	r3, [r7, #36]	; 0x24
 800081c:	2310      	movs	r3, #16
 800081e:	62bb      	str	r3, [r7, #40]	; 0x28
 8000820:	2300      	movs	r3, #0
 8000822:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000824:	2300      	movs	r3, #0
 8000826:	633b      	str	r3, [r7, #48]	; 0x30
 8000828:	2300      	movs	r3, #0
 800082a:	637b      	str	r3, [r7, #52]	; 0x34
 800082c:	2300      	movs	r3, #0
 800082e:	63bb      	str	r3, [r7, #56]	; 0x38
 8000830:	2300      	movs	r3, #0
 8000832:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000834:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000838:	643b      	str	r3, [r7, #64]	; 0x40
 800083a:	2300      	movs	r3, #0
 800083c:	647b      	str	r3, [r7, #68]	; 0x44
 800083e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000842:	64bb      	str	r3, [r7, #72]	; 0x48
 8000844:	2300      	movs	r3, #0
 8000846:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000848:	f107 031c 	add.w	r3, r7, #28
 800084c:	4618      	mov	r0, r3
 800084e:	f000 fa15 	bl	8000c7c <FSMC_NORSRAMInit>
 8000852:	2006      	movs	r0, #6
 8000854:	2101      	movs	r1, #1
 8000856:	f000 faab 	bl	8000db0 <FSMC_NORSRAMCmd>
 800085a:	3758      	adds	r7, #88	; 0x58
 800085c:	46bd      	mov	sp, r7
 800085e:	bd80      	pop	{r7, pc}

08000860 <CARME_AGPIO_Init>:
 8000860:	b580      	push	{r7, lr}
 8000862:	b082      	sub	sp, #8
 8000864:	af00      	add	r7, sp, #0
 8000866:	463b      	mov	r3, r7
 8000868:	4618      	mov	r0, r3
 800086a:	f000 fc0b 	bl	8001084 <GPIO_StructInit>
 800086e:	463b      	mov	r3, r7
 8000870:	4803      	ldr	r0, [pc, #12]	; (8000880 <CARME_AGPIO_Init+0x20>)
 8000872:	4619      	mov	r1, r3
 8000874:	2214      	movs	r2, #20
 8000876:	f000 f805 	bl	8000884 <CARME_GPIO_Init>
 800087a:	3708      	adds	r7, #8
 800087c:	46bd      	mov	sp, r7
 800087e:	bd80      	pop	{r7, pc}
 8000880:	20000008 	.word	0x20000008

08000884 <CARME_GPIO_Init>:
 8000884:	b580      	push	{r7, lr}
 8000886:	b086      	sub	sp, #24
 8000888:	af00      	add	r7, sp, #0
 800088a:	60f8      	str	r0, [r7, #12]
 800088c:	60b9      	str	r1, [r7, #8]
 800088e:	4613      	mov	r3, r2
 8000890:	71fb      	strb	r3, [r7, #7]
 8000892:	2300      	movs	r3, #0
 8000894:	75fb      	strb	r3, [r7, #23]
 8000896:	e0e6      	b.n	8000a66 <CARME_GPIO_Init+0x1e2>
 8000898:	7dfb      	ldrb	r3, [r7, #23]
 800089a:	00db      	lsls	r3, r3, #3
 800089c:	68fa      	ldr	r2, [r7, #12]
 800089e:	4413      	add	r3, r2
 80008a0:	889b      	ldrh	r3, [r3, #4]
 80008a2:	461a      	mov	r2, r3
 80008a4:	68bb      	ldr	r3, [r7, #8]
 80008a6:	601a      	str	r2, [r3, #0]
 80008a8:	7dfb      	ldrb	r3, [r7, #23]
 80008aa:	00db      	lsls	r3, r3, #3
 80008ac:	68fa      	ldr	r2, [r7, #12]
 80008ae:	4413      	add	r3, r2
 80008b0:	799a      	ldrb	r2, [r3, #6]
 80008b2:	68bb      	ldr	r3, [r7, #8]
 80008b4:	711a      	strb	r2, [r3, #4]
 80008b6:	7dfb      	ldrb	r3, [r7, #23]
 80008b8:	00db      	lsls	r3, r3, #3
 80008ba:	68fa      	ldr	r2, [r7, #12]
 80008bc:	4413      	add	r3, r2
 80008be:	681b      	ldr	r3, [r3, #0]
 80008c0:	4618      	mov	r0, r3
 80008c2:	68b9      	ldr	r1, [r7, #8]
 80008c4:	f000 fb50 	bl	8000f68 <GPIO_Init>
 80008c8:	7dfb      	ldrb	r3, [r7, #23]
 80008ca:	00db      	lsls	r3, r3, #3
 80008cc:	68fa      	ldr	r2, [r7, #12]
 80008ce:	4413      	add	r3, r2
 80008d0:	799b      	ldrb	r3, [r3, #6]
 80008d2:	2b02      	cmp	r3, #2
 80008d4:	f040 80c4 	bne.w	8000a60 <CARME_GPIO_Init+0x1dc>
 80008d8:	7dfb      	ldrb	r3, [r7, #23]
 80008da:	00db      	lsls	r3, r3, #3
 80008dc:	68fa      	ldr	r2, [r7, #12]
 80008de:	4413      	add	r3, r2
 80008e0:	6819      	ldr	r1, [r3, #0]
 80008e2:	7dfb      	ldrb	r3, [r7, #23]
 80008e4:	00db      	lsls	r3, r3, #3
 80008e6:	68fa      	ldr	r2, [r7, #12]
 80008e8:	4413      	add	r3, r2
 80008ea:	889b      	ldrh	r3, [r3, #4]
 80008ec:	f003 0301 	and.w	r3, r3, #1
 80008f0:	2b00      	cmp	r3, #0
 80008f2:	f040 80ab 	bne.w	8000a4c <CARME_GPIO_Init+0x1c8>
 80008f6:	7dfb      	ldrb	r3, [r7, #23]
 80008f8:	00db      	lsls	r3, r3, #3
 80008fa:	68fa      	ldr	r2, [r7, #12]
 80008fc:	4413      	add	r3, r2
 80008fe:	889b      	ldrh	r3, [r3, #4]
 8000900:	f003 0302 	and.w	r3, r3, #2
 8000904:	2b00      	cmp	r3, #0
 8000906:	f040 809f 	bne.w	8000a48 <CARME_GPIO_Init+0x1c4>
 800090a:	7dfb      	ldrb	r3, [r7, #23]
 800090c:	00db      	lsls	r3, r3, #3
 800090e:	68fa      	ldr	r2, [r7, #12]
 8000910:	4413      	add	r3, r2
 8000912:	889b      	ldrh	r3, [r3, #4]
 8000914:	f003 0304 	and.w	r3, r3, #4
 8000918:	2b00      	cmp	r3, #0
 800091a:	f040 8093 	bne.w	8000a44 <CARME_GPIO_Init+0x1c0>
 800091e:	7dfb      	ldrb	r3, [r7, #23]
 8000920:	00db      	lsls	r3, r3, #3
 8000922:	68fa      	ldr	r2, [r7, #12]
 8000924:	4413      	add	r3, r2
 8000926:	889b      	ldrh	r3, [r3, #4]
 8000928:	f003 0308 	and.w	r3, r3, #8
 800092c:	2b00      	cmp	r3, #0
 800092e:	f040 8087 	bne.w	8000a40 <CARME_GPIO_Init+0x1bc>
 8000932:	7dfb      	ldrb	r3, [r7, #23]
 8000934:	00db      	lsls	r3, r3, #3
 8000936:	68fa      	ldr	r2, [r7, #12]
 8000938:	4413      	add	r3, r2
 800093a:	889b      	ldrh	r3, [r3, #4]
 800093c:	f003 0310 	and.w	r3, r3, #16
 8000940:	2b00      	cmp	r3, #0
 8000942:	d17b      	bne.n	8000a3c <CARME_GPIO_Init+0x1b8>
 8000944:	7dfb      	ldrb	r3, [r7, #23]
 8000946:	00db      	lsls	r3, r3, #3
 8000948:	68fa      	ldr	r2, [r7, #12]
 800094a:	4413      	add	r3, r2
 800094c:	889b      	ldrh	r3, [r3, #4]
 800094e:	f003 0320 	and.w	r3, r3, #32
 8000952:	2b00      	cmp	r3, #0
 8000954:	d170      	bne.n	8000a38 <CARME_GPIO_Init+0x1b4>
 8000956:	7dfb      	ldrb	r3, [r7, #23]
 8000958:	00db      	lsls	r3, r3, #3
 800095a:	68fa      	ldr	r2, [r7, #12]
 800095c:	4413      	add	r3, r2
 800095e:	889b      	ldrh	r3, [r3, #4]
 8000960:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000964:	2b00      	cmp	r3, #0
 8000966:	d165      	bne.n	8000a34 <CARME_GPIO_Init+0x1b0>
 8000968:	7dfb      	ldrb	r3, [r7, #23]
 800096a:	00db      	lsls	r3, r3, #3
 800096c:	68fa      	ldr	r2, [r7, #12]
 800096e:	4413      	add	r3, r2
 8000970:	889b      	ldrh	r3, [r3, #4]
 8000972:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000976:	2b00      	cmp	r3, #0
 8000978:	d15a      	bne.n	8000a30 <CARME_GPIO_Init+0x1ac>
 800097a:	7dfb      	ldrb	r3, [r7, #23]
 800097c:	00db      	lsls	r3, r3, #3
 800097e:	68fa      	ldr	r2, [r7, #12]
 8000980:	4413      	add	r3, r2
 8000982:	889b      	ldrh	r3, [r3, #4]
 8000984:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000988:	2b00      	cmp	r3, #0
 800098a:	d14f      	bne.n	8000a2c <CARME_GPIO_Init+0x1a8>
 800098c:	7dfb      	ldrb	r3, [r7, #23]
 800098e:	00db      	lsls	r3, r3, #3
 8000990:	68fa      	ldr	r2, [r7, #12]
 8000992:	4413      	add	r3, r2
 8000994:	889b      	ldrh	r3, [r3, #4]
 8000996:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800099a:	2b00      	cmp	r3, #0
 800099c:	d144      	bne.n	8000a28 <CARME_GPIO_Init+0x1a4>
 800099e:	7dfb      	ldrb	r3, [r7, #23]
 80009a0:	00db      	lsls	r3, r3, #3
 80009a2:	68fa      	ldr	r2, [r7, #12]
 80009a4:	4413      	add	r3, r2
 80009a6:	889b      	ldrh	r3, [r3, #4]
 80009a8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	d139      	bne.n	8000a24 <CARME_GPIO_Init+0x1a0>
 80009b0:	7dfb      	ldrb	r3, [r7, #23]
 80009b2:	00db      	lsls	r3, r3, #3
 80009b4:	68fa      	ldr	r2, [r7, #12]
 80009b6:	4413      	add	r3, r2
 80009b8:	889b      	ldrh	r3, [r3, #4]
 80009ba:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80009be:	2b00      	cmp	r3, #0
 80009c0:	d12e      	bne.n	8000a20 <CARME_GPIO_Init+0x19c>
 80009c2:	7dfb      	ldrb	r3, [r7, #23]
 80009c4:	00db      	lsls	r3, r3, #3
 80009c6:	68fa      	ldr	r2, [r7, #12]
 80009c8:	4413      	add	r3, r2
 80009ca:	889b      	ldrh	r3, [r3, #4]
 80009cc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80009d0:	2b00      	cmp	r3, #0
 80009d2:	d123      	bne.n	8000a1c <CARME_GPIO_Init+0x198>
 80009d4:	7dfb      	ldrb	r3, [r7, #23]
 80009d6:	00db      	lsls	r3, r3, #3
 80009d8:	68fa      	ldr	r2, [r7, #12]
 80009da:	4413      	add	r3, r2
 80009dc:	889b      	ldrh	r3, [r3, #4]
 80009de:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80009e2:	2b00      	cmp	r3, #0
 80009e4:	d118      	bne.n	8000a18 <CARME_GPIO_Init+0x194>
 80009e6:	7dfb      	ldrb	r3, [r7, #23]
 80009e8:	00db      	lsls	r3, r3, #3
 80009ea:	68fa      	ldr	r2, [r7, #12]
 80009ec:	4413      	add	r3, r2
 80009ee:	889b      	ldrh	r3, [r3, #4]
 80009f0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80009f4:	2b00      	cmp	r3, #0
 80009f6:	d10d      	bne.n	8000a14 <CARME_GPIO_Init+0x190>
 80009f8:	7dfb      	ldrb	r3, [r7, #23]
 80009fa:	00db      	lsls	r3, r3, #3
 80009fc:	68fa      	ldr	r2, [r7, #12]
 80009fe:	4413      	add	r3, r2
 8000a00:	889b      	ldrh	r3, [r3, #4]
 8000a02:	b29b      	uxth	r3, r3
 8000a04:	b21b      	sxth	r3, r3
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	da01      	bge.n	8000a0e <CARME_GPIO_Init+0x18a>
 8000a0a:	230f      	movs	r3, #15
 8000a0c:	e01f      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a0e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000a12:	e01c      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a14:	230e      	movs	r3, #14
 8000a16:	e01a      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a18:	230d      	movs	r3, #13
 8000a1a:	e018      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a1c:	230c      	movs	r3, #12
 8000a1e:	e016      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a20:	230b      	movs	r3, #11
 8000a22:	e014      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a24:	230a      	movs	r3, #10
 8000a26:	e012      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a28:	2309      	movs	r3, #9
 8000a2a:	e010      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a2c:	2308      	movs	r3, #8
 8000a2e:	e00e      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a30:	2307      	movs	r3, #7
 8000a32:	e00c      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a34:	2306      	movs	r3, #6
 8000a36:	e00a      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a38:	2305      	movs	r3, #5
 8000a3a:	e008      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a3c:	2304      	movs	r3, #4
 8000a3e:	e006      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a40:	2303      	movs	r3, #3
 8000a42:	e004      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a44:	2302      	movs	r3, #2
 8000a46:	e002      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a48:	2301      	movs	r3, #1
 8000a4a:	e000      	b.n	8000a4e <CARME_GPIO_Init+0x1ca>
 8000a4c:	2300      	movs	r3, #0
 8000a4e:	7dfa      	ldrb	r2, [r7, #23]
 8000a50:	00d2      	lsls	r2, r2, #3
 8000a52:	68f8      	ldr	r0, [r7, #12]
 8000a54:	4402      	add	r2, r0
 8000a56:	79d2      	ldrb	r2, [r2, #7]
 8000a58:	4608      	mov	r0, r1
 8000a5a:	4619      	mov	r1, r3
 8000a5c:	f000 fb2c 	bl	80010b8 <GPIO_PinAFConfig>
 8000a60:	7dfb      	ldrb	r3, [r7, #23]
 8000a62:	3301      	adds	r3, #1
 8000a64:	75fb      	strb	r3, [r7, #23]
 8000a66:	7dfa      	ldrb	r2, [r7, #23]
 8000a68:	79fb      	ldrb	r3, [r7, #7]
 8000a6a:	429a      	cmp	r2, r3
 8000a6c:	f4ff af14 	bcc.w	8000898 <CARME_GPIO_Init+0x14>
 8000a70:	3718      	adds	r7, #24
 8000a72:	46bd      	mov	sp, r7
 8000a74:	bd80      	pop	{r7, pc}
 8000a76:	bf00      	nop

08000a78 <SystemInit>:
 8000a78:	b580      	push	{r7, lr}
 8000a7a:	af00      	add	r7, sp, #0
 8000a7c:	4b15      	ldr	r3, [pc, #84]	; (8000ad4 <SystemInit+0x5c>)
 8000a7e:	4a15      	ldr	r2, [pc, #84]	; (8000ad4 <SystemInit+0x5c>)
 8000a80:	f8d2 2088 	ldr.w	r2, [r2, #136]	; 0x88
 8000a84:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8000a88:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8000a8c:	4b12      	ldr	r3, [pc, #72]	; (8000ad8 <SystemInit+0x60>)
 8000a8e:	4a12      	ldr	r2, [pc, #72]	; (8000ad8 <SystemInit+0x60>)
 8000a90:	6812      	ldr	r2, [r2, #0]
 8000a92:	f042 0201 	orr.w	r2, r2, #1
 8000a96:	601a      	str	r2, [r3, #0]
 8000a98:	4b0f      	ldr	r3, [pc, #60]	; (8000ad8 <SystemInit+0x60>)
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	609a      	str	r2, [r3, #8]
 8000a9e:	4a0e      	ldr	r2, [pc, #56]	; (8000ad8 <SystemInit+0x60>)
 8000aa0:	4b0d      	ldr	r3, [pc, #52]	; (8000ad8 <SystemInit+0x60>)
 8000aa2:	681b      	ldr	r3, [r3, #0]
 8000aa4:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000aa8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000aac:	6013      	str	r3, [r2, #0]
 8000aae:	4b0a      	ldr	r3, [pc, #40]	; (8000ad8 <SystemInit+0x60>)
 8000ab0:	4a0a      	ldr	r2, [pc, #40]	; (8000adc <SystemInit+0x64>)
 8000ab2:	605a      	str	r2, [r3, #4]
 8000ab4:	4b08      	ldr	r3, [pc, #32]	; (8000ad8 <SystemInit+0x60>)
 8000ab6:	4a08      	ldr	r2, [pc, #32]	; (8000ad8 <SystemInit+0x60>)
 8000ab8:	6812      	ldr	r2, [r2, #0]
 8000aba:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000abe:	601a      	str	r2, [r3, #0]
 8000ac0:	4b05      	ldr	r3, [pc, #20]	; (8000ad8 <SystemInit+0x60>)
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	60da      	str	r2, [r3, #12]
 8000ac6:	f000 f80b 	bl	8000ae0 <SetSysClock>
 8000aca:	4b02      	ldr	r3, [pc, #8]	; (8000ad4 <SystemInit+0x5c>)
 8000acc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000ad0:	609a      	str	r2, [r3, #8]
 8000ad2:	bd80      	pop	{r7, pc}
 8000ad4:	e000ed00 	.word	0xe000ed00
 8000ad8:	40023800 	.word	0x40023800
 8000adc:	24003010 	.word	0x24003010

08000ae0 <SetSysClock>:
 8000ae0:	b480      	push	{r7}
 8000ae2:	b083      	sub	sp, #12
 8000ae4:	af00      	add	r7, sp, #0
 8000ae6:	2300      	movs	r3, #0
 8000ae8:	607b      	str	r3, [r7, #4]
 8000aea:	2300      	movs	r3, #0
 8000aec:	603b      	str	r3, [r7, #0]
 8000aee:	4b35      	ldr	r3, [pc, #212]	; (8000bc4 <SetSysClock+0xe4>)
 8000af0:	4a34      	ldr	r2, [pc, #208]	; (8000bc4 <SetSysClock+0xe4>)
 8000af2:	6812      	ldr	r2, [r2, #0]
 8000af4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8000af8:	601a      	str	r2, [r3, #0]
 8000afa:	4b32      	ldr	r3, [pc, #200]	; (8000bc4 <SetSysClock+0xe4>)
 8000afc:	681b      	ldr	r3, [r3, #0]
 8000afe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000b02:	603b      	str	r3, [r7, #0]
 8000b04:	687b      	ldr	r3, [r7, #4]
 8000b06:	3301      	adds	r3, #1
 8000b08:	607b      	str	r3, [r7, #4]
 8000b0a:	683b      	ldr	r3, [r7, #0]
 8000b0c:	2b00      	cmp	r3, #0
 8000b0e:	d103      	bne.n	8000b18 <SetSysClock+0x38>
 8000b10:	687b      	ldr	r3, [r7, #4]
 8000b12:	f5b3 4fa0 	cmp.w	r3, #20480	; 0x5000
 8000b16:	d1f0      	bne.n	8000afa <SetSysClock+0x1a>
 8000b18:	4b2a      	ldr	r3, [pc, #168]	; (8000bc4 <SetSysClock+0xe4>)
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	d002      	beq.n	8000b2a <SetSysClock+0x4a>
 8000b24:	2301      	movs	r3, #1
 8000b26:	603b      	str	r3, [r7, #0]
 8000b28:	e001      	b.n	8000b2e <SetSysClock+0x4e>
 8000b2a:	2300      	movs	r3, #0
 8000b2c:	603b      	str	r3, [r7, #0]
 8000b2e:	683b      	ldr	r3, [r7, #0]
 8000b30:	2b01      	cmp	r3, #1
 8000b32:	d142      	bne.n	8000bba <SetSysClock+0xda>
 8000b34:	4b23      	ldr	r3, [pc, #140]	; (8000bc4 <SetSysClock+0xe4>)
 8000b36:	4a23      	ldr	r2, [pc, #140]	; (8000bc4 <SetSysClock+0xe4>)
 8000b38:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000b3a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000b3e:	641a      	str	r2, [r3, #64]	; 0x40
 8000b40:	4b21      	ldr	r3, [pc, #132]	; (8000bc8 <SetSysClock+0xe8>)
 8000b42:	4a21      	ldr	r2, [pc, #132]	; (8000bc8 <SetSysClock+0xe8>)
 8000b44:	6812      	ldr	r2, [r2, #0]
 8000b46:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000b4a:	601a      	str	r2, [r3, #0]
 8000b4c:	4b1d      	ldr	r3, [pc, #116]	; (8000bc4 <SetSysClock+0xe4>)
 8000b4e:	4a1d      	ldr	r2, [pc, #116]	; (8000bc4 <SetSysClock+0xe4>)
 8000b50:	6892      	ldr	r2, [r2, #8]
 8000b52:	609a      	str	r2, [r3, #8]
 8000b54:	4b1b      	ldr	r3, [pc, #108]	; (8000bc4 <SetSysClock+0xe4>)
 8000b56:	4a1b      	ldr	r2, [pc, #108]	; (8000bc4 <SetSysClock+0xe4>)
 8000b58:	6892      	ldr	r2, [r2, #8]
 8000b5a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8000b5e:	609a      	str	r2, [r3, #8]
 8000b60:	4b18      	ldr	r3, [pc, #96]	; (8000bc4 <SetSysClock+0xe4>)
 8000b62:	4a18      	ldr	r2, [pc, #96]	; (8000bc4 <SetSysClock+0xe4>)
 8000b64:	6892      	ldr	r2, [r2, #8]
 8000b66:	f442 52a0 	orr.w	r2, r2, #5120	; 0x1400
 8000b6a:	609a      	str	r2, [r3, #8]
 8000b6c:	4b15      	ldr	r3, [pc, #84]	; (8000bc4 <SetSysClock+0xe4>)
 8000b6e:	4a17      	ldr	r2, [pc, #92]	; (8000bcc <SetSysClock+0xec>)
 8000b70:	605a      	str	r2, [r3, #4]
 8000b72:	4b14      	ldr	r3, [pc, #80]	; (8000bc4 <SetSysClock+0xe4>)
 8000b74:	4a13      	ldr	r2, [pc, #76]	; (8000bc4 <SetSysClock+0xe4>)
 8000b76:	6812      	ldr	r2, [r2, #0]
 8000b78:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8000b7c:	601a      	str	r2, [r3, #0]
 8000b7e:	bf00      	nop
 8000b80:	4b10      	ldr	r3, [pc, #64]	; (8000bc4 <SetSysClock+0xe4>)
 8000b82:	681b      	ldr	r3, [r3, #0]
 8000b84:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000b88:	2b00      	cmp	r3, #0
 8000b8a:	d0f9      	beq.n	8000b80 <SetSysClock+0xa0>
 8000b8c:	4b10      	ldr	r3, [pc, #64]	; (8000bd0 <SetSysClock+0xf0>)
 8000b8e:	f240 7205 	movw	r2, #1797	; 0x705
 8000b92:	601a      	str	r2, [r3, #0]
 8000b94:	4b0b      	ldr	r3, [pc, #44]	; (8000bc4 <SetSysClock+0xe4>)
 8000b96:	4a0b      	ldr	r2, [pc, #44]	; (8000bc4 <SetSysClock+0xe4>)
 8000b98:	6892      	ldr	r2, [r2, #8]
 8000b9a:	f022 0203 	bic.w	r2, r2, #3
 8000b9e:	609a      	str	r2, [r3, #8]
 8000ba0:	4b08      	ldr	r3, [pc, #32]	; (8000bc4 <SetSysClock+0xe4>)
 8000ba2:	4a08      	ldr	r2, [pc, #32]	; (8000bc4 <SetSysClock+0xe4>)
 8000ba4:	6892      	ldr	r2, [r2, #8]
 8000ba6:	f042 0202 	orr.w	r2, r2, #2
 8000baa:	609a      	str	r2, [r3, #8]
 8000bac:	bf00      	nop
 8000bae:	4b05      	ldr	r3, [pc, #20]	; (8000bc4 <SetSysClock+0xe4>)
 8000bb0:	689b      	ldr	r3, [r3, #8]
 8000bb2:	f003 030c 	and.w	r3, r3, #12
 8000bb6:	2b08      	cmp	r3, #8
 8000bb8:	d1f9      	bne.n	8000bae <SetSysClock+0xce>
 8000bba:	370c      	adds	r7, #12
 8000bbc:	46bd      	mov	sp, r7
 8000bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bc2:	4770      	bx	lr
 8000bc4:	40023800 	.word	0x40023800
 8000bc8:	40007000 	.word	0x40007000
 8000bcc:	07405419 	.word	0x07405419
 8000bd0:	40023c00 	.word	0x40023c00

08000bd4 <EXTI_GetITStatus>:
 8000bd4:	b480      	push	{r7}
 8000bd6:	b085      	sub	sp, #20
 8000bd8:	af00      	add	r7, sp, #0
 8000bda:	6078      	str	r0, [r7, #4]
 8000bdc:	2300      	movs	r3, #0
 8000bde:	73fb      	strb	r3, [r7, #15]
 8000be0:	4b08      	ldr	r3, [pc, #32]	; (8000c04 <EXTI_GetITStatus+0x30>)
 8000be2:	695a      	ldr	r2, [r3, #20]
 8000be4:	687b      	ldr	r3, [r7, #4]
 8000be6:	4013      	ands	r3, r2
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d002      	beq.n	8000bf2 <EXTI_GetITStatus+0x1e>
 8000bec:	2301      	movs	r3, #1
 8000bee:	73fb      	strb	r3, [r7, #15]
 8000bf0:	e001      	b.n	8000bf6 <EXTI_GetITStatus+0x22>
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	73fb      	strb	r3, [r7, #15]
 8000bf6:	7bfb      	ldrb	r3, [r7, #15]
 8000bf8:	4618      	mov	r0, r3
 8000bfa:	3714      	adds	r7, #20
 8000bfc:	46bd      	mov	sp, r7
 8000bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c02:	4770      	bx	lr
 8000c04:	40013c00 	.word	0x40013c00

08000c08 <EXTI_ClearITPendingBit>:
 8000c08:	b480      	push	{r7}
 8000c0a:	b083      	sub	sp, #12
 8000c0c:	af00      	add	r7, sp, #0
 8000c0e:	6078      	str	r0, [r7, #4]
 8000c10:	4b03      	ldr	r3, [pc, #12]	; (8000c20 <EXTI_ClearITPendingBit+0x18>)
 8000c12:	687a      	ldr	r2, [r7, #4]
 8000c14:	615a      	str	r2, [r3, #20]
 8000c16:	370c      	adds	r7, #12
 8000c18:	46bd      	mov	sp, r7
 8000c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c1e:	4770      	bx	lr
 8000c20:	40013c00 	.word	0x40013c00

08000c24 <FSMC_NORSRAMDeInit>:
 8000c24:	b480      	push	{r7}
 8000c26:	b083      	sub	sp, #12
 8000c28:	af00      	add	r7, sp, #0
 8000c2a:	6078      	str	r0, [r7, #4]
 8000c2c:	687b      	ldr	r3, [r7, #4]
 8000c2e:	2b00      	cmp	r3, #0
 8000c30:	d107      	bne.n	8000c42 <FSMC_NORSRAMDeInit+0x1e>
 8000c32:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000c36:	687a      	ldr	r2, [r7, #4]
 8000c38:	f243 01db 	movw	r1, #12507	; 0x30db
 8000c3c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000c40:	e006      	b.n	8000c50 <FSMC_NORSRAMDeInit+0x2c>
 8000c42:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000c46:	687a      	ldr	r2, [r7, #4]
 8000c48:	f243 01d2 	movw	r1, #12498	; 0x30d2
 8000c4c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000c50:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000c54:	687a      	ldr	r2, [r7, #4]
 8000c56:	3201      	adds	r2, #1
 8000c58:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8000c5c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000c60:	4b05      	ldr	r3, [pc, #20]	; (8000c78 <FSMC_NORSRAMDeInit+0x54>)
 8000c62:	687a      	ldr	r2, [r7, #4]
 8000c64:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8000c68:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000c6c:	370c      	adds	r7, #12
 8000c6e:	46bd      	mov	sp, r7
 8000c70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c74:	4770      	bx	lr
 8000c76:	bf00      	nop
 8000c78:	a0000104 	.word	0xa0000104

08000c7c <FSMC_NORSRAMInit>:
 8000c7c:	b480      	push	{r7}
 8000c7e:	b083      	sub	sp, #12
 8000c80:	af00      	add	r7, sp, #0
 8000c82:	6078      	str	r0, [r7, #4]
 8000c84:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000c88:	687a      	ldr	r2, [r7, #4]
 8000c8a:	6812      	ldr	r2, [r2, #0]
 8000c8c:	6879      	ldr	r1, [r7, #4]
 8000c8e:	6848      	ldr	r0, [r1, #4]
 8000c90:	6879      	ldr	r1, [r7, #4]
 8000c92:	6889      	ldr	r1, [r1, #8]
 8000c94:	4308      	orrs	r0, r1
 8000c96:	6879      	ldr	r1, [r7, #4]
 8000c98:	68c9      	ldr	r1, [r1, #12]
 8000c9a:	4308      	orrs	r0, r1
 8000c9c:	6879      	ldr	r1, [r7, #4]
 8000c9e:	6909      	ldr	r1, [r1, #16]
 8000ca0:	4308      	orrs	r0, r1
 8000ca2:	6879      	ldr	r1, [r7, #4]
 8000ca4:	6949      	ldr	r1, [r1, #20]
 8000ca6:	4308      	orrs	r0, r1
 8000ca8:	6879      	ldr	r1, [r7, #4]
 8000caa:	6989      	ldr	r1, [r1, #24]
 8000cac:	4308      	orrs	r0, r1
 8000cae:	6879      	ldr	r1, [r7, #4]
 8000cb0:	69c9      	ldr	r1, [r1, #28]
 8000cb2:	4308      	orrs	r0, r1
 8000cb4:	6879      	ldr	r1, [r7, #4]
 8000cb6:	6a09      	ldr	r1, [r1, #32]
 8000cb8:	4308      	orrs	r0, r1
 8000cba:	6879      	ldr	r1, [r7, #4]
 8000cbc:	6a49      	ldr	r1, [r1, #36]	; 0x24
 8000cbe:	4308      	orrs	r0, r1
 8000cc0:	6879      	ldr	r1, [r7, #4]
 8000cc2:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8000cc4:	4308      	orrs	r0, r1
 8000cc6:	6879      	ldr	r1, [r7, #4]
 8000cc8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8000cca:	4308      	orrs	r0, r1
 8000ccc:	6879      	ldr	r1, [r7, #4]
 8000cce:	6b09      	ldr	r1, [r1, #48]	; 0x30
 8000cd0:	4301      	orrs	r1, r0
 8000cd2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000cd6:	687b      	ldr	r3, [r7, #4]
 8000cd8:	689b      	ldr	r3, [r3, #8]
 8000cda:	2b08      	cmp	r3, #8
 8000cdc:	d10d      	bne.n	8000cfa <FSMC_NORSRAMInit+0x7e>
 8000cde:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000ce2:	687a      	ldr	r2, [r7, #4]
 8000ce4:	6812      	ldr	r2, [r2, #0]
 8000ce6:	f04f 4120 	mov.w	r1, #2684354560	; 0xa0000000
 8000cea:	6878      	ldr	r0, [r7, #4]
 8000cec:	6800      	ldr	r0, [r0, #0]
 8000cee:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8000cf2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000cf6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000cfa:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000cfe:	687a      	ldr	r2, [r7, #4]
 8000d00:	6812      	ldr	r2, [r2, #0]
 8000d02:	3201      	adds	r2, #1
 8000d04:	6879      	ldr	r1, [r7, #4]
 8000d06:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8000d08:	6808      	ldr	r0, [r1, #0]
 8000d0a:	6879      	ldr	r1, [r7, #4]
 8000d0c:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8000d0e:	6849      	ldr	r1, [r1, #4]
 8000d10:	0109      	lsls	r1, r1, #4
 8000d12:	4308      	orrs	r0, r1
 8000d14:	6879      	ldr	r1, [r7, #4]
 8000d16:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8000d18:	6889      	ldr	r1, [r1, #8]
 8000d1a:	0209      	lsls	r1, r1, #8
 8000d1c:	4308      	orrs	r0, r1
 8000d1e:	6879      	ldr	r1, [r7, #4]
 8000d20:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8000d22:	68c9      	ldr	r1, [r1, #12]
 8000d24:	0409      	lsls	r1, r1, #16
 8000d26:	4308      	orrs	r0, r1
 8000d28:	6879      	ldr	r1, [r7, #4]
 8000d2a:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8000d2c:	6909      	ldr	r1, [r1, #16]
 8000d2e:	0509      	lsls	r1, r1, #20
 8000d30:	4308      	orrs	r0, r1
 8000d32:	6879      	ldr	r1, [r7, #4]
 8000d34:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8000d36:	6949      	ldr	r1, [r1, #20]
 8000d38:	0609      	lsls	r1, r1, #24
 8000d3a:	4308      	orrs	r0, r1
 8000d3c:	6879      	ldr	r1, [r7, #4]
 8000d3e:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8000d40:	6989      	ldr	r1, [r1, #24]
 8000d42:	4301      	orrs	r1, r0
 8000d44:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000d48:	687b      	ldr	r3, [r7, #4]
 8000d4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000d4c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8000d50:	d120      	bne.n	8000d94 <FSMC_NORSRAMInit+0x118>
 8000d52:	4b16      	ldr	r3, [pc, #88]	; (8000dac <FSMC_NORSRAMInit+0x130>)
 8000d54:	687a      	ldr	r2, [r7, #4]
 8000d56:	6812      	ldr	r2, [r2, #0]
 8000d58:	6879      	ldr	r1, [r7, #4]
 8000d5a:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8000d5c:	6808      	ldr	r0, [r1, #0]
 8000d5e:	6879      	ldr	r1, [r7, #4]
 8000d60:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8000d62:	6849      	ldr	r1, [r1, #4]
 8000d64:	0109      	lsls	r1, r1, #4
 8000d66:	4308      	orrs	r0, r1
 8000d68:	6879      	ldr	r1, [r7, #4]
 8000d6a:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8000d6c:	6889      	ldr	r1, [r1, #8]
 8000d6e:	0209      	lsls	r1, r1, #8
 8000d70:	4308      	orrs	r0, r1
 8000d72:	6879      	ldr	r1, [r7, #4]
 8000d74:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8000d76:	6909      	ldr	r1, [r1, #16]
 8000d78:	0509      	lsls	r1, r1, #20
 8000d7a:	4308      	orrs	r0, r1
 8000d7c:	6879      	ldr	r1, [r7, #4]
 8000d7e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8000d80:	6949      	ldr	r1, [r1, #20]
 8000d82:	0609      	lsls	r1, r1, #24
 8000d84:	4308      	orrs	r0, r1
 8000d86:	6879      	ldr	r1, [r7, #4]
 8000d88:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8000d8a:	6989      	ldr	r1, [r1, #24]
 8000d8c:	4301      	orrs	r1, r0
 8000d8e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000d92:	e006      	b.n	8000da2 <FSMC_NORSRAMInit+0x126>
 8000d94:	4b05      	ldr	r3, [pc, #20]	; (8000dac <FSMC_NORSRAMInit+0x130>)
 8000d96:	687a      	ldr	r2, [r7, #4]
 8000d98:	6812      	ldr	r2, [r2, #0]
 8000d9a:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8000d9e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000da2:	370c      	adds	r7, #12
 8000da4:	46bd      	mov	sp, r7
 8000da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000daa:	4770      	bx	lr
 8000dac:	a0000104 	.word	0xa0000104

08000db0 <FSMC_NORSRAMCmd>:
 8000db0:	b480      	push	{r7}
 8000db2:	b083      	sub	sp, #12
 8000db4:	af00      	add	r7, sp, #0
 8000db6:	6078      	str	r0, [r7, #4]
 8000db8:	460b      	mov	r3, r1
 8000dba:	70fb      	strb	r3, [r7, #3]
 8000dbc:	78fb      	ldrb	r3, [r7, #3]
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d00c      	beq.n	8000ddc <FSMC_NORSRAMCmd+0x2c>
 8000dc2:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000dc6:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8000dca:	6879      	ldr	r1, [r7, #4]
 8000dcc:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000dd0:	f042 0101 	orr.w	r1, r2, #1
 8000dd4:	687a      	ldr	r2, [r7, #4]
 8000dd6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000dda:	e00b      	b.n	8000df4 <FSMC_NORSRAMCmd+0x44>
 8000ddc:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8000de0:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000de4:	6879      	ldr	r1, [r7, #4]
 8000de6:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8000dea:	4b05      	ldr	r3, [pc, #20]	; (8000e00 <FSMC_NORSRAMCmd+0x50>)
 8000dec:	400b      	ands	r3, r1
 8000dee:	6879      	ldr	r1, [r7, #4]
 8000df0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8000df4:	370c      	adds	r7, #12
 8000df6:	46bd      	mov	sp, r7
 8000df8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dfc:	4770      	bx	lr
 8000dfe:	bf00      	nop
 8000e00:	000ffffe 	.word	0x000ffffe

08000e04 <GPIO_DeInit>:
 8000e04:	b580      	push	{r7, lr}
 8000e06:	b082      	sub	sp, #8
 8000e08:	af00      	add	r7, sp, #0
 8000e0a:	6078      	str	r0, [r7, #4]
 8000e0c:	687a      	ldr	r2, [r7, #4]
 8000e0e:	4b4b      	ldr	r3, [pc, #300]	; (8000f3c <GPIO_DeInit+0x138>)
 8000e10:	429a      	cmp	r2, r3
 8000e12:	d108      	bne.n	8000e26 <GPIO_DeInit+0x22>
 8000e14:	2001      	movs	r0, #1
 8000e16:	2101      	movs	r1, #1
 8000e18:	f000 f9ee 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e1c:	2001      	movs	r0, #1
 8000e1e:	2100      	movs	r1, #0
 8000e20:	f000 f9ea 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e24:	e086      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000e26:	687a      	ldr	r2, [r7, #4]
 8000e28:	4b45      	ldr	r3, [pc, #276]	; (8000f40 <GPIO_DeInit+0x13c>)
 8000e2a:	429a      	cmp	r2, r3
 8000e2c:	d108      	bne.n	8000e40 <GPIO_DeInit+0x3c>
 8000e2e:	2002      	movs	r0, #2
 8000e30:	2101      	movs	r1, #1
 8000e32:	f000 f9e1 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e36:	2002      	movs	r0, #2
 8000e38:	2100      	movs	r1, #0
 8000e3a:	f000 f9dd 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e3e:	e079      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000e40:	687a      	ldr	r2, [r7, #4]
 8000e42:	4b40      	ldr	r3, [pc, #256]	; (8000f44 <GPIO_DeInit+0x140>)
 8000e44:	429a      	cmp	r2, r3
 8000e46:	d108      	bne.n	8000e5a <GPIO_DeInit+0x56>
 8000e48:	2004      	movs	r0, #4
 8000e4a:	2101      	movs	r1, #1
 8000e4c:	f000 f9d4 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e50:	2004      	movs	r0, #4
 8000e52:	2100      	movs	r1, #0
 8000e54:	f000 f9d0 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e58:	e06c      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000e5a:	687a      	ldr	r2, [r7, #4]
 8000e5c:	4b3a      	ldr	r3, [pc, #232]	; (8000f48 <GPIO_DeInit+0x144>)
 8000e5e:	429a      	cmp	r2, r3
 8000e60:	d108      	bne.n	8000e74 <GPIO_DeInit+0x70>
 8000e62:	2008      	movs	r0, #8
 8000e64:	2101      	movs	r1, #1
 8000e66:	f000 f9c7 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e6a:	2008      	movs	r0, #8
 8000e6c:	2100      	movs	r1, #0
 8000e6e:	f000 f9c3 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e72:	e05f      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000e74:	687a      	ldr	r2, [r7, #4]
 8000e76:	4b35      	ldr	r3, [pc, #212]	; (8000f4c <GPIO_DeInit+0x148>)
 8000e78:	429a      	cmp	r2, r3
 8000e7a:	d108      	bne.n	8000e8e <GPIO_DeInit+0x8a>
 8000e7c:	2010      	movs	r0, #16
 8000e7e:	2101      	movs	r1, #1
 8000e80:	f000 f9ba 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e84:	2010      	movs	r0, #16
 8000e86:	2100      	movs	r1, #0
 8000e88:	f000 f9b6 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e8c:	e052      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000e8e:	687a      	ldr	r2, [r7, #4]
 8000e90:	4b2f      	ldr	r3, [pc, #188]	; (8000f50 <GPIO_DeInit+0x14c>)
 8000e92:	429a      	cmp	r2, r3
 8000e94:	d108      	bne.n	8000ea8 <GPIO_DeInit+0xa4>
 8000e96:	2020      	movs	r0, #32
 8000e98:	2101      	movs	r1, #1
 8000e9a:	f000 f9ad 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000e9e:	2020      	movs	r0, #32
 8000ea0:	2100      	movs	r1, #0
 8000ea2:	f000 f9a9 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000ea6:	e045      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000ea8:	687a      	ldr	r2, [r7, #4]
 8000eaa:	4b2a      	ldr	r3, [pc, #168]	; (8000f54 <GPIO_DeInit+0x150>)
 8000eac:	429a      	cmp	r2, r3
 8000eae:	d108      	bne.n	8000ec2 <GPIO_DeInit+0xbe>
 8000eb0:	2040      	movs	r0, #64	; 0x40
 8000eb2:	2101      	movs	r1, #1
 8000eb4:	f000 f9a0 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000eb8:	2040      	movs	r0, #64	; 0x40
 8000eba:	2100      	movs	r1, #0
 8000ebc:	f000 f99c 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000ec0:	e038      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000ec2:	687a      	ldr	r2, [r7, #4]
 8000ec4:	4b24      	ldr	r3, [pc, #144]	; (8000f58 <GPIO_DeInit+0x154>)
 8000ec6:	429a      	cmp	r2, r3
 8000ec8:	d108      	bne.n	8000edc <GPIO_DeInit+0xd8>
 8000eca:	2080      	movs	r0, #128	; 0x80
 8000ecc:	2101      	movs	r1, #1
 8000ece:	f000 f993 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000ed2:	2080      	movs	r0, #128	; 0x80
 8000ed4:	2100      	movs	r1, #0
 8000ed6:	f000 f98f 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000eda:	e02b      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000edc:	687a      	ldr	r2, [r7, #4]
 8000ede:	4b1f      	ldr	r3, [pc, #124]	; (8000f5c <GPIO_DeInit+0x158>)
 8000ee0:	429a      	cmp	r2, r3
 8000ee2:	d10a      	bne.n	8000efa <GPIO_DeInit+0xf6>
 8000ee4:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000ee8:	2101      	movs	r1, #1
 8000eea:	f000 f985 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000eee:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000ef2:	2100      	movs	r1, #0
 8000ef4:	f000 f980 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000ef8:	e01c      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000efa:	687a      	ldr	r2, [r7, #4]
 8000efc:	4b18      	ldr	r3, [pc, #96]	; (8000f60 <GPIO_DeInit+0x15c>)
 8000efe:	429a      	cmp	r2, r3
 8000f00:	d10a      	bne.n	8000f18 <GPIO_DeInit+0x114>
 8000f02:	f44f 7000 	mov.w	r0, #512	; 0x200
 8000f06:	2101      	movs	r1, #1
 8000f08:	f000 f976 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000f0c:	f44f 7000 	mov.w	r0, #512	; 0x200
 8000f10:	2100      	movs	r1, #0
 8000f12:	f000 f971 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000f16:	e00d      	b.n	8000f34 <GPIO_DeInit+0x130>
 8000f18:	687a      	ldr	r2, [r7, #4]
 8000f1a:	4b12      	ldr	r3, [pc, #72]	; (8000f64 <GPIO_DeInit+0x160>)
 8000f1c:	429a      	cmp	r2, r3
 8000f1e:	d109      	bne.n	8000f34 <GPIO_DeInit+0x130>
 8000f20:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8000f24:	2101      	movs	r1, #1
 8000f26:	f000 f967 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000f2a:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8000f2e:	2100      	movs	r1, #0
 8000f30:	f000 f962 	bl	80011f8 <RCC_AHB1PeriphResetCmd>
 8000f34:	3708      	adds	r7, #8
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bd80      	pop	{r7, pc}
 8000f3a:	bf00      	nop
 8000f3c:	40020000 	.word	0x40020000
 8000f40:	40020400 	.word	0x40020400
 8000f44:	40020800 	.word	0x40020800
 8000f48:	40020c00 	.word	0x40020c00
 8000f4c:	40021000 	.word	0x40021000
 8000f50:	40021400 	.word	0x40021400
 8000f54:	40021800 	.word	0x40021800
 8000f58:	40021c00 	.word	0x40021c00
 8000f5c:	40022000 	.word	0x40022000
 8000f60:	40022400 	.word	0x40022400
 8000f64:	40022800 	.word	0x40022800

08000f68 <GPIO_Init>:
 8000f68:	b480      	push	{r7}
 8000f6a:	b087      	sub	sp, #28
 8000f6c:	af00      	add	r7, sp, #0
 8000f6e:	6078      	str	r0, [r7, #4]
 8000f70:	6039      	str	r1, [r7, #0]
 8000f72:	2300      	movs	r3, #0
 8000f74:	617b      	str	r3, [r7, #20]
 8000f76:	2300      	movs	r3, #0
 8000f78:	613b      	str	r3, [r7, #16]
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	60fb      	str	r3, [r7, #12]
 8000f7e:	2300      	movs	r3, #0
 8000f80:	617b      	str	r3, [r7, #20]
 8000f82:	e076      	b.n	8001072 <GPIO_Init+0x10a>
 8000f84:	697b      	ldr	r3, [r7, #20]
 8000f86:	2201      	movs	r2, #1
 8000f88:	fa02 f303 	lsl.w	r3, r2, r3
 8000f8c:	613b      	str	r3, [r7, #16]
 8000f8e:	683b      	ldr	r3, [r7, #0]
 8000f90:	681a      	ldr	r2, [r3, #0]
 8000f92:	693b      	ldr	r3, [r7, #16]
 8000f94:	4013      	ands	r3, r2
 8000f96:	60fb      	str	r3, [r7, #12]
 8000f98:	68fa      	ldr	r2, [r7, #12]
 8000f9a:	693b      	ldr	r3, [r7, #16]
 8000f9c:	429a      	cmp	r2, r3
 8000f9e:	d165      	bne.n	800106c <GPIO_Init+0x104>
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	681a      	ldr	r2, [r3, #0]
 8000fa4:	697b      	ldr	r3, [r7, #20]
 8000fa6:	005b      	lsls	r3, r3, #1
 8000fa8:	2103      	movs	r1, #3
 8000faa:	fa01 f303 	lsl.w	r3, r1, r3
 8000fae:	43db      	mvns	r3, r3
 8000fb0:	401a      	ands	r2, r3
 8000fb2:	687b      	ldr	r3, [r7, #4]
 8000fb4:	601a      	str	r2, [r3, #0]
 8000fb6:	687b      	ldr	r3, [r7, #4]
 8000fb8:	681a      	ldr	r2, [r3, #0]
 8000fba:	683b      	ldr	r3, [r7, #0]
 8000fbc:	791b      	ldrb	r3, [r3, #4]
 8000fbe:	4619      	mov	r1, r3
 8000fc0:	697b      	ldr	r3, [r7, #20]
 8000fc2:	005b      	lsls	r3, r3, #1
 8000fc4:	fa01 f303 	lsl.w	r3, r1, r3
 8000fc8:	431a      	orrs	r2, r3
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	601a      	str	r2, [r3, #0]
 8000fce:	683b      	ldr	r3, [r7, #0]
 8000fd0:	791b      	ldrb	r3, [r3, #4]
 8000fd2:	2b01      	cmp	r3, #1
 8000fd4:	d003      	beq.n	8000fde <GPIO_Init+0x76>
 8000fd6:	683b      	ldr	r3, [r7, #0]
 8000fd8:	791b      	ldrb	r3, [r3, #4]
 8000fda:	2b02      	cmp	r3, #2
 8000fdc:	d12e      	bne.n	800103c <GPIO_Init+0xd4>
 8000fde:	687b      	ldr	r3, [r7, #4]
 8000fe0:	689a      	ldr	r2, [r3, #8]
 8000fe2:	697b      	ldr	r3, [r7, #20]
 8000fe4:	005b      	lsls	r3, r3, #1
 8000fe6:	2103      	movs	r1, #3
 8000fe8:	fa01 f303 	lsl.w	r3, r1, r3
 8000fec:	43db      	mvns	r3, r3
 8000fee:	401a      	ands	r2, r3
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	609a      	str	r2, [r3, #8]
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	689a      	ldr	r2, [r3, #8]
 8000ff8:	683b      	ldr	r3, [r7, #0]
 8000ffa:	795b      	ldrb	r3, [r3, #5]
 8000ffc:	4619      	mov	r1, r3
 8000ffe:	697b      	ldr	r3, [r7, #20]
 8001000:	005b      	lsls	r3, r3, #1
 8001002:	fa01 f303 	lsl.w	r3, r1, r3
 8001006:	431a      	orrs	r2, r3
 8001008:	687b      	ldr	r3, [r7, #4]
 800100a:	609a      	str	r2, [r3, #8]
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	685a      	ldr	r2, [r3, #4]
 8001010:	697b      	ldr	r3, [r7, #20]
 8001012:	b29b      	uxth	r3, r3
 8001014:	2101      	movs	r1, #1
 8001016:	fa01 f303 	lsl.w	r3, r1, r3
 800101a:	43db      	mvns	r3, r3
 800101c:	401a      	ands	r2, r3
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	605a      	str	r2, [r3, #4]
 8001022:	687b      	ldr	r3, [r7, #4]
 8001024:	685a      	ldr	r2, [r3, #4]
 8001026:	683b      	ldr	r3, [r7, #0]
 8001028:	799b      	ldrb	r3, [r3, #6]
 800102a:	4619      	mov	r1, r3
 800102c:	697b      	ldr	r3, [r7, #20]
 800102e:	b29b      	uxth	r3, r3
 8001030:	fa01 f303 	lsl.w	r3, r1, r3
 8001034:	b29b      	uxth	r3, r3
 8001036:	431a      	orrs	r2, r3
 8001038:	687b      	ldr	r3, [r7, #4]
 800103a:	605a      	str	r2, [r3, #4]
 800103c:	687b      	ldr	r3, [r7, #4]
 800103e:	68da      	ldr	r2, [r3, #12]
 8001040:	697b      	ldr	r3, [r7, #20]
 8001042:	b29b      	uxth	r3, r3
 8001044:	005b      	lsls	r3, r3, #1
 8001046:	2103      	movs	r1, #3
 8001048:	fa01 f303 	lsl.w	r3, r1, r3
 800104c:	43db      	mvns	r3, r3
 800104e:	401a      	ands	r2, r3
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	60da      	str	r2, [r3, #12]
 8001054:	687b      	ldr	r3, [r7, #4]
 8001056:	68da      	ldr	r2, [r3, #12]
 8001058:	683b      	ldr	r3, [r7, #0]
 800105a:	79db      	ldrb	r3, [r3, #7]
 800105c:	4619      	mov	r1, r3
 800105e:	697b      	ldr	r3, [r7, #20]
 8001060:	005b      	lsls	r3, r3, #1
 8001062:	fa01 f303 	lsl.w	r3, r1, r3
 8001066:	431a      	orrs	r2, r3
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	60da      	str	r2, [r3, #12]
 800106c:	697b      	ldr	r3, [r7, #20]
 800106e:	3301      	adds	r3, #1
 8001070:	617b      	str	r3, [r7, #20]
 8001072:	697b      	ldr	r3, [r7, #20]
 8001074:	2b0f      	cmp	r3, #15
 8001076:	d985      	bls.n	8000f84 <GPIO_Init+0x1c>
 8001078:	371c      	adds	r7, #28
 800107a:	46bd      	mov	sp, r7
 800107c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001080:	4770      	bx	lr
 8001082:	bf00      	nop

08001084 <GPIO_StructInit>:
 8001084:	b480      	push	{r7}
 8001086:	b083      	sub	sp, #12
 8001088:	af00      	add	r7, sp, #0
 800108a:	6078      	str	r0, [r7, #4]
 800108c:	687b      	ldr	r3, [r7, #4]
 800108e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001092:	601a      	str	r2, [r3, #0]
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	2200      	movs	r2, #0
 8001098:	711a      	strb	r2, [r3, #4]
 800109a:	687b      	ldr	r3, [r7, #4]
 800109c:	2200      	movs	r2, #0
 800109e:	715a      	strb	r2, [r3, #5]
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	2200      	movs	r2, #0
 80010a4:	719a      	strb	r2, [r3, #6]
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	2200      	movs	r2, #0
 80010aa:	71da      	strb	r2, [r3, #7]
 80010ac:	370c      	adds	r7, #12
 80010ae:	46bd      	mov	sp, r7
 80010b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b4:	4770      	bx	lr
 80010b6:	bf00      	nop

080010b8 <GPIO_PinAFConfig>:
 80010b8:	b480      	push	{r7}
 80010ba:	b085      	sub	sp, #20
 80010bc:	af00      	add	r7, sp, #0
 80010be:	6078      	str	r0, [r7, #4]
 80010c0:	4613      	mov	r3, r2
 80010c2:	460a      	mov	r2, r1
 80010c4:	807a      	strh	r2, [r7, #2]
 80010c6:	707b      	strb	r3, [r7, #1]
 80010c8:	2300      	movs	r3, #0
 80010ca:	60fb      	str	r3, [r7, #12]
 80010cc:	2300      	movs	r3, #0
 80010ce:	60bb      	str	r3, [r7, #8]
 80010d0:	787a      	ldrb	r2, [r7, #1]
 80010d2:	887b      	ldrh	r3, [r7, #2]
 80010d4:	f003 0307 	and.w	r3, r3, #7
 80010d8:	009b      	lsls	r3, r3, #2
 80010da:	fa02 f303 	lsl.w	r3, r2, r3
 80010de:	60fb      	str	r3, [r7, #12]
 80010e0:	887b      	ldrh	r3, [r7, #2]
 80010e2:	08db      	lsrs	r3, r3, #3
 80010e4:	b29b      	uxth	r3, r3
 80010e6:	461a      	mov	r2, r3
 80010e8:	887b      	ldrh	r3, [r7, #2]
 80010ea:	08db      	lsrs	r3, r3, #3
 80010ec:	b29b      	uxth	r3, r3
 80010ee:	4619      	mov	r1, r3
 80010f0:	687b      	ldr	r3, [r7, #4]
 80010f2:	3108      	adds	r1, #8
 80010f4:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 80010f8:	887b      	ldrh	r3, [r7, #2]
 80010fa:	f003 0307 	and.w	r3, r3, #7
 80010fe:	009b      	lsls	r3, r3, #2
 8001100:	200f      	movs	r0, #15
 8001102:	fa00 f303 	lsl.w	r3, r0, r3
 8001106:	43db      	mvns	r3, r3
 8001108:	4019      	ands	r1, r3
 800110a:	687b      	ldr	r3, [r7, #4]
 800110c:	3208      	adds	r2, #8
 800110e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001112:	887b      	ldrh	r3, [r7, #2]
 8001114:	08db      	lsrs	r3, r3, #3
 8001116:	b29b      	uxth	r3, r3
 8001118:	461a      	mov	r2, r3
 800111a:	687b      	ldr	r3, [r7, #4]
 800111c:	3208      	adds	r2, #8
 800111e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001122:	68fb      	ldr	r3, [r7, #12]
 8001124:	4313      	orrs	r3, r2
 8001126:	60bb      	str	r3, [r7, #8]
 8001128:	887b      	ldrh	r3, [r7, #2]
 800112a:	08db      	lsrs	r3, r3, #3
 800112c:	b29b      	uxth	r3, r3
 800112e:	461a      	mov	r2, r3
 8001130:	687b      	ldr	r3, [r7, #4]
 8001132:	3208      	adds	r2, #8
 8001134:	68b9      	ldr	r1, [r7, #8]
 8001136:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800113a:	3714      	adds	r7, #20
 800113c:	46bd      	mov	sp, r7
 800113e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001142:	4770      	bx	lr

08001144 <RCC_AHB1PeriphClockCmd>:
 8001144:	b480      	push	{r7}
 8001146:	b083      	sub	sp, #12
 8001148:	af00      	add	r7, sp, #0
 800114a:	6078      	str	r0, [r7, #4]
 800114c:	460b      	mov	r3, r1
 800114e:	70fb      	strb	r3, [r7, #3]
 8001150:	78fb      	ldrb	r3, [r7, #3]
 8001152:	2b00      	cmp	r3, #0
 8001154:	d006      	beq.n	8001164 <RCC_AHB1PeriphClockCmd+0x20>
 8001156:	4b09      	ldr	r3, [pc, #36]	; (800117c <RCC_AHB1PeriphClockCmd+0x38>)
 8001158:	4a08      	ldr	r2, [pc, #32]	; (800117c <RCC_AHB1PeriphClockCmd+0x38>)
 800115a:	6b11      	ldr	r1, [r2, #48]	; 0x30
 800115c:	687a      	ldr	r2, [r7, #4]
 800115e:	430a      	orrs	r2, r1
 8001160:	631a      	str	r2, [r3, #48]	; 0x30
 8001162:	e006      	b.n	8001172 <RCC_AHB1PeriphClockCmd+0x2e>
 8001164:	4b05      	ldr	r3, [pc, #20]	; (800117c <RCC_AHB1PeriphClockCmd+0x38>)
 8001166:	4a05      	ldr	r2, [pc, #20]	; (800117c <RCC_AHB1PeriphClockCmd+0x38>)
 8001168:	6b11      	ldr	r1, [r2, #48]	; 0x30
 800116a:	687a      	ldr	r2, [r7, #4]
 800116c:	43d2      	mvns	r2, r2
 800116e:	400a      	ands	r2, r1
 8001170:	631a      	str	r2, [r3, #48]	; 0x30
 8001172:	370c      	adds	r7, #12
 8001174:	46bd      	mov	sp, r7
 8001176:	f85d 7b04 	ldr.w	r7, [sp], #4
 800117a:	4770      	bx	lr
 800117c:	40023800 	.word	0x40023800

08001180 <RCC_AHB3PeriphClockCmd>:
 8001180:	b480      	push	{r7}
 8001182:	b083      	sub	sp, #12
 8001184:	af00      	add	r7, sp, #0
 8001186:	6078      	str	r0, [r7, #4]
 8001188:	460b      	mov	r3, r1
 800118a:	70fb      	strb	r3, [r7, #3]
 800118c:	78fb      	ldrb	r3, [r7, #3]
 800118e:	2b00      	cmp	r3, #0
 8001190:	d006      	beq.n	80011a0 <RCC_AHB3PeriphClockCmd+0x20>
 8001192:	4b09      	ldr	r3, [pc, #36]	; (80011b8 <RCC_AHB3PeriphClockCmd+0x38>)
 8001194:	4a08      	ldr	r2, [pc, #32]	; (80011b8 <RCC_AHB3PeriphClockCmd+0x38>)
 8001196:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8001198:	687a      	ldr	r2, [r7, #4]
 800119a:	430a      	orrs	r2, r1
 800119c:	639a      	str	r2, [r3, #56]	; 0x38
 800119e:	e006      	b.n	80011ae <RCC_AHB3PeriphClockCmd+0x2e>
 80011a0:	4b05      	ldr	r3, [pc, #20]	; (80011b8 <RCC_AHB3PeriphClockCmd+0x38>)
 80011a2:	4a05      	ldr	r2, [pc, #20]	; (80011b8 <RCC_AHB3PeriphClockCmd+0x38>)
 80011a4:	6b91      	ldr	r1, [r2, #56]	; 0x38
 80011a6:	687a      	ldr	r2, [r7, #4]
 80011a8:	43d2      	mvns	r2, r2
 80011aa:	400a      	ands	r2, r1
 80011ac:	639a      	str	r2, [r3, #56]	; 0x38
 80011ae:	370c      	adds	r7, #12
 80011b0:	46bd      	mov	sp, r7
 80011b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011b6:	4770      	bx	lr
 80011b8:	40023800 	.word	0x40023800

080011bc <RCC_APB2PeriphClockCmd>:
 80011bc:	b480      	push	{r7}
 80011be:	b083      	sub	sp, #12
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	6078      	str	r0, [r7, #4]
 80011c4:	460b      	mov	r3, r1
 80011c6:	70fb      	strb	r3, [r7, #3]
 80011c8:	78fb      	ldrb	r3, [r7, #3]
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d006      	beq.n	80011dc <RCC_APB2PeriphClockCmd+0x20>
 80011ce:	4b09      	ldr	r3, [pc, #36]	; (80011f4 <RCC_APB2PeriphClockCmd+0x38>)
 80011d0:	4a08      	ldr	r2, [pc, #32]	; (80011f4 <RCC_APB2PeriphClockCmd+0x38>)
 80011d2:	6c51      	ldr	r1, [r2, #68]	; 0x44
 80011d4:	687a      	ldr	r2, [r7, #4]
 80011d6:	430a      	orrs	r2, r1
 80011d8:	645a      	str	r2, [r3, #68]	; 0x44
 80011da:	e006      	b.n	80011ea <RCC_APB2PeriphClockCmd+0x2e>
 80011dc:	4b05      	ldr	r3, [pc, #20]	; (80011f4 <RCC_APB2PeriphClockCmd+0x38>)
 80011de:	4a05      	ldr	r2, [pc, #20]	; (80011f4 <RCC_APB2PeriphClockCmd+0x38>)
 80011e0:	6c51      	ldr	r1, [r2, #68]	; 0x44
 80011e2:	687a      	ldr	r2, [r7, #4]
 80011e4:	43d2      	mvns	r2, r2
 80011e6:	400a      	ands	r2, r1
 80011e8:	645a      	str	r2, [r3, #68]	; 0x44
 80011ea:	370c      	adds	r7, #12
 80011ec:	46bd      	mov	sp, r7
 80011ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011f2:	4770      	bx	lr
 80011f4:	40023800 	.word	0x40023800

080011f8 <RCC_AHB1PeriphResetCmd>:
 80011f8:	b480      	push	{r7}
 80011fa:	b083      	sub	sp, #12
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	6078      	str	r0, [r7, #4]
 8001200:	460b      	mov	r3, r1
 8001202:	70fb      	strb	r3, [r7, #3]
 8001204:	78fb      	ldrb	r3, [r7, #3]
 8001206:	2b00      	cmp	r3, #0
 8001208:	d006      	beq.n	8001218 <RCC_AHB1PeriphResetCmd+0x20>
 800120a:	4b09      	ldr	r3, [pc, #36]	; (8001230 <RCC_AHB1PeriphResetCmd+0x38>)
 800120c:	4a08      	ldr	r2, [pc, #32]	; (8001230 <RCC_AHB1PeriphResetCmd+0x38>)
 800120e:	6911      	ldr	r1, [r2, #16]
 8001210:	687a      	ldr	r2, [r7, #4]
 8001212:	430a      	orrs	r2, r1
 8001214:	611a      	str	r2, [r3, #16]
 8001216:	e006      	b.n	8001226 <RCC_AHB1PeriphResetCmd+0x2e>
 8001218:	4b05      	ldr	r3, [pc, #20]	; (8001230 <RCC_AHB1PeriphResetCmd+0x38>)
 800121a:	4a05      	ldr	r2, [pc, #20]	; (8001230 <RCC_AHB1PeriphResetCmd+0x38>)
 800121c:	6911      	ldr	r1, [r2, #16]
 800121e:	687a      	ldr	r2, [r7, #4]
 8001220:	43d2      	mvns	r2, r2
 8001222:	400a      	ands	r2, r1
 8001224:	611a      	str	r2, [r3, #16]
 8001226:	370c      	adds	r7, #12
 8001228:	46bd      	mov	sp, r7
 800122a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122e:	4770      	bx	lr
 8001230:	40023800 	.word	0x40023800

08001234 <memcpy>:
 8001234:	b510      	push	{r4, lr}
 8001236:	1e43      	subs	r3, r0, #1
 8001238:	440a      	add	r2, r1
 800123a:	4291      	cmp	r1, r2
 800123c:	d004      	beq.n	8001248 <memcpy+0x14>
 800123e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8001242:	f803 4f01 	strb.w	r4, [r3, #1]!
 8001246:	e7f8      	b.n	800123a <memcpy+0x6>
 8001248:	bd10      	pop	{r4, pc}
 800124a:	0000      	movs	r0, r0
 800124c:	40021400 	.word	0x40021400
 8001250:	0c020001 	.word	0x0c020001
 8001254:	40021400 	.word	0x40021400
 8001258:	0c020002 	.word	0x0c020002
 800125c:	40021400 	.word	0x40021400
 8001260:	0c020004 	.word	0x0c020004
 8001264:	40021400 	.word	0x40021400
 8001268:	0c020008 	.word	0x0c020008
 800126c:	40021400 	.word	0x40021400
 8001270:	0c020010 	.word	0x0c020010
 8001274:	40021400 	.word	0x40021400
 8001278:	0c020020 	.word	0x0c020020
 800127c:	40021400 	.word	0x40021400
 8001280:	0c021000 	.word	0x0c021000
 8001284:	40021400 	.word	0x40021400
 8001288:	0c022000 	.word	0x0c022000
 800128c:	40021400 	.word	0x40021400
 8001290:	0c024000 	.word	0x0c024000
 8001294:	40021400 	.word	0x40021400
 8001298:	0c028000 	.word	0x0c028000
 800129c:	40021800 	.word	0x40021800
 80012a0:	0c020001 	.word	0x0c020001
 80012a4:	40021800 	.word	0x40021800
 80012a8:	0c020002 	.word	0x0c020002
 80012ac:	40021800 	.word	0x40021800
 80012b0:	0c020004 	.word	0x0c020004
 80012b4:	40021800 	.word	0x40021800
 80012b8:	0c020008 	.word	0x0c020008
 80012bc:	40021800 	.word	0x40021800
 80012c0:	0c020010 	.word	0x0c020010
 80012c4:	40021800 	.word	0x40021800
 80012c8:	0c020020 	.word	0x0c020020
 80012cc:	40020c00 	.word	0x40020c00
 80012d0:	0c020800 	.word	0x0c020800
 80012d4:	40020c00 	.word	0x40020c00
 80012d8:	0c021000 	.word	0x0c021000
 80012dc:	40020c00 	.word	0x40020c00
 80012e0:	0c022000 	.word	0x0c022000
 80012e4:	40021000 	.word	0x40021000
 80012e8:	0c020008 	.word	0x0c020008
 80012ec:	40021000 	.word	0x40021000
 80012f0:	0c020010 	.word	0x0c020010
 80012f4:	40021000 	.word	0x40021000
 80012f8:	0c020020 	.word	0x0c020020
 80012fc:	40021000 	.word	0x40021000
 8001300:	0c020040 	.word	0x0c020040
 8001304:	40021000 	.word	0x40021000
 8001308:	0c020004 	.word	0x0c020004
 800130c:	40021800 	.word	0x40021800
 8001310:	0c022000 	.word	0x0c022000
 8001314:	40021800 	.word	0x40021800
 8001318:	0c024000 	.word	0x0c024000
 800131c:	40020c00 	.word	0x40020c00
 8001320:	0c024000 	.word	0x0c024000
 8001324:	40020c00 	.word	0x40020c00
 8001328:	0c028000 	.word	0x0c028000
 800132c:	40020c00 	.word	0x40020c00
 8001330:	0c020001 	.word	0x0c020001
 8001334:	40020c00 	.word	0x40020c00
 8001338:	0c020002 	.word	0x0c020002
 800133c:	40021000 	.word	0x40021000
 8001340:	0c020080 	.word	0x0c020080
 8001344:	40021000 	.word	0x40021000
 8001348:	0c020100 	.word	0x0c020100
 800134c:	40021000 	.word	0x40021000
 8001350:	0c020200 	.word	0x0c020200
 8001354:	40021000 	.word	0x40021000
 8001358:	0c020400 	.word	0x0c020400
 800135c:	40021000 	.word	0x40021000
 8001360:	0c020800 	.word	0x0c020800
 8001364:	40021000 	.word	0x40021000
 8001368:	0c021000 	.word	0x0c021000
 800136c:	40021000 	.word	0x40021000
 8001370:	0c022000 	.word	0x0c022000
 8001374:	40021000 	.word	0x40021000
 8001378:	0c024000 	.word	0x0c024000
 800137c:	40021000 	.word	0x40021000
 8001380:	0c028000 	.word	0x0c028000
 8001384:	40020c00 	.word	0x40020c00
 8001388:	0c020100 	.word	0x0c020100
 800138c:	40020c00 	.word	0x40020c00
 8001390:	0c020200 	.word	0x0c020200
 8001394:	40020c00 	.word	0x40020c00
 8001398:	0c020400 	.word	0x0c020400
 800139c:	40020c00 	.word	0x40020c00
 80013a0:	0c020080 	.word	0x0c020080
 80013a4:	40021800 	.word	0x40021800
 80013a8:	0c020200 	.word	0x0c020200
 80013ac:	40021800 	.word	0x40021800
 80013b0:	0c020400 	.word	0x0c020400
 80013b4:	40021800 	.word	0x40021800
 80013b8:	0c021000 	.word	0x0c021000
 80013bc:	40020400 	.word	0x40020400
 80013c0:	0c020080 	.word	0x0c020080
 80013c4:	40020c00 	.word	0x40020c00
 80013c8:	0c020008 	.word	0x0c020008
 80013cc:	40020c00 	.word	0x40020c00
 80013d0:	0c020010 	.word	0x0c020010
 80013d4:	40020c00 	.word	0x40020c00
 80013d8:	0c020020 	.word	0x0c020020
 80013dc:	40020c00 	.word	0x40020c00
 80013e0:	0c020040 	.word	0x0c020040
 80013e4:	40021000 	.word	0x40021000
 80013e8:	0c020001 	.word	0x0c020001
 80013ec:	40021000 	.word	0x40021000
 80013f0:	0c020002 	.word	0x0c020002

080013f4 <_init>:
 80013f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013f6:	bf00      	nop
 80013f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013fa:	bc08      	pop	{r3}
 80013fc:	469e      	mov	lr, r3
 80013fe:	4770      	bx	lr

08001400 <_fini>:
 8001400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001402:	bf00      	nop
 8001404:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001406:	bc08      	pop	{r3}
 8001408:	469e      	mov	lr, r3
 800140a:	4770      	bx	lr
