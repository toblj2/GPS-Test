
GPSTest.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004980  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .ARM          00000008  08004b10  08004b10  00014b10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08004b18  08004b18  00014b18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08004b1c  08004b1c  00014b1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         000004fc  20000000  08004b20  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ccmram       00000000  10000000  10000000  000204fc  2**0
                  CONTENTS
  7 .bss          00000448  200004fc  200004fc  000204fc  2**2
                  ALLOC
  8 ._user_heap_stack 00002000  20000944  20000944  000204fc  2**0
                  ALLOC
  9 .ARM.attributes 0000002c  00000000  00000000  000204fc  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000958f  00000000  00000000  00020528  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00001dc9  00000000  00000000  00029ab7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000a68  00000000  00000000  0002b880  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000950  00000000  00000000  0002c2e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   000035af  00000000  00000000  0002cc38  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000037be  00000000  00000000  000301e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      000000a9  00000000  00000000  000339a5  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00002534  00000000  00000000  00033a50  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200004fc 	.word	0x200004fc
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08004af8 	.word	0x08004af8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000500 	.word	0x20000500
 80001cc:	08004af8 	.word	0x08004af8

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b97a 	b.w	800058c <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	468c      	mov	ip, r1
 80002b6:	460d      	mov	r5, r1
 80002b8:	4604      	mov	r4, r0
 80002ba:	9e08      	ldr	r6, [sp, #32]
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d151      	bne.n	8000364 <__udivmoddi4+0xb4>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4617      	mov	r7, r2
 80002c4:	d96d      	bls.n	80003a2 <__udivmoddi4+0xf2>
 80002c6:	fab2 fe82 	clz	lr, r2
 80002ca:	f1be 0f00 	cmp.w	lr, #0
 80002ce:	d00b      	beq.n	80002e8 <__udivmoddi4+0x38>
 80002d0:	f1ce 0c20 	rsb	ip, lr, #32
 80002d4:	fa01 f50e 	lsl.w	r5, r1, lr
 80002d8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002dc:	fa02 f70e 	lsl.w	r7, r2, lr
 80002e0:	ea4c 0c05 	orr.w	ip, ip, r5
 80002e4:	fa00 f40e 	lsl.w	r4, r0, lr
 80002e8:	ea4f 4a17 	mov.w	sl, r7, lsr #16
 80002ec:	0c25      	lsrs	r5, r4, #16
 80002ee:	fbbc f8fa 	udiv	r8, ip, sl
 80002f2:	fa1f f987 	uxth.w	r9, r7
 80002f6:	fb0a cc18 	mls	ip, sl, r8, ip
 80002fa:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 80002fe:	fb08 f309 	mul.w	r3, r8, r9
 8000302:	42ab      	cmp	r3, r5
 8000304:	d90a      	bls.n	800031c <__udivmoddi4+0x6c>
 8000306:	19ed      	adds	r5, r5, r7
 8000308:	f108 32ff 	add.w	r2, r8, #4294967295
 800030c:	f080 8123 	bcs.w	8000556 <__udivmoddi4+0x2a6>
 8000310:	42ab      	cmp	r3, r5
 8000312:	f240 8120 	bls.w	8000556 <__udivmoddi4+0x2a6>
 8000316:	f1a8 0802 	sub.w	r8, r8, #2
 800031a:	443d      	add	r5, r7
 800031c:	1aed      	subs	r5, r5, r3
 800031e:	b2a4      	uxth	r4, r4
 8000320:	fbb5 f0fa 	udiv	r0, r5, sl
 8000324:	fb0a 5510 	mls	r5, sl, r0, r5
 8000328:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800032c:	fb00 f909 	mul.w	r9, r0, r9
 8000330:	45a1      	cmp	r9, r4
 8000332:	d909      	bls.n	8000348 <__udivmoddi4+0x98>
 8000334:	19e4      	adds	r4, r4, r7
 8000336:	f100 33ff 	add.w	r3, r0, #4294967295
 800033a:	f080 810a 	bcs.w	8000552 <__udivmoddi4+0x2a2>
 800033e:	45a1      	cmp	r9, r4
 8000340:	f240 8107 	bls.w	8000552 <__udivmoddi4+0x2a2>
 8000344:	3802      	subs	r0, #2
 8000346:	443c      	add	r4, r7
 8000348:	eba4 0409 	sub.w	r4, r4, r9
 800034c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000350:	2100      	movs	r1, #0
 8000352:	2e00      	cmp	r6, #0
 8000354:	d061      	beq.n	800041a <__udivmoddi4+0x16a>
 8000356:	fa24 f40e 	lsr.w	r4, r4, lr
 800035a:	2300      	movs	r3, #0
 800035c:	6034      	str	r4, [r6, #0]
 800035e:	6073      	str	r3, [r6, #4]
 8000360:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000364:	428b      	cmp	r3, r1
 8000366:	d907      	bls.n	8000378 <__udivmoddi4+0xc8>
 8000368:	2e00      	cmp	r6, #0
 800036a:	d054      	beq.n	8000416 <__udivmoddi4+0x166>
 800036c:	2100      	movs	r1, #0
 800036e:	e886 0021 	stmia.w	r6, {r0, r5}
 8000372:	4608      	mov	r0, r1
 8000374:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000378:	fab3 f183 	clz	r1, r3
 800037c:	2900      	cmp	r1, #0
 800037e:	f040 808e 	bne.w	800049e <__udivmoddi4+0x1ee>
 8000382:	42ab      	cmp	r3, r5
 8000384:	d302      	bcc.n	800038c <__udivmoddi4+0xdc>
 8000386:	4282      	cmp	r2, r0
 8000388:	f200 80fa 	bhi.w	8000580 <__udivmoddi4+0x2d0>
 800038c:	1a84      	subs	r4, r0, r2
 800038e:	eb65 0503 	sbc.w	r5, r5, r3
 8000392:	2001      	movs	r0, #1
 8000394:	46ac      	mov	ip, r5
 8000396:	2e00      	cmp	r6, #0
 8000398:	d03f      	beq.n	800041a <__udivmoddi4+0x16a>
 800039a:	e886 1010 	stmia.w	r6, {r4, ip}
 800039e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003a2:	b912      	cbnz	r2, 80003aa <__udivmoddi4+0xfa>
 80003a4:	2701      	movs	r7, #1
 80003a6:	fbb7 f7f2 	udiv	r7, r7, r2
 80003aa:	fab7 fe87 	clz	lr, r7
 80003ae:	f1be 0f00 	cmp.w	lr, #0
 80003b2:	d134      	bne.n	800041e <__udivmoddi4+0x16e>
 80003b4:	1beb      	subs	r3, r5, r7
 80003b6:	0c3a      	lsrs	r2, r7, #16
 80003b8:	fa1f fc87 	uxth.w	ip, r7
 80003bc:	2101      	movs	r1, #1
 80003be:	fbb3 f8f2 	udiv	r8, r3, r2
 80003c2:	0c25      	lsrs	r5, r4, #16
 80003c4:	fb02 3318 	mls	r3, r2, r8, r3
 80003c8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 80003cc:	fb0c f308 	mul.w	r3, ip, r8
 80003d0:	42ab      	cmp	r3, r5
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x134>
 80003d4:	19ed      	adds	r5, r5, r7
 80003d6:	f108 30ff 	add.w	r0, r8, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x132>
 80003dc:	42ab      	cmp	r3, r5
 80003de:	f200 80d1 	bhi.w	8000584 <__udivmoddi4+0x2d4>
 80003e2:	4680      	mov	r8, r0
 80003e4:	1aed      	subs	r5, r5, r3
 80003e6:	b2a3      	uxth	r3, r4
 80003e8:	fbb5 f0f2 	udiv	r0, r5, r2
 80003ec:	fb02 5510 	mls	r5, r2, r0, r5
 80003f0:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 80003f4:	fb0c fc00 	mul.w	ip, ip, r0
 80003f8:	45a4      	cmp	ip, r4
 80003fa:	d907      	bls.n	800040c <__udivmoddi4+0x15c>
 80003fc:	19e4      	adds	r4, r4, r7
 80003fe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x15a>
 8000404:	45a4      	cmp	ip, r4
 8000406:	f200 80b8 	bhi.w	800057a <__udivmoddi4+0x2ca>
 800040a:	4618      	mov	r0, r3
 800040c:	eba4 040c 	sub.w	r4, r4, ip
 8000410:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000414:	e79d      	b.n	8000352 <__udivmoddi4+0xa2>
 8000416:	4631      	mov	r1, r6
 8000418:	4630      	mov	r0, r6
 800041a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800041e:	f1ce 0420 	rsb	r4, lr, #32
 8000422:	fa05 f30e 	lsl.w	r3, r5, lr
 8000426:	fa07 f70e 	lsl.w	r7, r7, lr
 800042a:	fa20 f804 	lsr.w	r8, r0, r4
 800042e:	0c3a      	lsrs	r2, r7, #16
 8000430:	fa25 f404 	lsr.w	r4, r5, r4
 8000434:	ea48 0803 	orr.w	r8, r8, r3
 8000438:	fbb4 f1f2 	udiv	r1, r4, r2
 800043c:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8000440:	fb02 4411 	mls	r4, r2, r1, r4
 8000444:	fa1f fc87 	uxth.w	ip, r7
 8000448:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 800044c:	fb01 f30c 	mul.w	r3, r1, ip
 8000450:	42ab      	cmp	r3, r5
 8000452:	fa00 f40e 	lsl.w	r4, r0, lr
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x1bc>
 8000458:	19ed      	adds	r5, r5, r7
 800045a:	f101 30ff 	add.w	r0, r1, #4294967295
 800045e:	f080 808a 	bcs.w	8000576 <__udivmoddi4+0x2c6>
 8000462:	42ab      	cmp	r3, r5
 8000464:	f240 8087 	bls.w	8000576 <__udivmoddi4+0x2c6>
 8000468:	3902      	subs	r1, #2
 800046a:	443d      	add	r5, r7
 800046c:	1aeb      	subs	r3, r5, r3
 800046e:	fa1f f588 	uxth.w	r5, r8
 8000472:	fbb3 f0f2 	udiv	r0, r3, r2
 8000476:	fb02 3310 	mls	r3, r2, r0, r3
 800047a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 800047e:	fb00 f30c 	mul.w	r3, r0, ip
 8000482:	42ab      	cmp	r3, r5
 8000484:	d907      	bls.n	8000496 <__udivmoddi4+0x1e6>
 8000486:	19ed      	adds	r5, r5, r7
 8000488:	f100 38ff 	add.w	r8, r0, #4294967295
 800048c:	d26f      	bcs.n	800056e <__udivmoddi4+0x2be>
 800048e:	42ab      	cmp	r3, r5
 8000490:	d96d      	bls.n	800056e <__udivmoddi4+0x2be>
 8000492:	3802      	subs	r0, #2
 8000494:	443d      	add	r5, r7
 8000496:	1aeb      	subs	r3, r5, r3
 8000498:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800049c:	e78f      	b.n	80003be <__udivmoddi4+0x10e>
 800049e:	f1c1 0720 	rsb	r7, r1, #32
 80004a2:	fa22 f807 	lsr.w	r8, r2, r7
 80004a6:	408b      	lsls	r3, r1
 80004a8:	fa05 f401 	lsl.w	r4, r5, r1
 80004ac:	ea48 0303 	orr.w	r3, r8, r3
 80004b0:	fa20 fe07 	lsr.w	lr, r0, r7
 80004b4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 80004b8:	40fd      	lsrs	r5, r7
 80004ba:	ea4e 0e04 	orr.w	lr, lr, r4
 80004be:	fbb5 f9fc 	udiv	r9, r5, ip
 80004c2:	ea4f 441e 	mov.w	r4, lr, lsr #16
 80004c6:	fb0c 5519 	mls	r5, ip, r9, r5
 80004ca:	fa1f f883 	uxth.w	r8, r3
 80004ce:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 80004d2:	fb09 f408 	mul.w	r4, r9, r8
 80004d6:	42ac      	cmp	r4, r5
 80004d8:	fa02 f201 	lsl.w	r2, r2, r1
 80004dc:	fa00 fa01 	lsl.w	sl, r0, r1
 80004e0:	d908      	bls.n	80004f4 <__udivmoddi4+0x244>
 80004e2:	18ed      	adds	r5, r5, r3
 80004e4:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e8:	d243      	bcs.n	8000572 <__udivmoddi4+0x2c2>
 80004ea:	42ac      	cmp	r4, r5
 80004ec:	d941      	bls.n	8000572 <__udivmoddi4+0x2c2>
 80004ee:	f1a9 0902 	sub.w	r9, r9, #2
 80004f2:	441d      	add	r5, r3
 80004f4:	1b2d      	subs	r5, r5, r4
 80004f6:	fa1f fe8e 	uxth.w	lr, lr
 80004fa:	fbb5 f0fc 	udiv	r0, r5, ip
 80004fe:	fb0c 5510 	mls	r5, ip, r0, r5
 8000502:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
 8000506:	fb00 f808 	mul.w	r8, r0, r8
 800050a:	45a0      	cmp	r8, r4
 800050c:	d907      	bls.n	800051e <__udivmoddi4+0x26e>
 800050e:	18e4      	adds	r4, r4, r3
 8000510:	f100 35ff 	add.w	r5, r0, #4294967295
 8000514:	d229      	bcs.n	800056a <__udivmoddi4+0x2ba>
 8000516:	45a0      	cmp	r8, r4
 8000518:	d927      	bls.n	800056a <__udivmoddi4+0x2ba>
 800051a:	3802      	subs	r0, #2
 800051c:	441c      	add	r4, r3
 800051e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000522:	eba4 0408 	sub.w	r4, r4, r8
 8000526:	fba0 8902 	umull	r8, r9, r0, r2
 800052a:	454c      	cmp	r4, r9
 800052c:	46c6      	mov	lr, r8
 800052e:	464d      	mov	r5, r9
 8000530:	d315      	bcc.n	800055e <__udivmoddi4+0x2ae>
 8000532:	d012      	beq.n	800055a <__udivmoddi4+0x2aa>
 8000534:	b156      	cbz	r6, 800054c <__udivmoddi4+0x29c>
 8000536:	ebba 030e 	subs.w	r3, sl, lr
 800053a:	eb64 0405 	sbc.w	r4, r4, r5
 800053e:	fa04 f707 	lsl.w	r7, r4, r7
 8000542:	40cb      	lsrs	r3, r1
 8000544:	431f      	orrs	r7, r3
 8000546:	40cc      	lsrs	r4, r1
 8000548:	6037      	str	r7, [r6, #0]
 800054a:	6074      	str	r4, [r6, #4]
 800054c:	2100      	movs	r1, #0
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	4618      	mov	r0, r3
 8000554:	e6f8      	b.n	8000348 <__udivmoddi4+0x98>
 8000556:	4690      	mov	r8, r2
 8000558:	e6e0      	b.n	800031c <__udivmoddi4+0x6c>
 800055a:	45c2      	cmp	sl, r8
 800055c:	d2ea      	bcs.n	8000534 <__udivmoddi4+0x284>
 800055e:	ebb8 0e02 	subs.w	lr, r8, r2
 8000562:	eb69 0503 	sbc.w	r5, r9, r3
 8000566:	3801      	subs	r0, #1
 8000568:	e7e4      	b.n	8000534 <__udivmoddi4+0x284>
 800056a:	4628      	mov	r0, r5
 800056c:	e7d7      	b.n	800051e <__udivmoddi4+0x26e>
 800056e:	4640      	mov	r0, r8
 8000570:	e791      	b.n	8000496 <__udivmoddi4+0x1e6>
 8000572:	4681      	mov	r9, r0
 8000574:	e7be      	b.n	80004f4 <__udivmoddi4+0x244>
 8000576:	4601      	mov	r1, r0
 8000578:	e778      	b.n	800046c <__udivmoddi4+0x1bc>
 800057a:	3802      	subs	r0, #2
 800057c:	443c      	add	r4, r7
 800057e:	e745      	b.n	800040c <__udivmoddi4+0x15c>
 8000580:	4608      	mov	r0, r1
 8000582:	e708      	b.n	8000396 <__udivmoddi4+0xe6>
 8000584:	f1a8 0802 	sub.w	r8, r8, #2
 8000588:	443d      	add	r5, r7
 800058a:	e72b      	b.n	80003e4 <__udivmoddi4+0x134>

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000590:	b480      	push	{r7}
 8000592:	b083      	sub	sp, #12
 8000594:	af00      	add	r7, sp, #0
 8000596:	4603      	mov	r3, r0
 8000598:	71fb      	strb	r3, [r7, #7]
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
 800059a:	4909      	ldr	r1, [pc, #36]	; (80005c0 <NVIC_EnableIRQ+0x30>)
 800059c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80005a0:	095b      	lsrs	r3, r3, #5
 80005a2:	79fa      	ldrb	r2, [r7, #7]
 80005a4:	f002 021f 	and.w	r2, r2, #31
 80005a8:	2001      	movs	r0, #1
 80005aa:	fa00 f202 	lsl.w	r2, r0, r2
 80005ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80005b2:	bf00      	nop
 80005b4:	370c      	adds	r7, #12
 80005b6:	46bd      	mov	sp, r7
 80005b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005bc:	4770      	bx	lr
 80005be:	bf00      	nop
 80005c0:	e000e100 	.word	0xe000e100

080005c4 <NVIC_DisableIRQ>:
    The function disables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80005c4:	b480      	push	{r7}
 80005c6:	b083      	sub	sp, #12
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	4603      	mov	r3, r0
 80005cc:	71fb      	strb	r3, [r7, #7]
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 80005ce:	4909      	ldr	r1, [pc, #36]	; (80005f4 <NVIC_DisableIRQ+0x30>)
 80005d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80005d4:	095b      	lsrs	r3, r3, #5
 80005d6:	79fa      	ldrb	r2, [r7, #7]
 80005d8:	f002 021f 	and.w	r2, r2, #31
 80005dc:	2001      	movs	r0, #1
 80005de:	fa00 f202 	lsl.w	r2, r0, r2
 80005e2:	3320      	adds	r3, #32
 80005e4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80005e8:	bf00      	nop
 80005ea:	370c      	adds	r7, #12
 80005ec:	46bd      	mov	sp, r7
 80005ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f2:	4770      	bx	lr
 80005f4:	e000e100 	.word	0xe000e100

080005f8 <LCD_Init>:

/*----- Implementation -----------------------------------------------------*/
/**
 * @brief		Initialize the interface, controller and the display.
 */
static inline void LCD_Init(void) {
 80005f8:	b580      	push	{r7, lr}
 80005fa:	af00      	add	r7, sp, #0
	SSD1963_Init();
 80005fc:	f002 fbe8 	bl	8002dd0 <SSD1963_Init>
}
 8000600:	bf00      	nop
 8000602:	bd80      	pop	{r7, pc}

08000604 <TimingDelay_Decrement>:

/**
 * @brief		Decrement the TimingDelay. This function is called in the
 *				SysTick_Handler.
 */
void TimingDelay_Decrement(void) {
 8000604:	b480      	push	{r7}
 8000606:	af00      	add	r7, sp, #0
	if (TimingDelay > 0U) {
 8000608:	4b06      	ldr	r3, [pc, #24]	; (8000624 <TimingDelay_Decrement+0x20>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	2b00      	cmp	r3, #0
 800060e:	d004      	beq.n	800061a <TimingDelay_Decrement+0x16>
		TimingDelay--;
 8000610:	4b04      	ldr	r3, [pc, #16]	; (8000624 <TimingDelay_Decrement+0x20>)
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	3b01      	subs	r3, #1
 8000616:	4a03      	ldr	r2, [pc, #12]	; (8000624 <TimingDelay_Decrement+0x20>)
 8000618:	6013      	str	r3, [r2, #0]
	}
}
 800061a:	bf00      	nop
 800061c:	46bd      	mov	sp, r7
 800061e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000622:	4770      	bx	lr
 8000624:	20000518 	.word	0x20000518

08000628 <Init_USART1>:

void Init_USART1(void)
{
 8000628:	b580      	push	{r7, lr}
 800062a:	b08a      	sub	sp, #40	; 0x28
 800062c:	af00      	add	r7, sp, #0
	/* Init GPIO Ports [PA9=TX, PA10=RX] for UART1 */
	GPIO_InitTypeDef GPIO_InitStruct;
	GPIO_StructInit(&GPIO_InitStruct);
 800062e:	f107 031c 	add.w	r3, r7, #28
 8000632:	4618      	mov	r0, r3
 8000634:	f003 f8a6 	bl	8003784 <GPIO_StructInit>
	GPIO_InitStruct.GPIO_Speed = GPIO_Fast_Speed;
 8000638:	2302      	movs	r3, #2
 800063a:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 800063e:	2301      	movs	r3, #1
 8000640:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 8000644:	2302      	movs	r3, #2
 8000646:	f887 3020 	strb.w	r3, [r7, #32]
	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_10;
 800064a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800064e:	61fb      	str	r3, [r7, #28]
	GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000650:	f107 031c 	add.w	r3, r7, #28
 8000654:	4619      	mov	r1, r3
 8000656:	482a      	ldr	r0, [pc, #168]	; (8000700 <Init_USART1+0xd8>)
 8000658:	f003 f806 	bl	8003668 <GPIO_Init>
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource9,  GPIO_AF_USART1);
 800065c:	2207      	movs	r2, #7
 800065e:	2109      	movs	r1, #9
 8000660:	4827      	ldr	r0, [pc, #156]	; (8000700 <Init_USART1+0xd8>)
 8000662:	f003 f8c1 	bl	80037e8 <GPIO_PinAFConfig>
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource10, GPIO_AF_USART1);
 8000666:	2207      	movs	r2, #7
 8000668:	210a      	movs	r1, #10
 800066a:	4825      	ldr	r0, [pc, #148]	; (8000700 <Init_USART1+0xd8>)
 800066c:	f003 f8bc 	bl	80037e8 <GPIO_PinAFConfig>

	// Set GPIOA & USART1 Peripherial Clock Ressource
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 8000670:	2101      	movs	r1, #1
 8000672:	2001      	movs	r0, #1
 8000674:	f003 fc1a 	bl	8003eac <RCC_AHB1PeriphClockCmd>
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
 8000678:	2101      	movs	r1, #1
 800067a:	2010      	movs	r0, #16
 800067c:	f003 fc70 	bl	8003f60 <RCC_APB2PeriphClockCmd>
	// Init USART1 (to change settings disable USART1)
	USART_DeInit(USART1);
 8000680:	4820      	ldr	r0, [pc, #128]	; (8000704 <Init_USART1+0xdc>)
 8000682:	f003 fce5 	bl	8004050 <USART_DeInit>
	// Init USART1 Clock
	USART_ClockInitTypeDef USART1_ClockInit;
	USART_ClockStructInit(&USART1_ClockInit);
 8000686:	f107 0314 	add.w	r3, r7, #20
 800068a:	4618      	mov	r0, r3
 800068c:	f003 fe6a 	bl	8004364 <USART_ClockStructInit>
	USART_ClockInit(USART1, &USART1_ClockInit);
 8000690:	f107 0314 	add.w	r3, r7, #20
 8000694:	4619      	mov	r1, r3
 8000696:	481b      	ldr	r0, [pc, #108]	; (8000704 <Init_USART1+0xdc>)
 8000698:	f003 fe3a 	bl	8004310 <USART_ClockInit>
	USART_Cmd(USART1, DISABLE);
 800069c:	2100      	movs	r1, #0
 800069e:	4819      	ldr	r0, [pc, #100]	; (8000704 <Init_USART1+0xdc>)
 80006a0:	f003 fe76 	bl	8004390 <USART_Cmd>
	USART_InitTypeDef USART1_Init;
	USART_StructInit(&USART1_Init);
 80006a4:	1d3b      	adds	r3, r7, #4
 80006a6:	4618      	mov	r0, r3
 80006a8:	f003 fe16 	bl	80042d8 <USART_StructInit>
	USART_Init(USART1, &USART1_Init);
 80006ac:	1d3b      	adds	r3, r7, #4
 80006ae:	4619      	mov	r1, r3
 80006b0:	4814      	ldr	r0, [pc, #80]	; (8000704 <Init_USART1+0xdc>)
 80006b2:	f003 fd57 	bl	8004164 <USART_Init>
	// Enable UART1 Interrupts
	USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 80006b6:	2201      	movs	r2, #1
 80006b8:	f240 5125 	movw	r1, #1317	; 0x525
 80006bc:	4811      	ldr	r0, [pc, #68]	; (8000704 <Init_USART1+0xdc>)
 80006be:	f003 fe87 	bl	80043d0 <USART_ITConfig>
	NVIC_InitTypeDef NVIC_InitStructure;
	NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
 80006c2:	2325      	movs	r3, #37	; 0x25
 80006c4:	703b      	strb	r3, [r7, #0]
	//NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 10;	// set priority of the USART1 interrupt to highest (lowest=15)
	//NVIC_InitStructure.NVIC_IRQChannelSubPriority = 10;			// set the subpriority inside the group to highest (lowest=15)
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			 		// enable the USART1 interrupts globally
 80006c6:	2301      	movs	r3, #1
 80006c8:	70fb      	strb	r3, [r7, #3]
	NVIC_Init(&NVIC_InitStructure);							 		// NVIC_Init function takes care of the low level stuff
 80006ca:	463b      	mov	r3, r7
 80006cc:	4618      	mov	r0, r3
 80006ce:	f002 fda3 	bl	8003218 <NVIC_Init>
	USART_Cmd(USART1, ENABLE);
 80006d2:	2101      	movs	r1, #1
 80006d4:	480b      	ldr	r0, [pc, #44]	; (8000704 <Init_USART1+0xdc>)
 80006d6:	f003 fe5b 	bl	8004390 <USART_Cmd>
	USART_ClearFlag(USART1, USART_FLAG_RXNE);
 80006da:	2120      	movs	r1, #32
 80006dc:	4809      	ldr	r0, [pc, #36]	; (8000704 <Init_USART1+0xdc>)
 80006de:	f003 febf 	bl	8004460 <USART_ClearFlag>
	uint8_t i = 0xFF;
 80006e2:	23ff      	movs	r3, #255	; 0xff
 80006e4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	// Wait until hardware is running
	while (i--);
 80006e8:	bf00      	nop
 80006ea:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80006ee:	1e5a      	subs	r2, r3, #1
 80006f0:	f887 2027 	strb.w	r2, [r7, #39]	; 0x27
 80006f4:	2b00      	cmp	r3, #0
 80006f6:	d1f8      	bne.n	80006ea <Init_USART1+0xc2>
}
 80006f8:	bf00      	nop
 80006fa:	3728      	adds	r7, #40	; 0x28
 80006fc:	46bd      	mov	sp, r7
 80006fe:	bd80      	pop	{r7, pc}
 8000700:	40020000 	.word	0x40020000
 8000704:	40011000 	.word	0x40011000

08000708 <USART1_IRQHandler>:

/**
 * @brief		interrupt request handler (IRQ) for ALL USART1 interrupts
 */
void USART1_IRQHandler(void)
{
 8000708:	b580      	push	{r7, lr}
 800070a:	b082      	sub	sp, #8
 800070c:	af00      	add	r7, sp, #0
	// check if the USART1 receive interrupt flag was set
	if( USART_GetITStatus(USART1, USART_IT_RXNE) )
 800070e:	f240 5125 	movw	r1, #1317	; 0x525
 8000712:	4821      	ldr	r0, [pc, #132]	; (8000798 <USART1_IRQHandler+0x90>)
 8000714:	f003 feb4 	bl	8004480 <USART_GetITStatus>
 8000718:	4603      	mov	r3, r0
 800071a:	2b00      	cmp	r3, #0
 800071c:	d038      	beq.n	8000790 <USART1_IRQHandler+0x88>
	{
		static uint8_t cnt = 0; // this counter is used to determine the current string length
		char t = USART1->DR;  // the character from the USART1 data register is saved in t
 800071e:	4b1e      	ldr	r3, [pc, #120]	; (8000798 <USART1_IRQHandler+0x90>)
 8000720:	889b      	ldrh	r3, [r3, #4]
 8000722:	b29b      	uxth	r3, r3
 8000724:	71fb      	strb	r3, [r7, #7]
		static uint8_t NMEA_start = 0;
		if (cnt < NMEA_stringlength)
 8000726:	4b1d      	ldr	r3, [pc, #116]	; (800079c <USART1_IRQHandler+0x94>)
 8000728:	781b      	ldrb	r3, [r3, #0]
 800072a:	2b77      	cmp	r3, #119	; 0x77
 800072c:	d822      	bhi.n	8000774 <USART1_IRQHandler+0x6c>
		{
			switch (t)
 800072e:	79fb      	ldrb	r3, [r7, #7]
 8000730:	2b0d      	cmp	r3, #13
 8000732:	d008      	beq.n	8000746 <USART1_IRQHandler+0x3e>
 8000734:	2b24      	cmp	r3, #36	; 0x24
 8000736:	d002      	beq.n	800073e <USART1_IRQHandler+0x36>
 8000738:	2b0a      	cmp	r3, #10
 800073a:	d008      	beq.n	800074e <USART1_IRQHandler+0x46>
					break;
				case '\n':
					NMEA_start = 0;
					break;
				default:
					break;
 800073c:	e00b      	b.n	8000756 <USART1_IRQHandler+0x4e>
					NMEA_start = 1;
 800073e:	4b18      	ldr	r3, [pc, #96]	; (80007a0 <USART1_IRQHandler+0x98>)
 8000740:	2201      	movs	r2, #1
 8000742:	701a      	strb	r2, [r3, #0]
					break;
 8000744:	e007      	b.n	8000756 <USART1_IRQHandler+0x4e>
					NMEA_start = 0;
 8000746:	4b16      	ldr	r3, [pc, #88]	; (80007a0 <USART1_IRQHandler+0x98>)
 8000748:	2200      	movs	r2, #0
 800074a:	701a      	strb	r2, [r3, #0]
					break;
 800074c:	e003      	b.n	8000756 <USART1_IRQHandler+0x4e>
					NMEA_start = 0;
 800074e:	4b14      	ldr	r3, [pc, #80]	; (80007a0 <USART1_IRQHandler+0x98>)
 8000750:	2200      	movs	r2, #0
 8000752:	701a      	strb	r2, [r3, #0]
					break;
 8000754:	bf00      	nop
			}
			if(NMEA_start)
 8000756:	4b12      	ldr	r3, [pc, #72]	; (80007a0 <USART1_IRQHandler+0x98>)
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d013      	beq.n	8000786 <USART1_IRQHandler+0x7e>
			{
				NMEA_string[cnt++] = t;
 800075e:	4b0f      	ldr	r3, [pc, #60]	; (800079c <USART1_IRQHandler+0x94>)
 8000760:	781b      	ldrb	r3, [r3, #0]
 8000762:	1c5a      	adds	r2, r3, #1
 8000764:	b2d1      	uxtb	r1, r2
 8000766:	4a0d      	ldr	r2, [pc, #52]	; (800079c <USART1_IRQHandler+0x94>)
 8000768:	7011      	strb	r1, [r2, #0]
 800076a:	4619      	mov	r1, r3
 800076c:	4a0d      	ldr	r2, [pc, #52]	; (80007a4 <USART1_IRQHandler+0x9c>)
 800076e:	79fb      	ldrb	r3, [r7, #7]
 8000770:	5453      	strb	r3, [r2, r1]
 8000772:	e008      	b.n	8000786 <USART1_IRQHandler+0x7e>
			}
		}
		else
		{
			NMEAStringReadyFlag = 1;
 8000774:	4b0c      	ldr	r3, [pc, #48]	; (80007a8 <USART1_IRQHandler+0xa0>)
 8000776:	2201      	movs	r2, #1
 8000778:	701a      	strb	r2, [r3, #0]
			NMEA_start=0;
 800077a:	4b09      	ldr	r3, [pc, #36]	; (80007a0 <USART1_IRQHandler+0x98>)
 800077c:	2200      	movs	r2, #0
 800077e:	701a      	strb	r2, [r3, #0]
			cnt=0;
 8000780:	4b06      	ldr	r3, [pc, #24]	; (800079c <USART1_IRQHandler+0x94>)
 8000782:	2200      	movs	r2, #0
 8000784:	701a      	strb	r2, [r3, #0]
		}
		USART_ClearITPendingBit(USART1, USART_IT_RXNE);
 8000786:	f240 5125 	movw	r1, #1317	; 0x525
 800078a:	4803      	ldr	r0, [pc, #12]	; (8000798 <USART1_IRQHandler+0x90>)
 800078c:	f003 fed0 	bl	8004530 <USART_ClearITPendingBit>
	}
}
 8000790:	bf00      	nop
 8000792:	3708      	adds	r7, #8
 8000794:	46bd      	mov	sp, r7
 8000796:	bd80      	pop	{r7, pc}
 8000798:	40011000 	.word	0x40011000
 800079c:	20000865 	.word	0x20000865
 80007a0:	20000866 	.word	0x20000866
 80007a4:	200008c0 	.word	0x200008c0
 80007a8:	20000864 	.word	0x20000864

080007ac <Init_I2C2>:

void Init_I2C2(void)
{
 80007ac:	b580      	push	{r7, lr}
 80007ae:	b088      	sub	sp, #32
 80007b0:	af00      	add	r7, sp, #0
	/* Configure the GPIO [PH4=SCL, PH5=SDA] for I2C2*/
	GPIO_InitTypeDef GPIO_InitStruct;
	GPIO_StructInit(&GPIO_InitStruct);
 80007b2:	f107 0314 	add.w	r3, r7, #20
 80007b6:	4618      	mov	r0, r3
 80007b8:	f002 ffe4 	bl	8003784 <GPIO_StructInit>
	GPIO_InitStruct.GPIO_Speed = GPIO_Fast_Speed;
 80007bc:	2302      	movs	r3, #2
 80007be:	767b      	strb	r3, [r7, #25]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 80007c0:	2301      	movs	r3, #1
 80007c2:	76bb      	strb	r3, [r7, #26]
	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
 80007c4:	2330      	movs	r3, #48	; 0x30
 80007c6:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 80007c8:	2302      	movs	r3, #2
 80007ca:	763b      	strb	r3, [r7, #24]
	GPIO_Init(GPIOH, &GPIO_InitStruct);
 80007cc:	f107 0314 	add.w	r3, r7, #20
 80007d0:	4619      	mov	r1, r3
 80007d2:	481e      	ldr	r0, [pc, #120]	; (800084c <Init_I2C2+0xa0>)
 80007d4:	f002 ff48 	bl	8003668 <GPIO_Init>
	GPIO_PinAFConfig(GPIOH, GPIO_PinSource4, GPIO_AF_I2C2);
 80007d8:	2204      	movs	r2, #4
 80007da:	2104      	movs	r1, #4
 80007dc:	481b      	ldr	r0, [pc, #108]	; (800084c <Init_I2C2+0xa0>)
 80007de:	f003 f803 	bl	80037e8 <GPIO_PinAFConfig>
	GPIO_PinAFConfig(GPIOH, GPIO_PinSource5, GPIO_AF_I2C2);
 80007e2:	2204      	movs	r2, #4
 80007e4:	2105      	movs	r1, #5
 80007e6:	4819      	ldr	r0, [pc, #100]	; (800084c <Init_I2C2+0xa0>)
 80007e8:	f002 fffe 	bl	80037e8 <GPIO_PinAFConfig>

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 80007ec:	2101      	movs	r1, #1
 80007ee:	2080      	movs	r0, #128	; 0x80
 80007f0:	f003 fb5c 	bl	8003eac <RCC_AHB1PeriphClockCmd>
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C2, ENABLE);
 80007f4:	2101      	movs	r1, #1
 80007f6:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 80007fa:	f003 fb93 	bl	8003f24 <RCC_APB1PeriphClockCmd>

	I2C_InitTypeDef I2C_InitStruct;
	I2C_StructInit(&I2C_InitStruct);
 80007fe:	1d3b      	adds	r3, r7, #4
 8000800:	4618      	mov	r0, r3
 8000802:	f003 f933 	bl	8003a6c <I2C_StructInit>
	I2C_InitStruct.I2C_ClockSpeed = 100000;
 8000806:	4b12      	ldr	r3, [pc, #72]	; (8000850 <Init_I2C2+0xa4>)
 8000808:	607b      	str	r3, [r7, #4]
	I2C_InitStruct.I2C_OwnAddress1 = 0xA0;
 800080a:	23a0      	movs	r3, #160	; 0xa0
 800080c:	81bb      	strh	r3, [r7, #12]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 800080e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000812:	81fb      	strh	r3, [r7, #14]
	I2C_Cmd(I2C2, DISABLE);
 8000814:	2100      	movs	r1, #0
 8000816:	480f      	ldr	r0, [pc, #60]	; (8000854 <Init_I2C2+0xa8>)
 8000818:	f003 f946 	bl	8003aa8 <I2C_Cmd>
	I2C_DeInit(I2C2);
 800081c:	480d      	ldr	r0, [pc, #52]	; (8000854 <Init_I2C2+0xa8>)
 800081e:	f003 f829 	bl	8003874 <I2C_DeInit>
	I2C_Init(I2C2, &I2C_InitStruct);
 8000822:	1d3b      	adds	r3, r7, #4
 8000824:	4619      	mov	r1, r3
 8000826:	480b      	ldr	r0, [pc, #44]	; (8000854 <Init_I2C2+0xa8>)
 8000828:	f003 f85e 	bl	80038e8 <I2C_Init>
	I2C_Cmd(I2C2, ENABLE);
 800082c:	2101      	movs	r1, #1
 800082e:	4809      	ldr	r0, [pc, #36]	; (8000854 <Init_I2C2+0xa8>)
 8000830:	f003 f93a 	bl	8003aa8 <I2C_Cmd>
	uint8_t i = 0xFF;
 8000834:	23ff      	movs	r3, #255	; 0xff
 8000836:	77fb      	strb	r3, [r7, #31]
	// Wait until hardware is running
	while (i--);
 8000838:	bf00      	nop
 800083a:	7ffb      	ldrb	r3, [r7, #31]
 800083c:	1e5a      	subs	r2, r3, #1
 800083e:	77fa      	strb	r2, [r7, #31]
 8000840:	2b00      	cmp	r3, #0
 8000842:	d1fa      	bne.n	800083a <Init_I2C2+0x8e>
}
 8000844:	bf00      	nop
 8000846:	3720      	adds	r7, #32
 8000848:	46bd      	mov	sp, r7
 800084a:	bd80      	pop	{r7, pc}
 800084c:	40021c00 	.word	0x40021c00
 8000850:	000186a0 	.word	0x000186a0
 8000854:	40005800 	.word	0x40005800

08000858 <AcceleroInit>:

void AcceleroInit(void)
{
 8000858:	b580      	push	{r7, lr}
 800085a:	b084      	sub	sp, #16
 800085c:	af02      	add	r7, sp, #8
	uint8_t value = 0x0F;
 800085e:	230f      	movs	r3, #15
 8000860:	71fb      	strb	r3, [r7, #7]
	err_code = CARME_I2C_Write(I2C2,I2C_AXL_ADDR,BW_RATE,0,&value,1); //Set Data rate
 8000862:	2301      	movs	r3, #1
 8000864:	9301      	str	r3, [sp, #4]
 8000866:	1dfb      	adds	r3, r7, #7
 8000868:	9300      	str	r3, [sp, #0]
 800086a:	2300      	movs	r3, #0
 800086c:	222c      	movs	r2, #44	; 0x2c
 800086e:	21a6      	movs	r1, #166	; 0xa6
 8000870:	4815      	ldr	r0, [pc, #84]	; (80008c8 <AcceleroInit+0x70>)
 8000872:	f002 f819 	bl	80028a8 <CARME_I2C_Write>
 8000876:	4603      	mov	r3, r0
 8000878:	461a      	mov	r2, r3
 800087a:	4b14      	ldr	r3, [pc, #80]	; (80008cc <AcceleroInit+0x74>)
 800087c:	701a      	strb	r2, [r3, #0]

	value = 0x08;
 800087e:	2308      	movs	r3, #8
 8000880:	71fb      	strb	r3, [r7, #7]
	err_code = CARME_I2C_Write(I2C2,I2C_AXL_ADDR,POWER_CTL,0,&value,1); //Choose power-mode
 8000882:	2301      	movs	r3, #1
 8000884:	9301      	str	r3, [sp, #4]
 8000886:	1dfb      	adds	r3, r7, #7
 8000888:	9300      	str	r3, [sp, #0]
 800088a:	2300      	movs	r3, #0
 800088c:	222d      	movs	r2, #45	; 0x2d
 800088e:	21a6      	movs	r1, #166	; 0xa6
 8000890:	480d      	ldr	r0, [pc, #52]	; (80008c8 <AcceleroInit+0x70>)
 8000892:	f002 f809 	bl	80028a8 <CARME_I2C_Write>
 8000896:	4603      	mov	r3, r0
 8000898:	461a      	mov	r2, r3
 800089a:	4b0c      	ldr	r3, [pc, #48]	; (80008cc <AcceleroInit+0x74>)
 800089c:	701a      	strb	r2, [r3, #0]

	value = 0x08;
 800089e:	2308      	movs	r3, #8
 80008a0:	71fb      	strb	r3, [r7, #7]
	err_code = CARME_I2C_Write(I2C2,I2C_AXL_ADDR,DATA_FORMAT,0,&value,1); //Data format
 80008a2:	2301      	movs	r3, #1
 80008a4:	9301      	str	r3, [sp, #4]
 80008a6:	1dfb      	adds	r3, r7, #7
 80008a8:	9300      	str	r3, [sp, #0]
 80008aa:	2300      	movs	r3, #0
 80008ac:	2231      	movs	r2, #49	; 0x31
 80008ae:	21a6      	movs	r1, #166	; 0xa6
 80008b0:	4805      	ldr	r0, [pc, #20]	; (80008c8 <AcceleroInit+0x70>)
 80008b2:	f001 fff9 	bl	80028a8 <CARME_I2C_Write>
 80008b6:	4603      	mov	r3, r0
 80008b8:	461a      	mov	r2, r3
 80008ba:	4b04      	ldr	r3, [pc, #16]	; (80008cc <AcceleroInit+0x74>)
 80008bc:	701a      	strb	r2, [r3, #0]
}
 80008be:	bf00      	nop
 80008c0:	3708      	adds	r7, #8
 80008c2:	46bd      	mov	sp, r7
 80008c4:	bd80      	pop	{r7, pc}
 80008c6:	bf00      	nop
 80008c8:	40005800 	.word	0x40005800
 80008cc:	2000093a 	.word	0x2000093a

080008d0 <ReadAccelero>:

void ReadAccelero(int16_t *gx, int16_t *gy, int16_t *gz)
{
 80008d0:	b580      	push	{r7, lr}
 80008d2:	b088      	sub	sp, #32
 80008d4:	af02      	add	r7, sp, #8
 80008d6:	60f8      	str	r0, [r7, #12]
 80008d8:	60b9      	str	r1, [r7, #8]
 80008da:	607a      	str	r2, [r7, #4]
	uint8_t gravitation[6];
	err_code = CARME_I2C_Read(I2C2, I2C_AXL_ADDR, DATAX0, 0, gravitation, sizeof(gravitation));
 80008dc:	2306      	movs	r3, #6
 80008de:	9301      	str	r3, [sp, #4]
 80008e0:	f107 0310 	add.w	r3, r7, #16
 80008e4:	9300      	str	r3, [sp, #0]
 80008e6:	2300      	movs	r3, #0
 80008e8:	2232      	movs	r2, #50	; 0x32
 80008ea:	21a6      	movs	r1, #166	; 0xa6
 80008ec:	4812      	ldr	r0, [pc, #72]	; (8000938 <ReadAccelero+0x68>)
 80008ee:	f002 f8bf 	bl	8002a70 <CARME_I2C_Read>
 80008f2:	4603      	mov	r3, r0
 80008f4:	461a      	mov	r2, r3
 80008f6:	4b11      	ldr	r3, [pc, #68]	; (800093c <ReadAccelero+0x6c>)
 80008f8:	701a      	strb	r2, [r3, #0]

	*gx = ((int16_t)(gravitation[1] << 8) | gravitation[0]);
 80008fa:	7c7b      	ldrb	r3, [r7, #17]
 80008fc:	021b      	lsls	r3, r3, #8
 80008fe:	b21a      	sxth	r2, r3
 8000900:	7c3b      	ldrb	r3, [r7, #16]
 8000902:	b21b      	sxth	r3, r3
 8000904:	4313      	orrs	r3, r2
 8000906:	b21a      	sxth	r2, r3
 8000908:	68fb      	ldr	r3, [r7, #12]
 800090a:	801a      	strh	r2, [r3, #0]
	*gy = ((int16_t)(gravitation[3] << 8) | gravitation[2]);
 800090c:	7cfb      	ldrb	r3, [r7, #19]
 800090e:	021b      	lsls	r3, r3, #8
 8000910:	b21a      	sxth	r2, r3
 8000912:	7cbb      	ldrb	r3, [r7, #18]
 8000914:	b21b      	sxth	r3, r3
 8000916:	4313      	orrs	r3, r2
 8000918:	b21a      	sxth	r2, r3
 800091a:	68bb      	ldr	r3, [r7, #8]
 800091c:	801a      	strh	r2, [r3, #0]
	*gz = ((int16_t)(gravitation[5] << 8) | gravitation[4]);
 800091e:	7d7b      	ldrb	r3, [r7, #21]
 8000920:	021b      	lsls	r3, r3, #8
 8000922:	b21a      	sxth	r2, r3
 8000924:	7d3b      	ldrb	r3, [r7, #20]
 8000926:	b21b      	sxth	r3, r3
 8000928:	4313      	orrs	r3, r2
 800092a:	b21a      	sxth	r2, r3
 800092c:	687b      	ldr	r3, [r7, #4]
 800092e:	801a      	strh	r2, [r3, #0]
}
 8000930:	bf00      	nop
 8000932:	3718      	adds	r7, #24
 8000934:	46bd      	mov	sp, r7
 8000936:	bd80      	pop	{r7, pc}
 8000938:	40005800 	.word	0x40005800
 800093c:	2000093a 	.word	0x2000093a

08000940 <Display_Accelero>:

/*
 * @brief 		displays measured acceleration in all 3 axis
 */
void Display_Accelero(int16_t *x, int16_t *y, int16_t *z)
{
 8000940:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000944:	b08b      	sub	sp, #44	; 0x2c
 8000946:	af02      	add	r7, sp, #8
 8000948:	60f8      	str	r0, [r7, #12]
 800094a:	60b9      	str	r1, [r7, #8]
 800094c:	607a      	str	r2, [r7, #4]
 800094e:	466b      	mov	r3, sp
 8000950:	461e      	mov	r6, r3
	uint8_t MaxLength = LCD_HOR_RESOLUTION / LCD_GetFont()->width;
 8000952:	f003 fec1 	bl	80046d8 <LCD_GetFont>
 8000956:	4603      	mov	r3, r0
 8000958:	781b      	ldrb	r3, [r3, #0]
 800095a:	b2da      	uxtb	r2, r3
 800095c:	f04f 0300 	mov.w	r3, #0
 8000960:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8000964:	f04f 0100 	mov.w	r1, #0
 8000968:	f7ff fc8a 	bl	8000280 <__aeabi_uldivmod>
 800096c:	4602      	mov	r2, r0
 800096e:	460b      	mov	r3, r1
 8000970:	4613      	mov	r3, r2
 8000972:	77fb      	strb	r3, [r7, #31]
	char acc_disp[MaxLength];
 8000974:	7ff9      	ldrb	r1, [r7, #31]
 8000976:	460b      	mov	r3, r1
 8000978:	3b01      	subs	r3, #1
 800097a:	61bb      	str	r3, [r7, #24]
 800097c:	b2ca      	uxtb	r2, r1
 800097e:	f04f 0300 	mov.w	r3, #0
 8000982:	ea4f 09c3 	mov.w	r9, r3, lsl #3
 8000986:	ea49 7952 	orr.w	r9, r9, r2, lsr #29
 800098a:	ea4f 08c2 	mov.w	r8, r2, lsl #3
 800098e:	b2ca      	uxtb	r2, r1
 8000990:	f04f 0300 	mov.w	r3, #0
 8000994:	00dd      	lsls	r5, r3, #3
 8000996:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 800099a:	00d4      	lsls	r4, r2, #3
 800099c:	460b      	mov	r3, r1
 800099e:	3307      	adds	r3, #7
 80009a0:	08db      	lsrs	r3, r3, #3
 80009a2:	00db      	lsls	r3, r3, #3
 80009a4:	ebad 0d03 	sub.w	sp, sp, r3
 80009a8:	ab02      	add	r3, sp, #8
 80009aa:	3300      	adds	r3, #0
 80009ac:	617b      	str	r3, [r7, #20]

	if (*x != 0)
 80009ae:	68fb      	ldr	r3, [r7, #12]
 80009b0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80009b4:	2b00      	cmp	r3, #0
 80009b6:	d03b      	beq.n	8000a30 <Display_Accelero+0xf0>
	{
		snprintf(acc_disp, MaxLength, "Acc_X:%d.%03d", (int)(*x*ACC_Scale),abs((int)(*x*ACC_Scale*1000)%1000));
 80009b8:	6978      	ldr	r0, [r7, #20]
 80009ba:	7ffc      	ldrb	r4, [r7, #31]
 80009bc:	68fb      	ldr	r3, [r7, #12]
 80009be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80009c2:	ee07 3a90 	vmov	s15, r3
 80009c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80009ca:	ed9f 7a5d 	vldr	s14, [pc, #372]	; 8000b40 <Display_Accelero+0x200>
 80009ce:	ee67 7a87 	vmul.f32	s15, s15, s14
 80009d2:	eefd 6ae7 	vcvt.s32.f32	s13, s15
 80009d6:	68fb      	ldr	r3, [r7, #12]
 80009d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80009dc:	ee07 3a90 	vmov	s15, r3
 80009e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80009e4:	ed9f 7a56 	vldr	s14, [pc, #344]	; 8000b40 <Display_Accelero+0x200>
 80009e8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80009ec:	ed9f 7a55 	vldr	s14, [pc, #340]	; 8000b44 <Display_Accelero+0x204>
 80009f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80009f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80009f8:	ee17 2a90 	vmov	r2, s15
 80009fc:	4b52      	ldr	r3, [pc, #328]	; (8000b48 <Display_Accelero+0x208>)
 80009fe:	fb83 1302 	smull	r1, r3, r3, r2
 8000a02:	1199      	asrs	r1, r3, #6
 8000a04:	17d3      	asrs	r3, r2, #31
 8000a06:	1acb      	subs	r3, r1, r3
 8000a08:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000a0c:	fb01 f303 	mul.w	r3, r1, r3
 8000a10:	1ad3      	subs	r3, r2, r3
 8000a12:	2b00      	cmp	r3, #0
 8000a14:	bfb8      	it	lt
 8000a16:	425b      	neglt	r3, r3
 8000a18:	9300      	str	r3, [sp, #0]
 8000a1a:	ee16 3a90 	vmov	r3, s13
 8000a1e:	4a4b      	ldr	r2, [pc, #300]	; (8000b4c <Display_Accelero+0x20c>)
 8000a20:	4621      	mov	r1, r4
 8000a22:	f000 ffcd 	bl	80019c0 <sniprintf>
		LCD_DisplayStringLine(8, acc_disp);
 8000a26:	697b      	ldr	r3, [r7, #20]
 8000a28:	4619      	mov	r1, r3
 8000a2a:	2008      	movs	r0, #8
 8000a2c:	f003 feb4 	bl	8004798 <LCD_DisplayStringLine>
	}
	if (*y != 0)
 8000a30:	68bb      	ldr	r3, [r7, #8]
 8000a32:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	d03b      	beq.n	8000ab2 <Display_Accelero+0x172>
	{
		snprintf(acc_disp, MaxLength, "Acc_Y:%d.%03d",(int)(*y*ACC_Scale),abs((int)(*y*ACC_Scale*1000)%1000));
 8000a3a:	6978      	ldr	r0, [r7, #20]
 8000a3c:	7ffc      	ldrb	r4, [r7, #31]
 8000a3e:	68bb      	ldr	r3, [r7, #8]
 8000a40:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a44:	ee07 3a90 	vmov	s15, r3
 8000a48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000a4c:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 8000b40 <Display_Accelero+0x200>
 8000a50:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000a54:	eefd 6ae7 	vcvt.s32.f32	s13, s15
 8000a58:	68bb      	ldr	r3, [r7, #8]
 8000a5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000a5e:	ee07 3a90 	vmov	s15, r3
 8000a62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000a66:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8000b40 <Display_Accelero+0x200>
 8000a6a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000a6e:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8000b44 <Display_Accelero+0x204>
 8000a72:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000a76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000a7a:	ee17 2a90 	vmov	r2, s15
 8000a7e:	4b32      	ldr	r3, [pc, #200]	; (8000b48 <Display_Accelero+0x208>)
 8000a80:	fb83 1302 	smull	r1, r3, r3, r2
 8000a84:	1199      	asrs	r1, r3, #6
 8000a86:	17d3      	asrs	r3, r2, #31
 8000a88:	1acb      	subs	r3, r1, r3
 8000a8a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000a8e:	fb01 f303 	mul.w	r3, r1, r3
 8000a92:	1ad3      	subs	r3, r2, r3
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	bfb8      	it	lt
 8000a98:	425b      	neglt	r3, r3
 8000a9a:	9300      	str	r3, [sp, #0]
 8000a9c:	ee16 3a90 	vmov	r3, s13
 8000aa0:	4a2b      	ldr	r2, [pc, #172]	; (8000b50 <Display_Accelero+0x210>)
 8000aa2:	4621      	mov	r1, r4
 8000aa4:	f000 ff8c 	bl	80019c0 <sniprintf>
		LCD_DisplayStringLine(9, acc_disp);
 8000aa8:	697b      	ldr	r3, [r7, #20]
 8000aaa:	4619      	mov	r1, r3
 8000aac:	2009      	movs	r0, #9
 8000aae:	f003 fe73 	bl	8004798 <LCD_DisplayStringLine>
	}
	if (*z != 0)
 8000ab2:	687b      	ldr	r3, [r7, #4]
 8000ab4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ab8:	2b00      	cmp	r3, #0
 8000aba:	d03b      	beq.n	8000b34 <Display_Accelero+0x1f4>
	{
		snprintf(acc_disp, MaxLength, "Acc_Z:%d.%03d",(int)(*z*ACC_Scale),abs((int)(*z*ACC_Scale*1000)%1000));
 8000abc:	6978      	ldr	r0, [r7, #20]
 8000abe:	7ffc      	ldrb	r4, [r7, #31]
 8000ac0:	687b      	ldr	r3, [r7, #4]
 8000ac2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ac6:	ee07 3a90 	vmov	s15, r3
 8000aca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000ace:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8000b40 <Display_Accelero+0x200>
 8000ad2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000ad6:	eefd 6ae7 	vcvt.s32.f32	s13, s15
 8000ada:	687b      	ldr	r3, [r7, #4]
 8000adc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ae0:	ee07 3a90 	vmov	s15, r3
 8000ae4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000ae8:	ed9f 7a15 	vldr	s14, [pc, #84]	; 8000b40 <Display_Accelero+0x200>
 8000aec:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000af0:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8000b44 <Display_Accelero+0x204>
 8000af4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000af8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000afc:	ee17 2a90 	vmov	r2, s15
 8000b00:	4b11      	ldr	r3, [pc, #68]	; (8000b48 <Display_Accelero+0x208>)
 8000b02:	fb83 1302 	smull	r1, r3, r3, r2
 8000b06:	1199      	asrs	r1, r3, #6
 8000b08:	17d3      	asrs	r3, r2, #31
 8000b0a:	1acb      	subs	r3, r1, r3
 8000b0c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000b10:	fb01 f303 	mul.w	r3, r1, r3
 8000b14:	1ad3      	subs	r3, r2, r3
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	bfb8      	it	lt
 8000b1a:	425b      	neglt	r3, r3
 8000b1c:	9300      	str	r3, [sp, #0]
 8000b1e:	ee16 3a90 	vmov	r3, s13
 8000b22:	4a0c      	ldr	r2, [pc, #48]	; (8000b54 <Display_Accelero+0x214>)
 8000b24:	4621      	mov	r1, r4
 8000b26:	f000 ff4b 	bl	80019c0 <sniprintf>
		LCD_DisplayStringLine(10, acc_disp);
 8000b2a:	697b      	ldr	r3, [r7, #20]
 8000b2c:	4619      	mov	r1, r3
 8000b2e:	200a      	movs	r0, #10
 8000b30:	f003 fe32 	bl	8004798 <LCD_DisplayStringLine>
 8000b34:	46b5      	mov	sp, r6
	}
}
 8000b36:	bf00      	nop
 8000b38:	3724      	adds	r7, #36	; 0x24
 8000b3a:	46bd      	mov	sp, r7
 8000b3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000b40:	3b7f9724 	.word	0x3b7f9724
 8000b44:	447a0000 	.word	0x447a0000
 8000b48:	10624dd3 	.word	0x10624dd3
 8000b4c:	080048bc 	.word	0x080048bc
 8000b50:	080048cc 	.word	0x080048cc
 8000b54:	080048dc 	.word	0x080048dc

08000b58 <GyroInit>:

void GyroInit(void)
{
 8000b58:	b580      	push	{r7, lr}
 8000b5a:	b08a      	sub	sp, #40	; 0x28
 8000b5c:	af02      	add	r7, sp, #8
	uint8_t value = 0x00;
 8000b5e:	2300      	movs	r3, #0
 8000b60:	73fb      	strb	r3, [r7, #15]
	err_code = CARME_I2C_Write(I2C2,I2C_GYR_ADDR,CTRL_REG2,0,&value,1); // disable HPF
 8000b62:	2301      	movs	r3, #1
 8000b64:	9301      	str	r3, [sp, #4]
 8000b66:	f107 030f 	add.w	r3, r7, #15
 8000b6a:	9300      	str	r3, [sp, #0]
 8000b6c:	2300      	movs	r3, #0
 8000b6e:	2221      	movs	r2, #33	; 0x21
 8000b70:	21d2      	movs	r1, #210	; 0xd2
 8000b72:	4861      	ldr	r0, [pc, #388]	; (8000cf8 <GyroInit+0x1a0>)
 8000b74:	f001 fe98 	bl	80028a8 <CARME_I2C_Write>
 8000b78:	4603      	mov	r3, r0
 8000b7a:	461a      	mov	r2, r3
 8000b7c:	4b5f      	ldr	r3, [pc, #380]	; (8000cfc <GyroInit+0x1a4>)
 8000b7e:	701a      	strb	r2, [r3, #0]
	value = 0x00;
 8000b80:	2300      	movs	r3, #0
 8000b82:	73fb      	strb	r3, [r7, #15]
	err_code = CARME_I2C_Write(I2C2,I2C_GYR_ADDR,CTRL_REG3,0,&value,1); // disable interrupts
 8000b84:	2301      	movs	r3, #1
 8000b86:	9301      	str	r3, [sp, #4]
 8000b88:	f107 030f 	add.w	r3, r7, #15
 8000b8c:	9300      	str	r3, [sp, #0]
 8000b8e:	2300      	movs	r3, #0
 8000b90:	2222      	movs	r2, #34	; 0x22
 8000b92:	21d2      	movs	r1, #210	; 0xd2
 8000b94:	4858      	ldr	r0, [pc, #352]	; (8000cf8 <GyroInit+0x1a0>)
 8000b96:	f001 fe87 	bl	80028a8 <CARME_I2C_Write>
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	461a      	mov	r2, r3
 8000b9e:	4b57      	ldr	r3, [pc, #348]	; (8000cfc <GyroInit+0x1a4>)
 8000ba0:	701a      	strb	r2, [r3, #0]
	value = GYR_Res_250;
 8000ba2:	2300      	movs	r3, #0
 8000ba4:	73fb      	strb	r3, [r7, #15]
	err_code = CARME_I2C_Write(I2C2,I2C_GYR_ADDR,CTRL_REG4,0,&value,1); // Set Resolution
 8000ba6:	2301      	movs	r3, #1
 8000ba8:	9301      	str	r3, [sp, #4]
 8000baa:	f107 030f 	add.w	r3, r7, #15
 8000bae:	9300      	str	r3, [sp, #0]
 8000bb0:	2300      	movs	r3, #0
 8000bb2:	2223      	movs	r2, #35	; 0x23
 8000bb4:	21d2      	movs	r1, #210	; 0xd2
 8000bb6:	4850      	ldr	r0, [pc, #320]	; (8000cf8 <GyroInit+0x1a0>)
 8000bb8:	f001 fe76 	bl	80028a8 <CARME_I2C_Write>
 8000bbc:	4603      	mov	r3, r0
 8000bbe:	461a      	mov	r2, r3
 8000bc0:	4b4e      	ldr	r3, [pc, #312]	; (8000cfc <GyroInit+0x1a4>)
 8000bc2:	701a      	strb	r2, [r3, #0]
	value = 0x0F;
 8000bc4:	230f      	movs	r3, #15
 8000bc6:	73fb      	strb	r3, [r7, #15]
	err_code = CARME_I2C_Write(I2C2,I2C_GYR_ADDR,CTRL_REG1,0,&value,1); //Wakeup Gyro, enable x,y,z
 8000bc8:	2301      	movs	r3, #1
 8000bca:	9301      	str	r3, [sp, #4]
 8000bcc:	f107 030f 	add.w	r3, r7, #15
 8000bd0:	9300      	str	r3, [sp, #0]
 8000bd2:	2300      	movs	r3, #0
 8000bd4:	2220      	movs	r2, #32
 8000bd6:	21d2      	movs	r1, #210	; 0xd2
 8000bd8:	4847      	ldr	r0, [pc, #284]	; (8000cf8 <GyroInit+0x1a0>)
 8000bda:	f001 fe65 	bl	80028a8 <CARME_I2C_Write>
 8000bde:	4603      	mov	r3, r0
 8000be0:	461a      	mov	r2, r3
 8000be2:	4b46      	ldr	r3, [pc, #280]	; (8000cfc <GyroInit+0x1a4>)
 8000be4:	701a      	strb	r2, [r3, #0]
	// Quick Calibration
	float X_BiasError, Y_BiasError, Z_BiasError = 0.0;
 8000be6:	f04f 0300 	mov.w	r3, #0
 8000bea:	617b      	str	r3, [r7, #20]
	uint16_t BiasErrorSplNbr = 500;
 8000bec:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000bf0:	823b      	strh	r3, [r7, #16]
	uint16_t i = 0;
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	827b      	strh	r3, [r7, #18]

	for (i = 0; i < BiasErrorSplNbr; i++)
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	827b      	strh	r3, [r7, #18]
 8000bfa:	e041      	b.n	8000c80 <GyroInit+0x128>
	{
		uint8_t angularrate[6];
			err_code = CARME_I2C_Read(I2C2, I2C_GYR_ADDR, OUT_X_L | (1 << 7), 0, angularrate, sizeof(angularrate));
 8000bfc:	2306      	movs	r3, #6
 8000bfe:	9301      	str	r3, [sp, #4]
 8000c00:	f107 0308 	add.w	r3, r7, #8
 8000c04:	9300      	str	r3, [sp, #0]
 8000c06:	2300      	movs	r3, #0
 8000c08:	22a8      	movs	r2, #168	; 0xa8
 8000c0a:	21d2      	movs	r1, #210	; 0xd2
 8000c0c:	483a      	ldr	r0, [pc, #232]	; (8000cf8 <GyroInit+0x1a0>)
 8000c0e:	f001 ff2f 	bl	8002a70 <CARME_I2C_Read>
 8000c12:	4603      	mov	r3, r0
 8000c14:	461a      	mov	r2, r3
 8000c16:	4b39      	ldr	r3, [pc, #228]	; (8000cfc <GyroInit+0x1a4>)
 8000c18:	701a      	strb	r2, [r3, #0]

	    X_BiasError += ((int16_t)(angularrate[1] << 8) | angularrate[0]);
 8000c1a:	7a7b      	ldrb	r3, [r7, #9]
 8000c1c:	021b      	lsls	r3, r3, #8
 8000c1e:	b21b      	sxth	r3, r3
 8000c20:	461a      	mov	r2, r3
 8000c22:	7a3b      	ldrb	r3, [r7, #8]
 8000c24:	4313      	orrs	r3, r2
 8000c26:	ee07 3a90 	vmov	s15, r3
 8000c2a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000c2e:	ed97 7a07 	vldr	s14, [r7, #28]
 8000c32:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000c36:	edc7 7a07 	vstr	s15, [r7, #28]
	    Y_BiasError += ((int16_t)(angularrate[3] << 8) | angularrate[2]);
 8000c3a:	7afb      	ldrb	r3, [r7, #11]
 8000c3c:	021b      	lsls	r3, r3, #8
 8000c3e:	b21b      	sxth	r3, r3
 8000c40:	461a      	mov	r2, r3
 8000c42:	7abb      	ldrb	r3, [r7, #10]
 8000c44:	4313      	orrs	r3, r2
 8000c46:	ee07 3a90 	vmov	s15, r3
 8000c4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000c4e:	ed97 7a06 	vldr	s14, [r7, #24]
 8000c52:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000c56:	edc7 7a06 	vstr	s15, [r7, #24]
	    Z_BiasError += ((int16_t)(angularrate[5] << 8) | angularrate[4]);
 8000c5a:	7b7b      	ldrb	r3, [r7, #13]
 8000c5c:	021b      	lsls	r3, r3, #8
 8000c5e:	b21b      	sxth	r3, r3
 8000c60:	461a      	mov	r2, r3
 8000c62:	7b3b      	ldrb	r3, [r7, #12]
 8000c64:	4313      	orrs	r3, r2
 8000c66:	ee07 3a90 	vmov	s15, r3
 8000c6a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000c6e:	ed97 7a05 	vldr	s14, [r7, #20]
 8000c72:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000c76:	edc7 7a05 	vstr	s15, [r7, #20]
	for (i = 0; i < BiasErrorSplNbr; i++)
 8000c7a:	8a7b      	ldrh	r3, [r7, #18]
 8000c7c:	3301      	adds	r3, #1
 8000c7e:	827b      	strh	r3, [r7, #18]
 8000c80:	8a7a      	ldrh	r2, [r7, #18]
 8000c82:	8a3b      	ldrh	r3, [r7, #16]
 8000c84:	429a      	cmp	r2, r3
 8000c86:	d3b9      	bcc.n	8000bfc <GyroInit+0xa4>
	}
	// Set raw errors
	X_RawError = X_BiasError / BiasErrorSplNbr;
 8000c88:	8a3b      	ldrh	r3, [r7, #16]
 8000c8a:	ee07 3a90 	vmov	s15, r3
 8000c8e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000c92:	edd7 6a07 	vldr	s13, [r7, #28]
 8000c96:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000c9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000c9e:	edc7 7a01 	vstr	s15, [r7, #4]
 8000ca2:	88bb      	ldrh	r3, [r7, #4]
 8000ca4:	b21a      	sxth	r2, r3
 8000ca6:	4b16      	ldr	r3, [pc, #88]	; (8000d00 <GyroInit+0x1a8>)
 8000ca8:	801a      	strh	r2, [r3, #0]
	Y_RawError = Y_BiasError / BiasErrorSplNbr;
 8000caa:	8a3b      	ldrh	r3, [r7, #16]
 8000cac:	ee07 3a90 	vmov	s15, r3
 8000cb0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000cb4:	edd7 6a06 	vldr	s13, [r7, #24]
 8000cb8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000cbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000cc0:	edc7 7a01 	vstr	s15, [r7, #4]
 8000cc4:	88bb      	ldrh	r3, [r7, #4]
 8000cc6:	b21a      	sxth	r2, r3
 8000cc8:	4b0e      	ldr	r3, [pc, #56]	; (8000d04 <GyroInit+0x1ac>)
 8000cca:	801a      	strh	r2, [r3, #0]
	Z_RawError = Z_BiasError / BiasErrorSplNbr;
 8000ccc:	8a3b      	ldrh	r3, [r7, #16]
 8000cce:	ee07 3a90 	vmov	s15, r3
 8000cd2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000cd6:	edd7 6a05 	vldr	s13, [r7, #20]
 8000cda:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000cde:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000ce2:	edc7 7a01 	vstr	s15, [r7, #4]
 8000ce6:	88bb      	ldrh	r3, [r7, #4]
 8000ce8:	b21a      	sxth	r2, r3
 8000cea:	4b07      	ldr	r3, [pc, #28]	; (8000d08 <GyroInit+0x1b0>)
 8000cec:	801a      	strh	r2, [r3, #0]
}
 8000cee:	bf00      	nop
 8000cf0:	3720      	adds	r7, #32
 8000cf2:	46bd      	mov	sp, r7
 8000cf4:	bd80      	pop	{r7, pc}
 8000cf6:	bf00      	nop
 8000cf8:	40005800 	.word	0x40005800
 8000cfc:	2000093a 	.word	0x2000093a
 8000d00:	2000093c 	.word	0x2000093c
 8000d04:	20000938 	.word	0x20000938
 8000d08:	2000093e 	.word	0x2000093e

08000d0c <ReadGyro>:

void ReadGyro(int16_t *dx, int16_t *dy, int16_t *dz)
{
 8000d0c:	b580      	push	{r7, lr}
 8000d0e:	b088      	sub	sp, #32
 8000d10:	af02      	add	r7, sp, #8
 8000d12:	60f8      	str	r0, [r7, #12]
 8000d14:	60b9      	str	r1, [r7, #8]
 8000d16:	607a      	str	r2, [r7, #4]
	uint8_t value = 0;
 8000d18:	2300      	movs	r3, #0
 8000d1a:	75fb      	strb	r3, [r7, #23]
	err_code = CARME_I2C_Read(I2C2,I2C_GYR_ADDR,STATUS_REG,0,&value,1); //Wakeup Gyro
 8000d1c:	2301      	movs	r3, #1
 8000d1e:	9301      	str	r3, [sp, #4]
 8000d20:	f107 0317 	add.w	r3, r7, #23
 8000d24:	9300      	str	r3, [sp, #0]
 8000d26:	2300      	movs	r3, #0
 8000d28:	2227      	movs	r2, #39	; 0x27
 8000d2a:	21d2      	movs	r1, #210	; 0xd2
 8000d2c:	4828      	ldr	r0, [pc, #160]	; (8000dd0 <ReadGyro+0xc4>)
 8000d2e:	f001 fe9f 	bl	8002a70 <CARME_I2C_Read>
 8000d32:	4603      	mov	r3, r0
 8000d34:	461a      	mov	r2, r3
 8000d36:	4b27      	ldr	r3, [pc, #156]	; (8000dd4 <ReadGyro+0xc8>)
 8000d38:	701a      	strb	r2, [r3, #0]
	if ( value&0x08 )
 8000d3a:	7dfb      	ldrb	r3, [r7, #23]
 8000d3c:	f003 0308 	and.w	r3, r3, #8
 8000d40:	2b00      	cmp	r3, #0
 8000d42:	d041      	beq.n	8000dc8 <ReadGyro+0xbc>
	{
		uint8_t angularrate[6];
		err_code = CARME_I2C_Read(I2C2, I2C_GYR_ADDR, OUT_X_L | (1 << 7), 0, angularrate, sizeof(angularrate));
 8000d44:	2306      	movs	r3, #6
 8000d46:	9301      	str	r3, [sp, #4]
 8000d48:	f107 0310 	add.w	r3, r7, #16
 8000d4c:	9300      	str	r3, [sp, #0]
 8000d4e:	2300      	movs	r3, #0
 8000d50:	22a8      	movs	r2, #168	; 0xa8
 8000d52:	21d2      	movs	r1, #210	; 0xd2
 8000d54:	481e      	ldr	r0, [pc, #120]	; (8000dd0 <ReadGyro+0xc4>)
 8000d56:	f001 fe8b 	bl	8002a70 <CARME_I2C_Read>
 8000d5a:	4603      	mov	r3, r0
 8000d5c:	461a      	mov	r2, r3
 8000d5e:	4b1d      	ldr	r3, [pc, #116]	; (8000dd4 <ReadGyro+0xc8>)
 8000d60:	701a      	strb	r2, [r3, #0]

		*dx = ((int16_t)(angularrate[1] << 8) | angularrate[0]) + (-1*X_RawError);
 8000d62:	7c7b      	ldrb	r3, [r7, #17]
 8000d64:	021b      	lsls	r3, r3, #8
 8000d66:	b21a      	sxth	r2, r3
 8000d68:	7c3b      	ldrb	r3, [r7, #16]
 8000d6a:	b21b      	sxth	r3, r3
 8000d6c:	4313      	orrs	r3, r2
 8000d6e:	b21b      	sxth	r3, r3
 8000d70:	b29a      	uxth	r2, r3
 8000d72:	4b19      	ldr	r3, [pc, #100]	; (8000dd8 <ReadGyro+0xcc>)
 8000d74:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d78:	b29b      	uxth	r3, r3
 8000d7a:	1ad3      	subs	r3, r2, r3
 8000d7c:	b29b      	uxth	r3, r3
 8000d7e:	b21a      	sxth	r2, r3
 8000d80:	68fb      	ldr	r3, [r7, #12]
 8000d82:	801a      	strh	r2, [r3, #0]
		*dy = ((int16_t)(angularrate[3] << 8) | angularrate[2]) + (-1*Y_RawError);
 8000d84:	7cfb      	ldrb	r3, [r7, #19]
 8000d86:	021b      	lsls	r3, r3, #8
 8000d88:	b21a      	sxth	r2, r3
 8000d8a:	7cbb      	ldrb	r3, [r7, #18]
 8000d8c:	b21b      	sxth	r3, r3
 8000d8e:	4313      	orrs	r3, r2
 8000d90:	b21b      	sxth	r3, r3
 8000d92:	b29a      	uxth	r2, r3
 8000d94:	4b11      	ldr	r3, [pc, #68]	; (8000ddc <ReadGyro+0xd0>)
 8000d96:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000d9a:	b29b      	uxth	r3, r3
 8000d9c:	1ad3      	subs	r3, r2, r3
 8000d9e:	b29b      	uxth	r3, r3
 8000da0:	b21a      	sxth	r2, r3
 8000da2:	68bb      	ldr	r3, [r7, #8]
 8000da4:	801a      	strh	r2, [r3, #0]
		*dz = ((int16_t)(angularrate[5] << 8) | angularrate[4]) + (-1*Z_RawError);
 8000da6:	7d7b      	ldrb	r3, [r7, #21]
 8000da8:	021b      	lsls	r3, r3, #8
 8000daa:	b21a      	sxth	r2, r3
 8000dac:	7d3b      	ldrb	r3, [r7, #20]
 8000dae:	b21b      	sxth	r3, r3
 8000db0:	4313      	orrs	r3, r2
 8000db2:	b21b      	sxth	r3, r3
 8000db4:	b29a      	uxth	r2, r3
 8000db6:	4b0a      	ldr	r3, [pc, #40]	; (8000de0 <ReadGyro+0xd4>)
 8000db8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000dbc:	b29b      	uxth	r3, r3
 8000dbe:	1ad3      	subs	r3, r2, r3
 8000dc0:	b29b      	uxth	r3, r3
 8000dc2:	b21a      	sxth	r2, r3
 8000dc4:	687b      	ldr	r3, [r7, #4]
 8000dc6:	801a      	strh	r2, [r3, #0]
	}

}
 8000dc8:	bf00      	nop
 8000dca:	3718      	adds	r7, #24
 8000dcc:	46bd      	mov	sp, r7
 8000dce:	bd80      	pop	{r7, pc}
 8000dd0:	40005800 	.word	0x40005800
 8000dd4:	2000093a 	.word	0x2000093a
 8000dd8:	2000093c 	.word	0x2000093c
 8000ddc:	20000938 	.word	0x20000938
 8000de0:	2000093e 	.word	0x2000093e

08000de4 <Display_Gyro>:

void Display_Gyro(int16_t *x, int16_t *y, int16_t *z)
{
 8000de4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000de8:	b08b      	sub	sp, #44	; 0x2c
 8000dea:	af02      	add	r7, sp, #8
 8000dec:	60f8      	str	r0, [r7, #12]
 8000dee:	60b9      	str	r1, [r7, #8]
 8000df0:	607a      	str	r2, [r7, #4]
 8000df2:	466b      	mov	r3, sp
 8000df4:	461e      	mov	r6, r3
	uint8_t MaxLength = LCD_HOR_RESOLUTION / LCD_GetFont()->width;
 8000df6:	f003 fc6f 	bl	80046d8 <LCD_GetFont>
 8000dfa:	4603      	mov	r3, r0
 8000dfc:	781b      	ldrb	r3, [r3, #0]
 8000dfe:	b2da      	uxtb	r2, r3
 8000e00:	f04f 0300 	mov.w	r3, #0
 8000e04:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8000e08:	f04f 0100 	mov.w	r1, #0
 8000e0c:	f7ff fa38 	bl	8000280 <__aeabi_uldivmod>
 8000e10:	4602      	mov	r2, r0
 8000e12:	460b      	mov	r3, r1
 8000e14:	4613      	mov	r3, r2
 8000e16:	77fb      	strb	r3, [r7, #31]
	char gyr_disp[MaxLength];
 8000e18:	7ff9      	ldrb	r1, [r7, #31]
 8000e1a:	460b      	mov	r3, r1
 8000e1c:	3b01      	subs	r3, #1
 8000e1e:	61bb      	str	r3, [r7, #24]
 8000e20:	b2ca      	uxtb	r2, r1
 8000e22:	f04f 0300 	mov.w	r3, #0
 8000e26:	ea4f 09c3 	mov.w	r9, r3, lsl #3
 8000e2a:	ea49 7952 	orr.w	r9, r9, r2, lsr #29
 8000e2e:	ea4f 08c2 	mov.w	r8, r2, lsl #3
 8000e32:	b2ca      	uxtb	r2, r1
 8000e34:	f04f 0300 	mov.w	r3, #0
 8000e38:	00dd      	lsls	r5, r3, #3
 8000e3a:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 8000e3e:	00d4      	lsls	r4, r2, #3
 8000e40:	460b      	mov	r3, r1
 8000e42:	3307      	adds	r3, #7
 8000e44:	08db      	lsrs	r3, r3, #3
 8000e46:	00db      	lsls	r3, r3, #3
 8000e48:	ebad 0d03 	sub.w	sp, sp, r3
 8000e4c:	ab02      	add	r3, sp, #8
 8000e4e:	3300      	adds	r3, #0
 8000e50:	617b      	str	r3, [r7, #20]

	if (*x != 0)
 8000e52:	68fb      	ldr	r3, [r7, #12]
 8000e54:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e58:	2b00      	cmp	r3, #0
 8000e5a:	d03b      	beq.n	8000ed4 <Display_Gyro+0xf0>
	{
		snprintf(gyr_disp, MaxLength, "Gyr_X:%d.%03d",(int)(*x*GYR_Scale_250),abs((int)(*x*GYR_Scale_250*1000)%1000));
 8000e5c:	6978      	ldr	r0, [r7, #20]
 8000e5e:	7ffc      	ldrb	r4, [r7, #31]
 8000e60:	68fb      	ldr	r3, [r7, #12]
 8000e62:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e66:	ee07 3a90 	vmov	s15, r3
 8000e6a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000e6e:	ed9f 7a5d 	vldr	s14, [pc, #372]	; 8000fe4 <Display_Gyro+0x200>
 8000e72:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000e76:	eefd 6ae7 	vcvt.s32.f32	s13, s15
 8000e7a:	68fb      	ldr	r3, [r7, #12]
 8000e7c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000e80:	ee07 3a90 	vmov	s15, r3
 8000e84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000e88:	ed9f 7a56 	vldr	s14, [pc, #344]	; 8000fe4 <Display_Gyro+0x200>
 8000e8c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000e90:	ed9f 7a55 	vldr	s14, [pc, #340]	; 8000fe8 <Display_Gyro+0x204>
 8000e94:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000e98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000e9c:	ee17 2a90 	vmov	r2, s15
 8000ea0:	4b52      	ldr	r3, [pc, #328]	; (8000fec <Display_Gyro+0x208>)
 8000ea2:	fb83 1302 	smull	r1, r3, r3, r2
 8000ea6:	1199      	asrs	r1, r3, #6
 8000ea8:	17d3      	asrs	r3, r2, #31
 8000eaa:	1acb      	subs	r3, r1, r3
 8000eac:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000eb0:	fb01 f303 	mul.w	r3, r1, r3
 8000eb4:	1ad3      	subs	r3, r2, r3
 8000eb6:	2b00      	cmp	r3, #0
 8000eb8:	bfb8      	it	lt
 8000eba:	425b      	neglt	r3, r3
 8000ebc:	9300      	str	r3, [sp, #0]
 8000ebe:	ee16 3a90 	vmov	r3, s13
 8000ec2:	4a4b      	ldr	r2, [pc, #300]	; (8000ff0 <Display_Gyro+0x20c>)
 8000ec4:	4621      	mov	r1, r4
 8000ec6:	f000 fd7b 	bl	80019c0 <sniprintf>
		LCD_DisplayStringLine(12, gyr_disp);
 8000eca:	697b      	ldr	r3, [r7, #20]
 8000ecc:	4619      	mov	r1, r3
 8000ece:	200c      	movs	r0, #12
 8000ed0:	f003 fc62 	bl	8004798 <LCD_DisplayStringLine>
	}
	if (*y != 0)
 8000ed4:	68bb      	ldr	r3, [r7, #8]
 8000ed6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d03b      	beq.n	8000f56 <Display_Gyro+0x172>
	{
		snprintf(gyr_disp, MaxLength, "Gyr_Y:%d.%03d",(int)(*y*GYR_Scale_250),abs((int)(*y*GYR_Scale_250*1000)%1000));
 8000ede:	6978      	ldr	r0, [r7, #20]
 8000ee0:	7ffc      	ldrb	r4, [r7, #31]
 8000ee2:	68bb      	ldr	r3, [r7, #8]
 8000ee4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ee8:	ee07 3a90 	vmov	s15, r3
 8000eec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000ef0:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 8000fe4 <Display_Gyro+0x200>
 8000ef4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000ef8:	eefd 6ae7 	vcvt.s32.f32	s13, s15
 8000efc:	68bb      	ldr	r3, [r7, #8]
 8000efe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f02:	ee07 3a90 	vmov	s15, r3
 8000f06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000f0a:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8000fe4 <Display_Gyro+0x200>
 8000f0e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f12:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8000fe8 <Display_Gyro+0x204>
 8000f16:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000f1e:	ee17 2a90 	vmov	r2, s15
 8000f22:	4b32      	ldr	r3, [pc, #200]	; (8000fec <Display_Gyro+0x208>)
 8000f24:	fb83 1302 	smull	r1, r3, r3, r2
 8000f28:	1199      	asrs	r1, r3, #6
 8000f2a:	17d3      	asrs	r3, r2, #31
 8000f2c:	1acb      	subs	r3, r1, r3
 8000f2e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000f32:	fb01 f303 	mul.w	r3, r1, r3
 8000f36:	1ad3      	subs	r3, r2, r3
 8000f38:	2b00      	cmp	r3, #0
 8000f3a:	bfb8      	it	lt
 8000f3c:	425b      	neglt	r3, r3
 8000f3e:	9300      	str	r3, [sp, #0]
 8000f40:	ee16 3a90 	vmov	r3, s13
 8000f44:	4a2b      	ldr	r2, [pc, #172]	; (8000ff4 <Display_Gyro+0x210>)
 8000f46:	4621      	mov	r1, r4
 8000f48:	f000 fd3a 	bl	80019c0 <sniprintf>
		LCD_DisplayStringLine(13, gyr_disp);
 8000f4c:	697b      	ldr	r3, [r7, #20]
 8000f4e:	4619      	mov	r1, r3
 8000f50:	200d      	movs	r0, #13
 8000f52:	f003 fc21 	bl	8004798 <LCD_DisplayStringLine>
	}
	if (*z != 0)
 8000f56:	687b      	ldr	r3, [r7, #4]
 8000f58:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d03b      	beq.n	8000fd8 <Display_Gyro+0x1f4>
	{
		snprintf(gyr_disp, MaxLength, "Gyr_Z:%d.%03d",(int)(*z*GYR_Scale_250),abs((int)(*z*GYR_Scale_250*1000)%1000));
 8000f60:	6978      	ldr	r0, [r7, #20]
 8000f62:	7ffc      	ldrb	r4, [r7, #31]
 8000f64:	687b      	ldr	r3, [r7, #4]
 8000f66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f6a:	ee07 3a90 	vmov	s15, r3
 8000f6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000f72:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8000fe4 <Display_Gyro+0x200>
 8000f76:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f7a:	eefd 6ae7 	vcvt.s32.f32	s13, s15
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f84:	ee07 3a90 	vmov	s15, r3
 8000f88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000f8c:	ed9f 7a15 	vldr	s14, [pc, #84]	; 8000fe4 <Display_Gyro+0x200>
 8000f90:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f94:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8000fe8 <Display_Gyro+0x204>
 8000f98:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000fa0:	ee17 2a90 	vmov	r2, s15
 8000fa4:	4b11      	ldr	r3, [pc, #68]	; (8000fec <Display_Gyro+0x208>)
 8000fa6:	fb83 1302 	smull	r1, r3, r3, r2
 8000faa:	1199      	asrs	r1, r3, #6
 8000fac:	17d3      	asrs	r3, r2, #31
 8000fae:	1acb      	subs	r3, r1, r3
 8000fb0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000fb4:	fb01 f303 	mul.w	r3, r1, r3
 8000fb8:	1ad3      	subs	r3, r2, r3
 8000fba:	2b00      	cmp	r3, #0
 8000fbc:	bfb8      	it	lt
 8000fbe:	425b      	neglt	r3, r3
 8000fc0:	9300      	str	r3, [sp, #0]
 8000fc2:	ee16 3a90 	vmov	r3, s13
 8000fc6:	4a0c      	ldr	r2, [pc, #48]	; (8000ff8 <Display_Gyro+0x214>)
 8000fc8:	4621      	mov	r1, r4
 8000fca:	f000 fcf9 	bl	80019c0 <sniprintf>
		LCD_DisplayStringLine(14, gyr_disp);
 8000fce:	697b      	ldr	r3, [r7, #20]
 8000fd0:	4619      	mov	r1, r3
 8000fd2:	200e      	movs	r0, #14
 8000fd4:	f003 fbe0 	bl	8004798 <LCD_DisplayStringLine>
 8000fd8:	46b5      	mov	sp, r6
	}
}
 8000fda:	bf00      	nop
 8000fdc:	3724      	adds	r7, #36	; 0x24
 8000fde:	46bd      	mov	sp, r7
 8000fe0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000fe4:	3c0f5c29 	.word	0x3c0f5c29
 8000fe8:	447a0000 	.word	0x447a0000
 8000fec:	10624dd3 	.word	0x10624dd3
 8000ff0:	080048ec 	.word	0x080048ec
 8000ff4:	080048fc 	.word	0x080048fc
 8000ff8:	0800490c 	.word	0x0800490c

08000ffc <GetSegment_Length>:

uint8_t GetSegment_Length(char *str)
{
 8000ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ffe:	b085      	sub	sp, #20
 8001000:	af00      	add	r7, sp, #0
 8001002:	6078      	str	r0, [r7, #4]
	uint8_t MaxLength = min((LCD_HOR_RESOLUTION / LCD_GetFont()->width),strlen(str));
 8001004:	f003 fb68 	bl	80046d8 <LCD_GetFont>
 8001008:	4603      	mov	r3, r0
 800100a:	781b      	ldrb	r3, [r3, #0]
 800100c:	b2db      	uxtb	r3, r3
 800100e:	f04f 0400 	mov.w	r4, #0
 8001012:	461a      	mov	r2, r3
 8001014:	4623      	mov	r3, r4
 8001016:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800101a:	f04f 0100 	mov.w	r1, #0
 800101e:	f7ff f92f 	bl	8000280 <__aeabi_uldivmod>
 8001022:	4603      	mov	r3, r0
 8001024:	460c      	mov	r4, r1
 8001026:	461d      	mov	r5, r3
 8001028:	4626      	mov	r6, r4
 800102a:	6878      	ldr	r0, [r7, #4]
 800102c:	f7ff f8d0 	bl	80001d0 <strlen>
 8001030:	4603      	mov	r3, r0
 8001032:	f04f 0400 	mov.w	r4, #0
 8001036:	42a6      	cmp	r6, r4
 8001038:	bf08      	it	eq
 800103a:	429d      	cmpeq	r5, r3
 800103c:	d212      	bcs.n	8001064 <GetSegment_Length+0x68>
 800103e:	f003 fb4b 	bl	80046d8 <LCD_GetFont>
 8001042:	4603      	mov	r3, r0
 8001044:	781b      	ldrb	r3, [r3, #0]
 8001046:	b2db      	uxtb	r3, r3
 8001048:	f04f 0400 	mov.w	r4, #0
 800104c:	461a      	mov	r2, r3
 800104e:	4623      	mov	r3, r4
 8001050:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8001054:	f04f 0100 	mov.w	r1, #0
 8001058:	f7ff f912 	bl	8000280 <__aeabi_uldivmod>
 800105c:	4603      	mov	r3, r0
 800105e:	460c      	mov	r4, r1
 8001060:	b2db      	uxtb	r3, r3
 8001062:	e004      	b.n	800106e <GetSegment_Length+0x72>
 8001064:	6878      	ldr	r0, [r7, #4]
 8001066:	f7ff f8b3 	bl	80001d0 <strlen>
 800106a:	4603      	mov	r3, r0
 800106c:	b2db      	uxtb	r3, r3
 800106e:	72fb      	strb	r3, [r7, #11]
	for (int segment_index = 0; segment_index<MaxLength; segment_index++)
 8001070:	2300      	movs	r3, #0
 8001072:	60fb      	str	r3, [r7, #12]
 8001074:	e012      	b.n	800109c <GetSegment_Length+0xa0>
	{
		switch (str[segment_index])
 8001076:	68fb      	ldr	r3, [r7, #12]
 8001078:	687a      	ldr	r2, [r7, #4]
 800107a:	4413      	add	r3, r2
 800107c:	781b      	ldrb	r3, [r3, #0]
 800107e:	2b24      	cmp	r3, #36	; 0x24
 8001080:	d002      	beq.n	8001088 <GetSegment_Length+0x8c>
 8001082:	2b2a      	cmp	r3, #42	; 0x2a
 8001084:	d002      	beq.n	800108c <GetSegment_Length+0x90>
			case '$':
				return 0;
			case '*':
				return segment_index+3;
			default:
				break;
 8001086:	e006      	b.n	8001096 <GetSegment_Length+0x9a>
				return 0;
 8001088:	2300      	movs	r3, #0
 800108a:	e00c      	b.n	80010a6 <GetSegment_Length+0xaa>
				return segment_index+3;
 800108c:	68fb      	ldr	r3, [r7, #12]
 800108e:	b2db      	uxtb	r3, r3
 8001090:	3303      	adds	r3, #3
 8001092:	b2db      	uxtb	r3, r3
 8001094:	e007      	b.n	80010a6 <GetSegment_Length+0xaa>
	for (int segment_index = 0; segment_index<MaxLength; segment_index++)
 8001096:	68fb      	ldr	r3, [r7, #12]
 8001098:	3301      	adds	r3, #1
 800109a:	60fb      	str	r3, [r7, #12]
 800109c:	7afa      	ldrb	r2, [r7, #11]
 800109e:	68fb      	ldr	r3, [r7, #12]
 80010a0:	429a      	cmp	r2, r3
 80010a2:	dce8      	bgt.n	8001076 <GetSegment_Length+0x7a>
		}
	}
	return 0;
 80010a4:	2300      	movs	r3, #0
}
 80010a6:	4618      	mov	r0, r3
 80010a8:	3714      	adds	r7, #20
 80010aa:	46bd      	mov	sp, r7
 80010ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080010b0 <Display_NMEA>:

void Display_NMEA(char *NMEA_string)
{
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b08c      	sub	sp, #48	; 0x30
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	6078      	str	r0, [r7, #4]
	// Disable UART1 Interrupts
	NVIC_DisableIRQ(USART1_IRQn);
 80010b8:	2025      	movs	r0, #37	; 0x25
 80010ba:	f7ff fa83 	bl	80005c4 <NVIC_DisableIRQ>
	uint8_t SegmentLength = 1;
 80010be:	2301      	movs	r3, #1
 80010c0:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	for ( int search=0 ; search<NMEA_stringlength-6 ; search+=SegmentLength )
 80010c4:	2300      	movs	r3, #0
 80010c6:	62bb      	str	r3, [r7, #40]	; 0x28
 80010c8:	e1a4      	b.n	8001414 <Display_NMEA+0x364>
	{
		if ((NMEA_string[search] == '$' && NMEA_string[search+1] == 'G') && NMEA_string[search+2] == 'P')
 80010ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80010cc:	687a      	ldr	r2, [r7, #4]
 80010ce:	4413      	add	r3, r2
 80010d0:	781b      	ldrb	r3, [r3, #0]
 80010d2:	2b24      	cmp	r3, #36	; 0x24
 80010d4:	f040 8196 	bne.w	8001404 <Display_NMEA+0x354>
 80010d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80010da:	3301      	adds	r3, #1
 80010dc:	687a      	ldr	r2, [r7, #4]
 80010de:	4413      	add	r3, r2
 80010e0:	781b      	ldrb	r3, [r3, #0]
 80010e2:	2b47      	cmp	r3, #71	; 0x47
 80010e4:	f040 818e 	bne.w	8001404 <Display_NMEA+0x354>
 80010e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80010ea:	3302      	adds	r3, #2
 80010ec:	687a      	ldr	r2, [r7, #4]
 80010ee:	4413      	add	r3, r2
 80010f0:	781b      	ldrb	r3, [r3, #0]
 80010f2:	2b50      	cmp	r3, #80	; 0x50
 80010f4:	f040 8186 	bne.w	8001404 <Display_NMEA+0x354>
		{
			switch (NMEA_string[search+3])
 80010f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80010fa:	3303      	adds	r3, #3
 80010fc:	687a      	ldr	r2, [r7, #4]
 80010fe:	4413      	add	r3, r2
 8001100:	781b      	ldrb	r3, [r3, #0]
 8001102:	3b47      	subs	r3, #71	; 0x47
 8001104:	2b13      	cmp	r3, #19
 8001106:	f200 8175 	bhi.w	80013f4 <Display_NMEA+0x344>
 800110a:	a201      	add	r2, pc, #4	; (adr r2, 8001110 <Display_NMEA+0x60>)
 800110c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001110:	08001161 	.word	0x08001161
 8001114:	080013f5 	.word	0x080013f5
 8001118:	080013f5 	.word	0x080013f5
 800111c:	080013f5 	.word	0x080013f5
 8001120:	080013f5 	.word	0x080013f5
 8001124:	080013f5 	.word	0x080013f5
 8001128:	080013f5 	.word	0x080013f5
 800112c:	080013f5 	.word	0x080013f5
 8001130:	080013f5 	.word	0x080013f5
 8001134:	080013f5 	.word	0x080013f5
 8001138:	080013f5 	.word	0x080013f5
 800113c:	080012d1 	.word	0x080012d1
 8001140:	080013f5 	.word	0x080013f5
 8001144:	080013f5 	.word	0x080013f5
 8001148:	080013f5 	.word	0x080013f5
 800114c:	08001335 	.word	0x08001335
 8001150:	080013f5 	.word	0x080013f5
 8001154:	080013f5 	.word	0x080013f5
 8001158:	080013f5 	.word	0x080013f5
 800115c:	08001395 	.word	0x08001395
			{
				case 'G':
					switch (NMEA_string[search+4]) {
 8001160:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001162:	3304      	adds	r3, #4
 8001164:	687a      	ldr	r2, [r7, #4]
 8001166:	4413      	add	r3, r2
 8001168:	781b      	ldrb	r3, [r3, #0]
 800116a:	2b4c      	cmp	r3, #76	; 0x4c
 800116c:	f000 8081 	beq.w	8001272 <Display_NMEA+0x1c2>
 8001170:	2b53      	cmp	r3, #83	; 0x53
 8001172:	d02c      	beq.n	80011ce <Display_NMEA+0x11e>
 8001174:	2b47      	cmp	r3, #71	; 0x47
 8001176:	d000      	beq.n	800117a <Display_NMEA+0xca>
								if (SegmentLength == 0) SegmentLength = 1;
								else SegmentLength+=6;
							}
							break;
						default:
							break;
 8001178:	e0a9      	b.n	80012ce <Display_NMEA+0x21e>
							if (NMEA_string[search+5] == 'A')
 800117a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800117c:	3305      	adds	r3, #5
 800117e:	687a      	ldr	r2, [r7, #4]
 8001180:	4413      	add	r3, r2
 8001182:	781b      	ldrb	r3, [r3, #0]
 8001184:	2b41      	cmp	r3, #65	; 0x41
 8001186:	f040 809d 	bne.w	80012c4 <Display_NMEA+0x214>
								SegmentLength = GetSegment_Length(&NMEA_string[search+6]);
 800118a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800118c:	3306      	adds	r3, #6
 800118e:	687a      	ldr	r2, [r7, #4]
 8001190:	4413      	add	r3, r2
 8001192:	4618      	mov	r0, r3
 8001194:	f7ff ff32 	bl	8000ffc <GetSegment_Length>
 8001198:	4603      	mov	r3, r0
 800119a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
								strncpy(&NMEA.GGA[4], &NMEA_string[search+6], SegmentLength);
 800119e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80011a0:	3306      	adds	r3, #6
 80011a2:	687a      	ldr	r2, [r7, #4]
 80011a4:	4413      	add	r3, r2
 80011a6:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 80011aa:	4619      	mov	r1, r3
 80011ac:	48b9      	ldr	r0, [pc, #740]	; (8001494 <Display_NMEA+0x3e4>)
 80011ae:	f000 fc3b 	bl	8001a28 <strncpy>
								if (SegmentLength == 0) SegmentLength = 1;
 80011b2:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80011b6:	2b00      	cmp	r3, #0
 80011b8:	d103      	bne.n	80011c2 <Display_NMEA+0x112>
 80011ba:	2301      	movs	r3, #1
 80011bc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
							break;
 80011c0:	e080      	b.n	80012c4 <Display_NMEA+0x214>
								else SegmentLength+=6;
 80011c2:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80011c6:	3306      	adds	r3, #6
 80011c8:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
							break;
 80011cc:	e07a      	b.n	80012c4 <Display_NMEA+0x214>
							if (NMEA_string[search+5] == 'A')
 80011ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80011d0:	3305      	adds	r3, #5
 80011d2:	687a      	ldr	r2, [r7, #4]
 80011d4:	4413      	add	r3, r2
 80011d6:	781b      	ldrb	r3, [r3, #0]
 80011d8:	2b41      	cmp	r3, #65	; 0x41
 80011da:	d121      	bne.n	8001220 <Display_NMEA+0x170>
								SegmentLength = GetSegment_Length(&NMEA_string[search+6]);
 80011dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80011de:	3306      	adds	r3, #6
 80011e0:	687a      	ldr	r2, [r7, #4]
 80011e2:	4413      	add	r3, r2
 80011e4:	4618      	mov	r0, r3
 80011e6:	f7ff ff09 	bl	8000ffc <GetSegment_Length>
 80011ea:	4603      	mov	r3, r0
 80011ec:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
								strncpy(&NMEA.GSA[4], &NMEA_string[search+6], SegmentLength);
 80011f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80011f2:	3306      	adds	r3, #6
 80011f4:	687a      	ldr	r2, [r7, #4]
 80011f6:	4413      	add	r3, r2
 80011f8:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 80011fc:	4619      	mov	r1, r3
 80011fe:	48a6      	ldr	r0, [pc, #664]	; (8001498 <Display_NMEA+0x3e8>)
 8001200:	f000 fc12 	bl	8001a28 <strncpy>
								if (SegmentLength == 0) SegmentLength = 1;
 8001204:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001208:	2b00      	cmp	r3, #0
 800120a:	d103      	bne.n	8001214 <Display_NMEA+0x164>
 800120c:	2301      	movs	r3, #1
 800120e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
							break;
 8001212:	e059      	b.n	80012c8 <Display_NMEA+0x218>
								else SegmentLength+=6;
 8001214:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001218:	3306      	adds	r3, #6
 800121a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
							break;
 800121e:	e053      	b.n	80012c8 <Display_NMEA+0x218>
							else if (NMEA_string[search+5] == 'V')
 8001220:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001222:	3305      	adds	r3, #5
 8001224:	687a      	ldr	r2, [r7, #4]
 8001226:	4413      	add	r3, r2
 8001228:	781b      	ldrb	r3, [r3, #0]
 800122a:	2b56      	cmp	r3, #86	; 0x56
 800122c:	d14c      	bne.n	80012c8 <Display_NMEA+0x218>
								SegmentLength = GetSegment_Length(&NMEA_string[search+6]);
 800122e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001230:	3306      	adds	r3, #6
 8001232:	687a      	ldr	r2, [r7, #4]
 8001234:	4413      	add	r3, r2
 8001236:	4618      	mov	r0, r3
 8001238:	f7ff fee0 	bl	8000ffc <GetSegment_Length>
 800123c:	4603      	mov	r3, r0
 800123e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
								strncpy(&NMEA.GSV[4], &NMEA_string[search+6], SegmentLength);
 8001242:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001244:	3306      	adds	r3, #6
 8001246:	687a      	ldr	r2, [r7, #4]
 8001248:	4413      	add	r3, r2
 800124a:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 800124e:	4619      	mov	r1, r3
 8001250:	4892      	ldr	r0, [pc, #584]	; (800149c <Display_NMEA+0x3ec>)
 8001252:	f000 fbe9 	bl	8001a28 <strncpy>
								if (SegmentLength == 0) SegmentLength = 1;
 8001256:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800125a:	2b00      	cmp	r3, #0
 800125c:	d103      	bne.n	8001266 <Display_NMEA+0x1b6>
 800125e:	2301      	movs	r3, #1
 8001260:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
							break;
 8001264:	e030      	b.n	80012c8 <Display_NMEA+0x218>
								else SegmentLength+=6;
 8001266:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800126a:	3306      	adds	r3, #6
 800126c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
							break;
 8001270:	e02a      	b.n	80012c8 <Display_NMEA+0x218>
							if (NMEA_string[search+5] == 'L')
 8001272:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001274:	3305      	adds	r3, #5
 8001276:	687a      	ldr	r2, [r7, #4]
 8001278:	4413      	add	r3, r2
 800127a:	781b      	ldrb	r3, [r3, #0]
 800127c:	2b4c      	cmp	r3, #76	; 0x4c
 800127e:	d125      	bne.n	80012cc <Display_NMEA+0x21c>
								SegmentLength = GetSegment_Length(&NMEA_string[search+6]);
 8001280:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001282:	3306      	adds	r3, #6
 8001284:	687a      	ldr	r2, [r7, #4]
 8001286:	4413      	add	r3, r2
 8001288:	4618      	mov	r0, r3
 800128a:	f7ff feb7 	bl	8000ffc <GetSegment_Length>
 800128e:	4603      	mov	r3, r0
 8001290:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
								strncpy(&NMEA.GLL[4], &NMEA_string[search+6], SegmentLength);
 8001294:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001296:	3306      	adds	r3, #6
 8001298:	687a      	ldr	r2, [r7, #4]
 800129a:	4413      	add	r3, r2
 800129c:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 80012a0:	4619      	mov	r1, r3
 80012a2:	487f      	ldr	r0, [pc, #508]	; (80014a0 <Display_NMEA+0x3f0>)
 80012a4:	f000 fbc0 	bl	8001a28 <strncpy>
								if (SegmentLength == 0) SegmentLength = 1;
 80012a8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80012ac:	2b00      	cmp	r3, #0
 80012ae:	d103      	bne.n	80012b8 <Display_NMEA+0x208>
 80012b0:	2301      	movs	r3, #1
 80012b2:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
							break;
 80012b6:	e009      	b.n	80012cc <Display_NMEA+0x21c>
								else SegmentLength+=6;
 80012b8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80012bc:	3306      	adds	r3, #6
 80012be:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
							break;
 80012c2:	e003      	b.n	80012cc <Display_NMEA+0x21c>
							break;
 80012c4:	bf00      	nop
 80012c6:	e09c      	b.n	8001402 <Display_NMEA+0x352>
							break;
 80012c8:	bf00      	nop
 80012ca:	e09a      	b.n	8001402 <Display_NMEA+0x352>
							break;
 80012cc:	bf00      	nop
					}

					break;
 80012ce:	e098      	b.n	8001402 <Display_NMEA+0x352>
				case 'R':
					if (NMEA_string[search+4] == 'M' && NMEA_string[search+5] == 'C')
 80012d0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80012d2:	3304      	adds	r3, #4
 80012d4:	687a      	ldr	r2, [r7, #4]
 80012d6:	4413      	add	r3, r2
 80012d8:	781b      	ldrb	r3, [r3, #0]
 80012da:	2b4d      	cmp	r3, #77	; 0x4d
 80012dc:	f040 808c 	bne.w	80013f8 <Display_NMEA+0x348>
 80012e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80012e2:	3305      	adds	r3, #5
 80012e4:	687a      	ldr	r2, [r7, #4]
 80012e6:	4413      	add	r3, r2
 80012e8:	781b      	ldrb	r3, [r3, #0]
 80012ea:	2b43      	cmp	r3, #67	; 0x43
 80012ec:	f040 8084 	bne.w	80013f8 <Display_NMEA+0x348>
					{
						SegmentLength = GetSegment_Length(&NMEA_string[search+6]);
 80012f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80012f2:	3306      	adds	r3, #6
 80012f4:	687a      	ldr	r2, [r7, #4]
 80012f6:	4413      	add	r3, r2
 80012f8:	4618      	mov	r0, r3
 80012fa:	f7ff fe7f 	bl	8000ffc <GetSegment_Length>
 80012fe:	4603      	mov	r3, r0
 8001300:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
						strncpy(&NMEA.RMC[4], &NMEA_string[search+6], SegmentLength);
 8001304:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001306:	3306      	adds	r3, #6
 8001308:	687a      	ldr	r2, [r7, #4]
 800130a:	4413      	add	r3, r2
 800130c:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 8001310:	4619      	mov	r1, r3
 8001312:	4864      	ldr	r0, [pc, #400]	; (80014a4 <Display_NMEA+0x3f4>)
 8001314:	f000 fb88 	bl	8001a28 <strncpy>
						if (SegmentLength == 0) SegmentLength = 1;
 8001318:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800131c:	2b00      	cmp	r3, #0
 800131e:	d103      	bne.n	8001328 <Display_NMEA+0x278>
 8001320:	2301      	movs	r3, #1
 8001322:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
						else SegmentLength+=6;
					}
					break;
 8001326:	e067      	b.n	80013f8 <Display_NMEA+0x348>
						else SegmentLength+=6;
 8001328:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800132c:	3306      	adds	r3, #6
 800132e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
					break;
 8001332:	e061      	b.n	80013f8 <Display_NMEA+0x348>
				case 'V':
					if (NMEA_string[search+4] == 'T' && NMEA_string[search+5] == 'G')
 8001334:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001336:	3304      	adds	r3, #4
 8001338:	687a      	ldr	r2, [r7, #4]
 800133a:	4413      	add	r3, r2
 800133c:	781b      	ldrb	r3, [r3, #0]
 800133e:	2b54      	cmp	r3, #84	; 0x54
 8001340:	d15c      	bne.n	80013fc <Display_NMEA+0x34c>
 8001342:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001344:	3305      	adds	r3, #5
 8001346:	687a      	ldr	r2, [r7, #4]
 8001348:	4413      	add	r3, r2
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	2b47      	cmp	r3, #71	; 0x47
 800134e:	d155      	bne.n	80013fc <Display_NMEA+0x34c>
					{
						SegmentLength = GetSegment_Length(&NMEA_string[search+6]);
 8001350:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001352:	3306      	adds	r3, #6
 8001354:	687a      	ldr	r2, [r7, #4]
 8001356:	4413      	add	r3, r2
 8001358:	4618      	mov	r0, r3
 800135a:	f7ff fe4f 	bl	8000ffc <GetSegment_Length>
 800135e:	4603      	mov	r3, r0
 8001360:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
						strncpy(&NMEA.VTG[4], &NMEA_string[search+6], SegmentLength);
 8001364:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001366:	3306      	adds	r3, #6
 8001368:	687a      	ldr	r2, [r7, #4]
 800136a:	4413      	add	r3, r2
 800136c:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 8001370:	4619      	mov	r1, r3
 8001372:	484d      	ldr	r0, [pc, #308]	; (80014a8 <Display_NMEA+0x3f8>)
 8001374:	f000 fb58 	bl	8001a28 <strncpy>
						if (SegmentLength == 0) SegmentLength = 1;
 8001378:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800137c:	2b00      	cmp	r3, #0
 800137e:	d103      	bne.n	8001388 <Display_NMEA+0x2d8>
 8001380:	2301      	movs	r3, #1
 8001382:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
						else SegmentLength+=6;
					}
					break;
 8001386:	e039      	b.n	80013fc <Display_NMEA+0x34c>
						else SegmentLength+=6;
 8001388:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800138c:	3306      	adds	r3, #6
 800138e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
					break;
 8001392:	e033      	b.n	80013fc <Display_NMEA+0x34c>
				case 'Z':
					if (NMEA_string[search+4] == 'D' && NMEA_string[search+5] == 'A')
 8001394:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001396:	3304      	adds	r3, #4
 8001398:	687a      	ldr	r2, [r7, #4]
 800139a:	4413      	add	r3, r2
 800139c:	781b      	ldrb	r3, [r3, #0]
 800139e:	2b44      	cmp	r3, #68	; 0x44
 80013a0:	d12e      	bne.n	8001400 <Display_NMEA+0x350>
 80013a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80013a4:	3305      	adds	r3, #5
 80013a6:	687a      	ldr	r2, [r7, #4]
 80013a8:	4413      	add	r3, r2
 80013aa:	781b      	ldrb	r3, [r3, #0]
 80013ac:	2b41      	cmp	r3, #65	; 0x41
 80013ae:	d127      	bne.n	8001400 <Display_NMEA+0x350>
					{
						SegmentLength = GetSegment_Length(&NMEA_string[search+6]);
 80013b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80013b2:	3306      	adds	r3, #6
 80013b4:	687a      	ldr	r2, [r7, #4]
 80013b6:	4413      	add	r3, r2
 80013b8:	4618      	mov	r0, r3
 80013ba:	f7ff fe1f 	bl	8000ffc <GetSegment_Length>
 80013be:	4603      	mov	r3, r0
 80013c0:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
						strncpy(&NMEA.ZDA[4], &NMEA_string[search+6], SegmentLength);
 80013c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80013c6:	3306      	adds	r3, #6
 80013c8:	687a      	ldr	r2, [r7, #4]
 80013ca:	4413      	add	r3, r2
 80013cc:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 80013d0:	4619      	mov	r1, r3
 80013d2:	4836      	ldr	r0, [pc, #216]	; (80014ac <Display_NMEA+0x3fc>)
 80013d4:	f000 fb28 	bl	8001a28 <strncpy>
						if (SegmentLength == 0) SegmentLength = 1;
 80013d8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80013dc:	2b00      	cmp	r3, #0
 80013de:	d103      	bne.n	80013e8 <Display_NMEA+0x338>
 80013e0:	2301      	movs	r3, #1
 80013e2:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
						else SegmentLength+=6;
					}
					break;
 80013e6:	e00b      	b.n	8001400 <Display_NMEA+0x350>
						else SegmentLength+=6;
 80013e8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80013ec:	3306      	adds	r3, #6
 80013ee:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
					break;
 80013f2:	e005      	b.n	8001400 <Display_NMEA+0x350>
				default:
					break;
 80013f4:	bf00      	nop
 80013f6:	e008      	b.n	800140a <Display_NMEA+0x35a>
					break;
 80013f8:	bf00      	nop
 80013fa:	e006      	b.n	800140a <Display_NMEA+0x35a>
					break;
 80013fc:	bf00      	nop
 80013fe:	e004      	b.n	800140a <Display_NMEA+0x35a>
					break;
 8001400:	bf00      	nop
			}
		}
 8001402:	e002      	b.n	800140a <Display_NMEA+0x35a>
		else SegmentLength = 1;
 8001404:	2301      	movs	r3, #1
 8001406:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	for ( int search=0 ; search<NMEA_stringlength-6 ; search+=SegmentLength )
 800140a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800140e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001410:	4413      	add	r3, r2
 8001412:	62bb      	str	r3, [r7, #40]	; 0x28
 8001414:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001416:	2b71      	cmp	r3, #113	; 0x71
 8001418:	f77f ae57 	ble.w	80010ca <Display_NMEA+0x1a>
	}

	// Empty NMEA string
	for (int i = 0; i<NMEA_stringlength; i++)
 800141c:	2300      	movs	r3, #0
 800141e:	627b      	str	r3, [r7, #36]	; 0x24
 8001420:	e007      	b.n	8001432 <Display_NMEA+0x382>
		NMEA_string[i] = '\0';
 8001422:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001424:	687a      	ldr	r2, [r7, #4]
 8001426:	4413      	add	r3, r2
 8001428:	2200      	movs	r2, #0
 800142a:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i<NMEA_stringlength; i++)
 800142c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800142e:	3301      	adds	r3, #1
 8001430:	627b      	str	r3, [r7, #36]	; 0x24
 8001432:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001434:	2b77      	cmp	r3, #119	; 0x77
 8001436:	ddf4      	ble.n	8001422 <Display_NMEA+0x372>
	// Reenable UART1 interrupts
	NVIC_EnableIRQ(USART1_IRQn);
 8001438:	2025      	movs	r0, #37	; 0x25
 800143a:	f7ff f8a9 	bl	8000590 <NVIC_EnableIRQ>
	if (NMEA.GGA[4] != 0)
 800143e:	4b1c      	ldr	r3, [pc, #112]	; (80014b0 <Display_NMEA+0x400>)
 8001440:	791b      	ldrb	r3, [r3, #4]
 8001442:	2b00      	cmp	r3, #0
 8001444:	d019      	beq.n	800147a <Display_NMEA+0x3ca>
	{
		LCD_DisplayStringLine(0, NMEA.GGA);
 8001446:	491a      	ldr	r1, [pc, #104]	; (80014b0 <Display_NMEA+0x400>)
 8001448:	2000      	movs	r0, #0
 800144a:	f003 f9a5 	bl	8004798 <LCD_DisplayStringLine>
		for (int i = 4; i<NMEA_stringlength; i++)
 800144e:	2304      	movs	r3, #4
 8001450:	623b      	str	r3, [r7, #32]
 8001452:	e00d      	b.n	8001470 <Display_NMEA+0x3c0>
			if (NMEA.GGA[i] != 0) NMEA.GGA[i] = 0;
 8001454:	4a16      	ldr	r2, [pc, #88]	; (80014b0 <Display_NMEA+0x400>)
 8001456:	6a3b      	ldr	r3, [r7, #32]
 8001458:	4413      	add	r3, r2
 800145a:	781b      	ldrb	r3, [r3, #0]
 800145c:	2b00      	cmp	r3, #0
 800145e:	d00b      	beq.n	8001478 <Display_NMEA+0x3c8>
 8001460:	4a13      	ldr	r2, [pc, #76]	; (80014b0 <Display_NMEA+0x400>)
 8001462:	6a3b      	ldr	r3, [r7, #32]
 8001464:	4413      	add	r3, r2
 8001466:	2200      	movs	r2, #0
 8001468:	701a      	strb	r2, [r3, #0]
		for (int i = 4; i<NMEA_stringlength; i++)
 800146a:	6a3b      	ldr	r3, [r7, #32]
 800146c:	3301      	adds	r3, #1
 800146e:	623b      	str	r3, [r7, #32]
 8001470:	6a3b      	ldr	r3, [r7, #32]
 8001472:	2b77      	cmp	r3, #119	; 0x77
 8001474:	ddee      	ble.n	8001454 <Display_NMEA+0x3a4>
 8001476:	e000      	b.n	800147a <Display_NMEA+0x3ca>
			else break;
 8001478:	bf00      	nop
	}
	if (NMEA.GLL[4] != 0)
 800147a:	4b0d      	ldr	r3, [pc, #52]	; (80014b0 <Display_NMEA+0x400>)
 800147c:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 8001480:	2b00      	cmp	r3, #0
 8001482:	d02e      	beq.n	80014e2 <Display_NMEA+0x432>
	{
		LCD_DisplayStringLine(1, NMEA.GLL);
 8001484:	490b      	ldr	r1, [pc, #44]	; (80014b4 <Display_NMEA+0x404>)
 8001486:	2001      	movs	r0, #1
 8001488:	f003 f986 	bl	8004798 <LCD_DisplayStringLine>
		for (int i = 4; i<NMEA_stringlength; i++)
 800148c:	2304      	movs	r3, #4
 800148e:	61fb      	str	r3, [r7, #28]
 8001490:	e022      	b.n	80014d8 <Display_NMEA+0x428>
 8001492:	bf00      	nop
 8001494:	20000520 	.word	0x20000520
 8001498:	20000610 	.word	0x20000610
 800149c:	20000688 	.word	0x20000688
 80014a0:	20000598 	.word	0x20000598
 80014a4:	20000700 	.word	0x20000700
 80014a8:	20000778 	.word	0x20000778
 80014ac:	200007f0 	.word	0x200007f0
 80014b0:	2000051c 	.word	0x2000051c
 80014b4:	20000594 	.word	0x20000594
			if (NMEA.GLL[i] != 0) NMEA.GLL[i] = 0;
 80014b8:	4a62      	ldr	r2, [pc, #392]	; (8001644 <Display_NMEA+0x594>)
 80014ba:	69fb      	ldr	r3, [r7, #28]
 80014bc:	4413      	add	r3, r2
 80014be:	3378      	adds	r3, #120	; 0x78
 80014c0:	781b      	ldrb	r3, [r3, #0]
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d00c      	beq.n	80014e0 <Display_NMEA+0x430>
 80014c6:	4a5f      	ldr	r2, [pc, #380]	; (8001644 <Display_NMEA+0x594>)
 80014c8:	69fb      	ldr	r3, [r7, #28]
 80014ca:	4413      	add	r3, r2
 80014cc:	3378      	adds	r3, #120	; 0x78
 80014ce:	2200      	movs	r2, #0
 80014d0:	701a      	strb	r2, [r3, #0]
		for (int i = 4; i<NMEA_stringlength; i++)
 80014d2:	69fb      	ldr	r3, [r7, #28]
 80014d4:	3301      	adds	r3, #1
 80014d6:	61fb      	str	r3, [r7, #28]
 80014d8:	69fb      	ldr	r3, [r7, #28]
 80014da:	2b77      	cmp	r3, #119	; 0x77
 80014dc:	ddec      	ble.n	80014b8 <Display_NMEA+0x408>
 80014de:	e000      	b.n	80014e2 <Display_NMEA+0x432>
			else break;
 80014e0:	bf00      	nop
	}
	if (NMEA.GSA[4] != 0)
 80014e2:	4b58      	ldr	r3, [pc, #352]	; (8001644 <Display_NMEA+0x594>)
 80014e4:	f893 30f4 	ldrb.w	r3, [r3, #244]	; 0xf4
 80014e8:	2b00      	cmp	r3, #0
 80014ea:	d01b      	beq.n	8001524 <Display_NMEA+0x474>
	{
		LCD_DisplayStringLine(2, NMEA.GSA);
 80014ec:	4956      	ldr	r1, [pc, #344]	; (8001648 <Display_NMEA+0x598>)
 80014ee:	2002      	movs	r0, #2
 80014f0:	f003 f952 	bl	8004798 <LCD_DisplayStringLine>
		for (int i = 4; i<NMEA_stringlength; i++)
 80014f4:	2304      	movs	r3, #4
 80014f6:	61bb      	str	r3, [r7, #24]
 80014f8:	e00f      	b.n	800151a <Display_NMEA+0x46a>
			if (NMEA.GSA[i] != 0) NMEA.GSA[i] = 0;
 80014fa:	4a52      	ldr	r2, [pc, #328]	; (8001644 <Display_NMEA+0x594>)
 80014fc:	69bb      	ldr	r3, [r7, #24]
 80014fe:	4413      	add	r3, r2
 8001500:	33f0      	adds	r3, #240	; 0xf0
 8001502:	781b      	ldrb	r3, [r3, #0]
 8001504:	2b00      	cmp	r3, #0
 8001506:	d00c      	beq.n	8001522 <Display_NMEA+0x472>
 8001508:	4a4e      	ldr	r2, [pc, #312]	; (8001644 <Display_NMEA+0x594>)
 800150a:	69bb      	ldr	r3, [r7, #24]
 800150c:	4413      	add	r3, r2
 800150e:	33f0      	adds	r3, #240	; 0xf0
 8001510:	2200      	movs	r2, #0
 8001512:	701a      	strb	r2, [r3, #0]
		for (int i = 4; i<NMEA_stringlength; i++)
 8001514:	69bb      	ldr	r3, [r7, #24]
 8001516:	3301      	adds	r3, #1
 8001518:	61bb      	str	r3, [r7, #24]
 800151a:	69bb      	ldr	r3, [r7, #24]
 800151c:	2b77      	cmp	r3, #119	; 0x77
 800151e:	ddec      	ble.n	80014fa <Display_NMEA+0x44a>
 8001520:	e000      	b.n	8001524 <Display_NMEA+0x474>
			else break;
 8001522:	bf00      	nop
	}
	if (NMEA.GSV[4] != 0)
 8001524:	4b47      	ldr	r3, [pc, #284]	; (8001644 <Display_NMEA+0x594>)
 8001526:	f893 316c 	ldrb.w	r3, [r3, #364]	; 0x16c
 800152a:	2b00      	cmp	r3, #0
 800152c:	d01d      	beq.n	800156a <Display_NMEA+0x4ba>
	{
		LCD_DisplayStringLine(3, NMEA.GSV);
 800152e:	4947      	ldr	r1, [pc, #284]	; (800164c <Display_NMEA+0x59c>)
 8001530:	2003      	movs	r0, #3
 8001532:	f003 f931 	bl	8004798 <LCD_DisplayStringLine>
		for (int i = 4; i<NMEA_stringlength; i++)
 8001536:	2304      	movs	r3, #4
 8001538:	617b      	str	r3, [r7, #20]
 800153a:	e011      	b.n	8001560 <Display_NMEA+0x4b0>
			if (NMEA.GSV[i] != 0) NMEA.GSV[i] = 0;
 800153c:	4a41      	ldr	r2, [pc, #260]	; (8001644 <Display_NMEA+0x594>)
 800153e:	697b      	ldr	r3, [r7, #20]
 8001540:	4413      	add	r3, r2
 8001542:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 8001546:	781b      	ldrb	r3, [r3, #0]
 8001548:	2b00      	cmp	r3, #0
 800154a:	d00d      	beq.n	8001568 <Display_NMEA+0x4b8>
 800154c:	4a3d      	ldr	r2, [pc, #244]	; (8001644 <Display_NMEA+0x594>)
 800154e:	697b      	ldr	r3, [r7, #20]
 8001550:	4413      	add	r3, r2
 8001552:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 8001556:	2200      	movs	r2, #0
 8001558:	701a      	strb	r2, [r3, #0]
		for (int i = 4; i<NMEA_stringlength; i++)
 800155a:	697b      	ldr	r3, [r7, #20]
 800155c:	3301      	adds	r3, #1
 800155e:	617b      	str	r3, [r7, #20]
 8001560:	697b      	ldr	r3, [r7, #20]
 8001562:	2b77      	cmp	r3, #119	; 0x77
 8001564:	ddea      	ble.n	800153c <Display_NMEA+0x48c>
 8001566:	e000      	b.n	800156a <Display_NMEA+0x4ba>
			else break;
 8001568:	bf00      	nop
	}
	if (NMEA.RMC[4] != 0)
 800156a:	4b36      	ldr	r3, [pc, #216]	; (8001644 <Display_NMEA+0x594>)
 800156c:	f893 31e4 	ldrb.w	r3, [r3, #484]	; 0x1e4
 8001570:	2b00      	cmp	r3, #0
 8001572:	d01d      	beq.n	80015b0 <Display_NMEA+0x500>
	{
		LCD_DisplayStringLine(4, NMEA.RMC);
 8001574:	4936      	ldr	r1, [pc, #216]	; (8001650 <Display_NMEA+0x5a0>)
 8001576:	2004      	movs	r0, #4
 8001578:	f003 f90e 	bl	8004798 <LCD_DisplayStringLine>
		for (int i = 4; i<NMEA_stringlength; i++)
 800157c:	2304      	movs	r3, #4
 800157e:	613b      	str	r3, [r7, #16]
 8001580:	e011      	b.n	80015a6 <Display_NMEA+0x4f6>
			if (NMEA.RMC[i] != 0) NMEA.RMC[i] = 0;
 8001582:	4a30      	ldr	r2, [pc, #192]	; (8001644 <Display_NMEA+0x594>)
 8001584:	693b      	ldr	r3, [r7, #16]
 8001586:	4413      	add	r3, r2
 8001588:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 800158c:	781b      	ldrb	r3, [r3, #0]
 800158e:	2b00      	cmp	r3, #0
 8001590:	d00d      	beq.n	80015ae <Display_NMEA+0x4fe>
 8001592:	4a2c      	ldr	r2, [pc, #176]	; (8001644 <Display_NMEA+0x594>)
 8001594:	693b      	ldr	r3, [r7, #16]
 8001596:	4413      	add	r3, r2
 8001598:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 800159c:	2200      	movs	r2, #0
 800159e:	701a      	strb	r2, [r3, #0]
		for (int i = 4; i<NMEA_stringlength; i++)
 80015a0:	693b      	ldr	r3, [r7, #16]
 80015a2:	3301      	adds	r3, #1
 80015a4:	613b      	str	r3, [r7, #16]
 80015a6:	693b      	ldr	r3, [r7, #16]
 80015a8:	2b77      	cmp	r3, #119	; 0x77
 80015aa:	ddea      	ble.n	8001582 <Display_NMEA+0x4d2>
 80015ac:	e000      	b.n	80015b0 <Display_NMEA+0x500>
			else break;
 80015ae:	bf00      	nop
	}
	if (NMEA.VTG[4] != 0)
 80015b0:	4b24      	ldr	r3, [pc, #144]	; (8001644 <Display_NMEA+0x594>)
 80015b2:	f893 325c 	ldrb.w	r3, [r3, #604]	; 0x25c
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	d01d      	beq.n	80015f6 <Display_NMEA+0x546>
	{
		LCD_DisplayStringLine(5, NMEA.VTG);
 80015ba:	4926      	ldr	r1, [pc, #152]	; (8001654 <Display_NMEA+0x5a4>)
 80015bc:	2005      	movs	r0, #5
 80015be:	f003 f8eb 	bl	8004798 <LCD_DisplayStringLine>
		for (int i = 4; i<NMEA_stringlength; i++)
 80015c2:	2304      	movs	r3, #4
 80015c4:	60fb      	str	r3, [r7, #12]
 80015c6:	e011      	b.n	80015ec <Display_NMEA+0x53c>
			if (NMEA.VTG[i] != 0) NMEA.VTG[i] = 0;
 80015c8:	4a1e      	ldr	r2, [pc, #120]	; (8001644 <Display_NMEA+0x594>)
 80015ca:	68fb      	ldr	r3, [r7, #12]
 80015cc:	4413      	add	r3, r2
 80015ce:	f503 7316 	add.w	r3, r3, #600	; 0x258
 80015d2:	781b      	ldrb	r3, [r3, #0]
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d00d      	beq.n	80015f4 <Display_NMEA+0x544>
 80015d8:	4a1a      	ldr	r2, [pc, #104]	; (8001644 <Display_NMEA+0x594>)
 80015da:	68fb      	ldr	r3, [r7, #12]
 80015dc:	4413      	add	r3, r2
 80015de:	f503 7316 	add.w	r3, r3, #600	; 0x258
 80015e2:	2200      	movs	r2, #0
 80015e4:	701a      	strb	r2, [r3, #0]
		for (int i = 4; i<NMEA_stringlength; i++)
 80015e6:	68fb      	ldr	r3, [r7, #12]
 80015e8:	3301      	adds	r3, #1
 80015ea:	60fb      	str	r3, [r7, #12]
 80015ec:	68fb      	ldr	r3, [r7, #12]
 80015ee:	2b77      	cmp	r3, #119	; 0x77
 80015f0:	ddea      	ble.n	80015c8 <Display_NMEA+0x518>
 80015f2:	e000      	b.n	80015f6 <Display_NMEA+0x546>
			else break;
 80015f4:	bf00      	nop
	}
	if (NMEA.ZDA[4] != 0)
 80015f6:	4b13      	ldr	r3, [pc, #76]	; (8001644 <Display_NMEA+0x594>)
 80015f8:	f893 32d4 	ldrb.w	r3, [r3, #724]	; 0x2d4
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	d01d      	beq.n	800163c <Display_NMEA+0x58c>
	{
		LCD_DisplayStringLine(6, NMEA.ZDA);
 8001600:	4915      	ldr	r1, [pc, #84]	; (8001658 <Display_NMEA+0x5a8>)
 8001602:	2006      	movs	r0, #6
 8001604:	f003 f8c8 	bl	8004798 <LCD_DisplayStringLine>
		for (int i = 4; i<NMEA_stringlength; i++)
 8001608:	2304      	movs	r3, #4
 800160a:	60bb      	str	r3, [r7, #8]
 800160c:	e011      	b.n	8001632 <Display_NMEA+0x582>
			if (NMEA.ZDA[i] != 0) NMEA.ZDA[i] = 0;
 800160e:	4a0d      	ldr	r2, [pc, #52]	; (8001644 <Display_NMEA+0x594>)
 8001610:	68bb      	ldr	r3, [r7, #8]
 8001612:	4413      	add	r3, r2
 8001614:	f503 7334 	add.w	r3, r3, #720	; 0x2d0
 8001618:	781b      	ldrb	r3, [r3, #0]
 800161a:	2b00      	cmp	r3, #0
 800161c:	d00d      	beq.n	800163a <Display_NMEA+0x58a>
 800161e:	4a09      	ldr	r2, [pc, #36]	; (8001644 <Display_NMEA+0x594>)
 8001620:	68bb      	ldr	r3, [r7, #8]
 8001622:	4413      	add	r3, r2
 8001624:	f503 7334 	add.w	r3, r3, #720	; 0x2d0
 8001628:	2200      	movs	r2, #0
 800162a:	701a      	strb	r2, [r3, #0]
		for (int i = 4; i<NMEA_stringlength; i++)
 800162c:	68bb      	ldr	r3, [r7, #8]
 800162e:	3301      	adds	r3, #1
 8001630:	60bb      	str	r3, [r7, #8]
 8001632:	68bb      	ldr	r3, [r7, #8]
 8001634:	2b77      	cmp	r3, #119	; 0x77
 8001636:	ddea      	ble.n	800160e <Display_NMEA+0x55e>
			else break;
	}

}
 8001638:	e000      	b.n	800163c <Display_NMEA+0x58c>
			else break;
 800163a:	bf00      	nop
}
 800163c:	bf00      	nop
 800163e:	3730      	adds	r7, #48	; 0x30
 8001640:	46bd      	mov	sp, r7
 8001642:	bd80      	pop	{r7, pc}
 8001644:	2000051c 	.word	0x2000051c
 8001648:	2000060c 	.word	0x2000060c
 800164c:	20000684 	.word	0x20000684
 8001650:	200006fc 	.word	0x200006fc
 8001654:	20000774 	.word	0x20000774
 8001658:	200007ec 	.word	0x200007ec

0800165c <main>:

/**
 * @brief		main
 * @return		0 if success
 */
int main(void) {
 800165c:	b580      	push	{r7, lr}
 800165e:	b084      	sub	sp, #16
 8001660:	af00      	add	r7, sp, #0

	/* LCD Init */
 	LCD_Init(); 						// CARME LCD initialisieren
 8001662:	f7fe ffc9 	bl	80005f8 <LCD_Init>
	LCD_SetTextColor(GUI_COLOR_WHITE);	// Schfiftfarbe setzen
 8001666:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800166a:	f003 f817 	bl	800469c <LCD_SetTextColor>
	LCD_SetFont(&font_5x7);
 800166e:	482b      	ldr	r0, [pc, #172]	; (800171c <main+0xc0>)
 8001670:	f003 f824 	bl	80046bc <LCD_SetFont>

	/* USART1 Init */
	Init_USART1();
 8001674:	f7fe ffd8 	bl	8000628 <Init_USART1>

	/* I2C Init */
	Init_I2C2();
 8001678:	f7ff f898 	bl	80007ac <Init_I2C2>

	// Init Accelerometer
	AcceleroInit();
 800167c:	f7ff f8ec 	bl	8000858 <AcceleroInit>

	// Init Gyro
	GyroInit();
 8001680:	f7ff fa6a 	bl	8000b58 <GyroInit>

	// Init NMEA struct
	strncpy(NMEA.GGA, "GGA:", 4);
 8001684:	4b26      	ldr	r3, [pc, #152]	; (8001720 <main+0xc4>)
 8001686:	4a27      	ldr	r2, [pc, #156]	; (8001724 <main+0xc8>)
 8001688:	601a      	str	r2, [r3, #0]
	strncpy(NMEA.GSA, "GSA:", 4);
 800168a:	4b27      	ldr	r3, [pc, #156]	; (8001728 <main+0xcc>)
 800168c:	4a27      	ldr	r2, [pc, #156]	; (800172c <main+0xd0>)
 800168e:	601a      	str	r2, [r3, #0]
	strncpy(NMEA.GLL, "GLL:", 4);
 8001690:	4b27      	ldr	r3, [pc, #156]	; (8001730 <main+0xd4>)
 8001692:	4a28      	ldr	r2, [pc, #160]	; (8001734 <main+0xd8>)
 8001694:	601a      	str	r2, [r3, #0]
	strncpy(NMEA.GSV, "GSV:", 4);
 8001696:	4b28      	ldr	r3, [pc, #160]	; (8001738 <main+0xdc>)
 8001698:	4a28      	ldr	r2, [pc, #160]	; (800173c <main+0xe0>)
 800169a:	601a      	str	r2, [r3, #0]
	strncpy(NMEA.RMC, "RMC:", 4);
 800169c:	4b28      	ldr	r3, [pc, #160]	; (8001740 <main+0xe4>)
 800169e:	4a29      	ldr	r2, [pc, #164]	; (8001744 <main+0xe8>)
 80016a0:	601a      	str	r2, [r3, #0]
	strncpy(NMEA.VTG, "VTG:", 4);
 80016a2:	4b29      	ldr	r3, [pc, #164]	; (8001748 <main+0xec>)
 80016a4:	4a29      	ldr	r2, [pc, #164]	; (800174c <main+0xf0>)
 80016a6:	601a      	str	r2, [r3, #0]
	strncpy(NMEA.ZDA, "ZDA:", 4);
 80016a8:	4b29      	ldr	r3, [pc, #164]	; (8001750 <main+0xf4>)
 80016aa:	4a2a      	ldr	r2, [pc, #168]	; (8001754 <main+0xf8>)
 80016ac:	601a      	str	r2, [r3, #0]

	while (1)
	{
		if (NMEAStringReadyFlag)
 80016ae:	4b2a      	ldr	r3, [pc, #168]	; (8001758 <main+0xfc>)
 80016b0:	781b      	ldrb	r3, [r3, #0]
 80016b2:	2b00      	cmp	r3, #0
 80016b4:	d005      	beq.n	80016c2 <main+0x66>
		{
			/* Display received NMEA String*/
			Display_NMEA(NMEA_string);
 80016b6:	4829      	ldr	r0, [pc, #164]	; (800175c <main+0x100>)
 80016b8:	f7ff fcfa 	bl	80010b0 <Display_NMEA>
			//ClearFlag
			NMEAStringReadyFlag = 0;
 80016bc:	4b26      	ldr	r3, [pc, #152]	; (8001758 <main+0xfc>)
 80016be:	2200      	movs	r2, #0
 80016c0:	701a      	strb	r2, [r3, #0]
		}

		/* receive Accelero Data */
		int16_t ax = 0;
 80016c2:	2300      	movs	r3, #0
 80016c4:	81fb      	strh	r3, [r7, #14]
		int16_t ay = 0;
 80016c6:	2300      	movs	r3, #0
 80016c8:	81bb      	strh	r3, [r7, #12]
		int16_t az = 0;
 80016ca:	2300      	movs	r3, #0
 80016cc:	817b      	strh	r3, [r7, #10]
		ReadAccelero(&ax,&ay,&az);
 80016ce:	f107 020a 	add.w	r2, r7, #10
 80016d2:	f107 010c 	add.w	r1, r7, #12
 80016d6:	f107 030e 	add.w	r3, r7, #14
 80016da:	4618      	mov	r0, r3
 80016dc:	f7ff f8f8 	bl	80008d0 <ReadAccelero>
		Display_Accelero(&ax,&ay,&az);
 80016e0:	f107 020a 	add.w	r2, r7, #10
 80016e4:	f107 010c 	add.w	r1, r7, #12
 80016e8:	f107 030e 	add.w	r3, r7, #14
 80016ec:	4618      	mov	r0, r3
 80016ee:	f7ff f927 	bl	8000940 <Display_Accelero>

		/* receive Gyro Data */
		int16_t dx = 0;
 80016f2:	2300      	movs	r3, #0
 80016f4:	813b      	strh	r3, [r7, #8]
		int16_t dy = 0;
 80016f6:	2300      	movs	r3, #0
 80016f8:	80fb      	strh	r3, [r7, #6]
		int16_t dz = 0;
 80016fa:	2300      	movs	r3, #0
 80016fc:	80bb      	strh	r3, [r7, #4]
		ReadGyro(&dx,&dy,&dz);
 80016fe:	1d3a      	adds	r2, r7, #4
 8001700:	1db9      	adds	r1, r7, #6
 8001702:	f107 0308 	add.w	r3, r7, #8
 8001706:	4618      	mov	r0, r3
 8001708:	f7ff fb00 	bl	8000d0c <ReadGyro>
		Display_Gyro(&dx,&dy,&dz);
 800170c:	1d3a      	adds	r2, r7, #4
 800170e:	1db9      	adds	r1, r7, #6
 8001710:	f107 0308 	add.w	r3, r7, #8
 8001714:	4618      	mov	r0, r3
 8001716:	f7ff fb65 	bl	8000de4 <Display_Gyro>
	{
 800171a:	e7c8      	b.n	80016ae <main+0x52>
 800171c:	20000308 	.word	0x20000308
 8001720:	2000051c 	.word	0x2000051c
 8001724:	3a414747 	.word	0x3a414747
 8001728:	2000060c 	.word	0x2000060c
 800172c:	3a415347 	.word	0x3a415347
 8001730:	20000594 	.word	0x20000594
 8001734:	3a4c4c47 	.word	0x3a4c4c47
 8001738:	20000684 	.word	0x20000684
 800173c:	3a565347 	.word	0x3a565347
 8001740:	200006fc 	.word	0x200006fc
 8001744:	3a434d52 	.word	0x3a434d52
 8001748:	20000774 	.word	0x20000774
 800174c:	3a475456 	.word	0x3a475456
 8001750:	200007ec 	.word	0x200007ec
 8001754:	3a41445a 	.word	0x3a41445a
 8001758:	20000864 	.word	0x20000864
 800175c:	200008c0 	.word	0x200008c0

08001760 <Reset_Handler>:
	.weak	Reset_Handler
	.type	Reset_Handler, %function

Reset_Handler:
	/* Copy the data segment initializers from flash to SRAM */
	MOVS	r1, #0
 8001760:	2100      	movs	r1, #0
	B		LoopCopyDataInit
 8001762:	e003      	b.n	800176c <LoopCopyDataInit>

08001764 <CopyDataInit>:

CopyDataInit:
	LDR		r3, =_sidata
 8001764:	4b0c      	ldr	r3, [pc, #48]	; (8001798 <ProgramFinish+0x2>)
	LDR		r3, [r3, r1]
 8001766:	585b      	ldr	r3, [r3, r1]
	STR		r3, [r0, r1]
 8001768:	5043      	str	r3, [r0, r1]
	ADDS	r1, r1, #4
 800176a:	3104      	adds	r1, #4

0800176c <LoopCopyDataInit>:

LoopCopyDataInit:
	LDR		r0, =_sdata
 800176c:	480b      	ldr	r0, [pc, #44]	; (800179c <ProgramFinish+0x6>)
	LDR		r3, =_edata
 800176e:	4b0c      	ldr	r3, [pc, #48]	; (80017a0 <ProgramFinish+0xa>)
	ADDS	r2, r0, r1
 8001770:	1842      	adds	r2, r0, r1
	CMP		r2, r3
 8001772:	429a      	cmp	r2, r3
	BCC		CopyDataInit
 8001774:	d3f6      	bcc.n	8001764 <CopyDataInit>
	LDR		r2, =_sbss
 8001776:	4a0b      	ldr	r2, [pc, #44]	; (80017a4 <ProgramFinish+0xe>)
	B		LoopFillZerobss
 8001778:	e002      	b.n	8001780 <LoopFillZerobss>

0800177a <FillZerobss>:

/* Zero fill the bss segment. */
FillZerobss:
	MOVS	r3, #0
 800177a:	2300      	movs	r3, #0
	STR		r3, [r2], #4
 800177c:	f842 3b04 	str.w	r3, [r2], #4

08001780 <LoopFillZerobss>:

LoopFillZerobss:
	LDR		r3, =_ebss
 8001780:	4b09      	ldr	r3, [pc, #36]	; (80017a8 <ProgramFinish+0x12>)
	CMP		r2, r3
 8001782:	429a      	cmp	r2, r3
	BCC		FillZerobss
 8001784:	d3f9      	bcc.n	800177a <FillZerobss>

	BL		SystemInit			/* Call the clock system initialization		*/
 8001786:	f001 fc99 	bl	80030bc <SystemInit>
	BL		CARME_Init			/* Call the CARME-M4 board initialization	*/
 800178a:	f000 fdef 	bl	800236c <CARME_Init>
	BL		__libc_init_array	/* Call static constructors					*/
 800178e:	f000 f8f3 	bl	8001978 <__libc_init_array>
	BL		main				/* Call the application's entry point		*/
 8001792:	f7ff ff63 	bl	800165c <main>

08001796 <ProgramFinish>:
ProgramFinish:
	B		ProgramFinish		/* while true do nothing					*/
 8001796:	e7fe      	b.n	8001796 <ProgramFinish>
	LDR		r3, =_sidata
 8001798:	08004b20 	.word	0x08004b20
	LDR		r0, =_sdata
 800179c:	20000000 	.word	0x20000000
	LDR		r3, =_edata
 80017a0:	200004fc 	.word	0x200004fc
	LDR		r2, =_sbss
 80017a4:	200004fc 	.word	0x200004fc
	LDR		r3, =_ebss
 80017a8:	20000944 	.word	0x20000944

080017ac <dowait>:
 *				infinite loop, preserving the system state for examination
 *				by a debugger.
 */
.section	.text.Default_Handler, "ax", %progbits
dowait:
	LDR		r0, =0xA037A0
 80017ac:	4819      	ldr	r0, [pc, #100]	; (8001814 <Infinite_Loop+0x16>)

080017ae <dowaitloop>:
dowaitloop:
	SUBS	r0, #1
 80017ae:	3801      	subs	r0, #1
	BNE		dowaitloop
 80017b0:	d1fd      	bne.n	80017ae <dowaitloop>
	BX		lr
 80017b2:	4770      	bx	lr

080017b4 <ADC_IRQHandler>:

Default_Handler:
	LDR		r1, =0x40023800		// RCC_BASE
 80017b4:	4918      	ldr	r1, [pc, #96]	; (8001818 <Infinite_Loop+0x1a>)
	LDR		r3, [r1, #0x30]		// RCC->AHB1ENR
 80017b6:	6b0b      	ldr	r3, [r1, #48]	; 0x30
	LDR		r2, =0x100			// RCC_AHB1Periph_GPIOI
 80017b8:	f44f 7280 	mov.w	r2, #256	; 0x100
	ORR		r3, r3, r2			// RCC->AHB1ENR |= RCC_AHB1Periph_GPIOI
 80017bc:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x30]
 80017c0:	630b      	str	r3, [r1, #48]	; 0x30
	LDR		r1, =0x40022000		// GPIOI_BASE
 80017c2:	4916      	ldr	r1, [pc, #88]	; (800181c <Infinite_Loop+0x1e>)
	/* GPIO port mode register */
	LDR		r3, [r1, #0x00]		// GPIOI->MODER
 80017c4:	680b      	ldr	r3, [r1, #0]
	LDR		r2, =0x0000C000
 80017c6:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 80017ca:	ea23 0302 	bic.w	r3, r3, r2
	LDR		r2, =0x00004000
 80017ce:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	ORR		r3, r3, r2
 80017d2:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x00]
 80017d6:	600b      	str	r3, [r1, #0]
	/* GPIO port output type register */
	LDR		r3, [r1, #0x04]		// GPIOI->OTYPER
 80017d8:	684b      	ldr	r3, [r1, #4]
	LDR		r2, =0x00000080
 80017da:	2280      	movs	r2, #128	; 0x80
	BIC		r3, r3, r2
 80017dc:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x04]
 80017e0:	604b      	str	r3, [r1, #4]
	/* GPIO port output speed register */
	LDR		r3, [r1, #0x08]		// GPIOI->OSPEEDR
 80017e2:	688b      	ldr	r3, [r1, #8]
	LDR		r2, =0x0000C000
 80017e4:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 80017e8:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x08]
 80017ec:	608b      	str	r3, [r1, #8]
	/* GPIO port pull-up/pull-down register */
	LDR		r3, [r1, #0x0C]		// GPIOI->PUPDR
 80017ee:	68cb      	ldr	r3, [r1, #12]
	LDR		r2, =0x0000C000
 80017f0:	f44f 4240 	mov.w	r2, #49152	; 0xc000
	BIC		r3, r3, r2
 80017f4:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x0C]
 80017f8:	60cb      	str	r3, [r1, #12]
	/* GPIO port output data register */
	LDR		r3, [r1, #0x14]		// GPIOI->ODR
 80017fa:	694b      	ldr	r3, [r1, #20]
	LDR		r2, =0x00000080
 80017fc:	2280      	movs	r2, #128	; 0x80

080017fe <Infinite_Loop>:
Infinite_Loop:
	ORR		r3, r3, r2
 80017fe:	ea43 0302 	orr.w	r3, r3, r2
	STR		r3, [r1, #0x14]		// Set LED
 8001802:	614b      	str	r3, [r1, #20]
	BL		dowait
 8001804:	f7ff ffd2 	bl	80017ac <dowait>
	BIC		r3, r3, r2
 8001808:	ea23 0302 	bic.w	r3, r3, r2
	STR		r3, [r1, #0x14]		// Reset LED
 800180c:	614b      	str	r3, [r1, #20]
	BL		dowait
 800180e:	f7ff ffcd 	bl	80017ac <dowait>
	B		Infinite_Loop
 8001812:	e7f4      	b.n	80017fe <Infinite_Loop>
	LDR		r0, =0xA037A0
 8001814:	00a037a0 	.word	0x00a037a0
	LDR		r1, =0x40023800		// RCC_BASE
 8001818:	40023800 	.word	0x40023800
	LDR		r1, =0x40022000		// GPIOI_BASE
 800181c:	40022000 	.word	0x40022000

08001820 <NMI_Handler>:
 * @brief		This function handles NMI exception.
 *
 * @return		None
 *****************************************************************************
 */
void NMI_Handler(void) {
 8001820:	b480      	push	{r7}
 8001822:	af00      	add	r7, sp, #0
}
 8001824:	bf00      	nop
 8001826:	46bd      	mov	sp, r7
 8001828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800182c:	4770      	bx	lr

0800182e <HardFault_Handler>:
 * @brief		This function handles Hard Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void HardFault_Handler(void) {
 800182e:	b580      	push	{r7, lr}
 8001830:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Hard Fault exception occurs */
	Default_Handler();
 8001832:	f7ff ffbf 	bl	80017b4 <ADC_IRQHandler>
}
 8001836:	bf00      	nop
 8001838:	bd80      	pop	{r7, pc}

0800183a <MemManage_Handler>:
 * @brief		This function handles Memory Manage exception.
 *
 * @return		None
 *****************************************************************************
 */
void MemManage_Handler(void) {
 800183a:	b480      	push	{r7}
 800183c:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Memory Manage exception occurs */
	while (1) {
 800183e:	e7fe      	b.n	800183e <MemManage_Handler+0x4>

08001840 <BusFault_Handler>:
 * @brief		This function handles Bus Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void BusFault_Handler(void) {
 8001840:	b580      	push	{r7, lr}
 8001842:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Bus Fault exception occurs */
	Default_Handler();
 8001844:	f7ff ffb6 	bl	80017b4 <ADC_IRQHandler>
}
 8001848:	bf00      	nop
 800184a:	bd80      	pop	{r7, pc}

0800184c <UsageFault_Handler>:
 * @brief		This function handles Usage Fault exception.
 *
 * @return		None
 *****************************************************************************
 */
void UsageFault_Handler(void) {
 800184c:	b580      	push	{r7, lr}
 800184e:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Usage Fault exception occurs */
	Default_Handler();
 8001850:	f7ff ffb0 	bl	80017b4 <ADC_IRQHandler>
}
 8001854:	bf00      	nop
 8001856:	bd80      	pop	{r7, pc}

08001858 <SVC_Handler>:
 * @brief		This function handles SVCall exception.
 *
 * @return		None
 *****************************************************************************
 */
void SVC_Handler(void) {
 8001858:	b480      	push	{r7}
 800185a:	af00      	add	r7, sp, #0
}
 800185c:	bf00      	nop
 800185e:	46bd      	mov	sp, r7
 8001860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001864:	4770      	bx	lr

08001866 <DebugMon_Handler>:
 * @brief		This function handles Debug Monitor exception.
 *
 * @return		None
 *****************************************************************************
 */
void DebugMon_Handler(void) {
 8001866:	b480      	push	{r7}
 8001868:	af00      	add	r7, sp, #0
}
 800186a:	bf00      	nop
 800186c:	46bd      	mov	sp, r7
 800186e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001872:	4770      	bx	lr

08001874 <PendSV_Handler>:
 * @brief		This function handles PendSVC exception.
 *
 * @return		None
 *****************************************************************************
 */
void PendSV_Handler(void) {
 8001874:	b480      	push	{r7}
 8001876:	af00      	add	r7, sp, #0
}
 8001878:	bf00      	nop
 800187a:	46bd      	mov	sp, r7
 800187c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001880:	4770      	bx	lr

08001882 <SysTick_Handler>:
 * @brief		This function handles SysTick Handler.
 *
 * @return		None
 *****************************************************************************
 */
void SysTick_Handler(void) {
 8001882:	b580      	push	{r7, lr}
 8001884:	af00      	add	r7, sp, #0
	TimingDelay_Decrement();
 8001886:	f7fe febd 	bl	8000604 <TimingDelay_Decrement>
}
 800188a:	bf00      	nop
 800188c:	bd80      	pop	{r7, pc}

0800188e <EXTI0_IRQHandler>:
 * @brief		This function handles the EXTI Lines 9:5.
 *
 * @return		None
 *****************************************************************************
 */
void EXTI0_IRQHandler(void) {
 800188e:	b580      	push	{r7, lr}
 8001890:	af00      	add	r7, sp, #0

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON3_PIN))
 8001892:	2001      	movs	r0, #1
 8001894:	f001 fd1e 	bl	80032d4 <EXTI_GetITStatus>
 8001898:	4603      	mov	r3, r0
 800189a:	2b00      	cmp	r3, #0
 800189c:	d002      	beq.n	80018a4 <EXTI0_IRQHandler+0x16>
			!= RESET) {
		/* CARME IO1 Button3 Interrupt Handler */
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON3_PIN));
 800189e:	2001      	movs	r0, #1
 80018a0:	f001 fd32 	bl	8003308 <EXTI_ClearITPendingBit>
	}
}
 80018a4:	bf00      	nop
 80018a6:	bd80      	pop	{r7, pc}

080018a8 <EXTI9_5_IRQHandler>:
 * @brief		This function handles the EXTI Lines 9:5.
 *
 * @return		None
 *****************************************************************************
 */
void EXTI9_5_IRQHandler(void) {
 80018a8:	b580      	push	{r7, lr}
 80018aa:	af00      	add	r7, sp, #0

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON0_PIN))
 80018ac:	2080      	movs	r0, #128	; 0x80
 80018ae:	f001 fd11 	bl	80032d4 <EXTI_GetITStatus>
 80018b2:	4603      	mov	r3, r0
 80018b4:	2b00      	cmp	r3, #0
 80018b6:	d002      	beq.n	80018be <EXTI9_5_IRQHandler+0x16>
			!= RESET) {
		/* CARME IO1 Button0 Interrupt Handler */
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON0_PIN));
 80018b8:	2080      	movs	r0, #128	; 0x80
 80018ba:	f001 fd25 	bl	8003308 <EXTI_ClearITPendingBit>
	}

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_CAN_nCAN_INT_PIN))
 80018be:	f44f 7080 	mov.w	r0, #256	; 0x100
 80018c2:	f001 fd07 	bl	80032d4 <EXTI_GetITStatus>
 80018c6:	4603      	mov	r3, r0
 80018c8:	2b00      	cmp	r3, #0
 80018ca:	d005      	beq.n	80018d8 <EXTI9_5_IRQHandler+0x30>
			!= RESET) {
		CARME_CAN_Interrupt_Handler();
 80018cc:	f000 fcd2 	bl	8002274 <CARME_CAN_Interrupt_Handler>
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_CAN_nCAN_INT_PIN));
 80018d0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80018d4:	f001 fd18 	bl	8003308 <EXTI_ClearITPendingBit>
	}
}
 80018d8:	bf00      	nop
 80018da:	bd80      	pop	{r7, pc}

080018dc <EXTI15_10_IRQHandler>:
 * @brief		This function handles the EXTI Lines 15:10.
 *
 * @return		None
 *****************************************************************************
 */
void EXTI15_10_IRQHandler(void) {
 80018dc:	b580      	push	{r7, lr}
 80018de:	af00      	add	r7, sp, #0

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON1_PIN))
 80018e0:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80018e4:	f001 fcf6 	bl	80032d4 <EXTI_GetITStatus>
 80018e8:	4603      	mov	r3, r0
 80018ea:	2b00      	cmp	r3, #0
 80018ec:	d003      	beq.n	80018f6 <EXTI15_10_IRQHandler+0x1a>
			!= RESET) {
		/* CARME IO1 Button1 Interrupt Handler */
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON1_PIN));
 80018ee:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80018f2:	f001 fd09 	bl	8003308 <EXTI_ClearITPendingBit>
	}

	if (EXTI_GetITStatus(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON2_PIN))
 80018f6:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80018fa:	f001 fceb 	bl	80032d4 <EXTI_GetITStatus>
 80018fe:	4603      	mov	r3, r0
 8001900:	2b00      	cmp	r3, #0
 8001902:	d003      	beq.n	800190c <EXTI15_10_IRQHandler+0x30>
			!= RESET) {
		/* CARME IO1 Button2 Interrupt Handler */
		EXTI_ClearITPendingBit(CARME_GPIO_TO_EXTILINE(CARME_IO1_BUTTON2_PIN));
 8001904:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8001908:	f001 fcfe 	bl	8003308 <EXTI_ClearITPendingBit>
	}
}
 800190c:	bf00      	nop
 800190e:	bd80      	pop	{r7, pc}

08001910 <_sbrk>:
	}

	return len;
}

caddr_t _sbrk(int32_t incr) {
 8001910:	b480      	push	{r7}
 8001912:	b085      	sub	sp, #20
 8001914:	af00      	add	r7, sp, #0
 8001916:	6078      	str	r0, [r7, #4]

	extern uint32_t _Min_Heap_Size; /* _Min_Heap_Size symbol defined in the linker script. */
	extern uint8_t end asm("end");
	const uint8_t *max_heap = (uint8_t*) ((uint32_t) &end
 8001918:	4a13      	ldr	r2, [pc, #76]	; (8001968 <_sbrk+0x58>)
			+ (uint32_t) &_Min_Heap_Size);
 800191a:	4b14      	ldr	r3, [pc, #80]	; (800196c <_sbrk+0x5c>)
 800191c:	4413      	add	r3, r2
	const uint8_t *max_heap = (uint8_t*) ((uint32_t) &end
 800191e:	60fb      	str	r3, [r7, #12]
	static uint8_t *heap_end;
	uint8_t *prev_heap_end;

	if (heap_end == 0) {
 8001920:	4b13      	ldr	r3, [pc, #76]	; (8001970 <_sbrk+0x60>)
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	2b00      	cmp	r3, #0
 8001926:	d102      	bne.n	800192e <_sbrk+0x1e>
		heap_end = &end;
 8001928:	4b11      	ldr	r3, [pc, #68]	; (8001970 <_sbrk+0x60>)
 800192a:	4a0f      	ldr	r2, [pc, #60]	; (8001968 <_sbrk+0x58>)
 800192c:	601a      	str	r2, [r3, #0]
	}

	prev_heap_end = heap_end;
 800192e:	4b10      	ldr	r3, [pc, #64]	; (8001970 <_sbrk+0x60>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	60bb      	str	r3, [r7, #8]
	if ((heap_end + incr) > max_heap) {
 8001934:	4b0e      	ldr	r3, [pc, #56]	; (8001970 <_sbrk+0x60>)
 8001936:	681a      	ldr	r2, [r3, #0]
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	441a      	add	r2, r3
 800193c:	68fb      	ldr	r3, [r7, #12]
 800193e:	429a      	cmp	r2, r3
 8001940:	d905      	bls.n	800194e <_sbrk+0x3e>
/*
		write(1, "Heap and stack collision\n", 25);
		abort();
*/
		errno = ENOMEM;
 8001942:	4b0c      	ldr	r3, [pc, #48]	; (8001974 <_sbrk+0x64>)
 8001944:	220c      	movs	r2, #12
 8001946:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8001948:	f04f 33ff 	mov.w	r3, #4294967295
 800194c:	e006      	b.n	800195c <_sbrk+0x4c>
	}

	heap_end += incr;
 800194e:	4b08      	ldr	r3, [pc, #32]	; (8001970 <_sbrk+0x60>)
 8001950:	681a      	ldr	r2, [r3, #0]
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	4413      	add	r3, r2
 8001956:	4a06      	ldr	r2, [pc, #24]	; (8001970 <_sbrk+0x60>)
 8001958:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800195a:	68bb      	ldr	r3, [r7, #8]
}
 800195c:	4618      	mov	r0, r3
 800195e:	3714      	adds	r7, #20
 8001960:	46bd      	mov	sp, r7
 8001962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001966:	4770      	bx	lr
 8001968:	20000944 	.word	0x20000944
 800196c:	00001000 	.word	0x00001000
 8001970:	20000868 	.word	0x20000868
 8001974:	20000940 	.word	0x20000940

08001978 <__libc_init_array>:
 8001978:	b570      	push	{r4, r5, r6, lr}
 800197a:	4e0d      	ldr	r6, [pc, #52]	; (80019b0 <__libc_init_array+0x38>)
 800197c:	4c0d      	ldr	r4, [pc, #52]	; (80019b4 <__libc_init_array+0x3c>)
 800197e:	1ba4      	subs	r4, r4, r6
 8001980:	10a4      	asrs	r4, r4, #2
 8001982:	2500      	movs	r5, #0
 8001984:	42a5      	cmp	r5, r4
 8001986:	d109      	bne.n	800199c <__libc_init_array+0x24>
 8001988:	4e0b      	ldr	r6, [pc, #44]	; (80019b8 <__libc_init_array+0x40>)
 800198a:	4c0c      	ldr	r4, [pc, #48]	; (80019bc <__libc_init_array+0x44>)
 800198c:	f003 f8b4 	bl	8004af8 <_init>
 8001990:	1ba4      	subs	r4, r4, r6
 8001992:	10a4      	asrs	r4, r4, #2
 8001994:	2500      	movs	r5, #0
 8001996:	42a5      	cmp	r5, r4
 8001998:	d105      	bne.n	80019a6 <__libc_init_array+0x2e>
 800199a:	bd70      	pop	{r4, r5, r6, pc}
 800199c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019a0:	4798      	blx	r3
 80019a2:	3501      	adds	r5, #1
 80019a4:	e7ee      	b.n	8001984 <__libc_init_array+0xc>
 80019a6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80019aa:	4798      	blx	r3
 80019ac:	3501      	adds	r5, #1
 80019ae:	e7f2      	b.n	8001996 <__libc_init_array+0x1e>
 80019b0:	08004b18 	.word	0x08004b18
 80019b4:	08004b18 	.word	0x08004b18
 80019b8:	08004b18 	.word	0x08004b18
 80019bc:	08004b1c 	.word	0x08004b1c

080019c0 <sniprintf>:
 80019c0:	b40c      	push	{r2, r3}
 80019c2:	b530      	push	{r4, r5, lr}
 80019c4:	4b17      	ldr	r3, [pc, #92]	; (8001a24 <sniprintf+0x64>)
 80019c6:	1e0c      	subs	r4, r1, #0
 80019c8:	b09d      	sub	sp, #116	; 0x74
 80019ca:	681d      	ldr	r5, [r3, #0]
 80019cc:	da08      	bge.n	80019e0 <sniprintf+0x20>
 80019ce:	238b      	movs	r3, #139	; 0x8b
 80019d0:	602b      	str	r3, [r5, #0]
 80019d2:	f04f 30ff 	mov.w	r0, #4294967295
 80019d6:	b01d      	add	sp, #116	; 0x74
 80019d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80019dc:	b002      	add	sp, #8
 80019de:	4770      	bx	lr
 80019e0:	f44f 7302 	mov.w	r3, #520	; 0x208
 80019e4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80019e8:	bf14      	ite	ne
 80019ea:	f104 33ff 	addne.w	r3, r4, #4294967295
 80019ee:	4623      	moveq	r3, r4
 80019f0:	9304      	str	r3, [sp, #16]
 80019f2:	9307      	str	r3, [sp, #28]
 80019f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80019f8:	9002      	str	r0, [sp, #8]
 80019fa:	9006      	str	r0, [sp, #24]
 80019fc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8001a00:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8001a02:	ab21      	add	r3, sp, #132	; 0x84
 8001a04:	a902      	add	r1, sp, #8
 8001a06:	4628      	mov	r0, r5
 8001a08:	9301      	str	r3, [sp, #4]
 8001a0a:	f000 f92b 	bl	8001c64 <_svfiprintf_r>
 8001a0e:	1c43      	adds	r3, r0, #1
 8001a10:	bfbc      	itt	lt
 8001a12:	238b      	movlt	r3, #139	; 0x8b
 8001a14:	602b      	strlt	r3, [r5, #0]
 8001a16:	2c00      	cmp	r4, #0
 8001a18:	d0dd      	beq.n	80019d6 <sniprintf+0x16>
 8001a1a:	9b02      	ldr	r3, [sp, #8]
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	701a      	strb	r2, [r3, #0]
 8001a20:	e7d9      	b.n	80019d6 <sniprintf+0x16>
 8001a22:	bf00      	nop
 8001a24:	20000000 	.word	0x20000000

08001a28 <strncpy>:
 8001a28:	b570      	push	{r4, r5, r6, lr}
 8001a2a:	4604      	mov	r4, r0
 8001a2c:	b902      	cbnz	r2, 8001a30 <strncpy+0x8>
 8001a2e:	bd70      	pop	{r4, r5, r6, pc}
 8001a30:	4623      	mov	r3, r4
 8001a32:	f811 5b01 	ldrb.w	r5, [r1], #1
 8001a36:	f803 5b01 	strb.w	r5, [r3], #1
 8001a3a:	1e56      	subs	r6, r2, #1
 8001a3c:	b91d      	cbnz	r5, 8001a46 <strncpy+0x1e>
 8001a3e:	4414      	add	r4, r2
 8001a40:	42a3      	cmp	r3, r4
 8001a42:	d103      	bne.n	8001a4c <strncpy+0x24>
 8001a44:	bd70      	pop	{r4, r5, r6, pc}
 8001a46:	461c      	mov	r4, r3
 8001a48:	4632      	mov	r2, r6
 8001a4a:	e7ef      	b.n	8001a2c <strncpy+0x4>
 8001a4c:	f803 5b01 	strb.w	r5, [r3], #1
 8001a50:	e7f6      	b.n	8001a40 <strncpy+0x18>
	...

08001a54 <_free_r>:
 8001a54:	b538      	push	{r3, r4, r5, lr}
 8001a56:	4605      	mov	r5, r0
 8001a58:	2900      	cmp	r1, #0
 8001a5a:	d045      	beq.n	8001ae8 <_free_r+0x94>
 8001a5c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001a60:	1f0c      	subs	r4, r1, #4
 8001a62:	2b00      	cmp	r3, #0
 8001a64:	bfb8      	it	lt
 8001a66:	18e4      	addlt	r4, r4, r3
 8001a68:	f000 fbbb 	bl	80021e2 <__malloc_lock>
 8001a6c:	4a1f      	ldr	r2, [pc, #124]	; (8001aec <_free_r+0x98>)
 8001a6e:	6813      	ldr	r3, [r2, #0]
 8001a70:	4610      	mov	r0, r2
 8001a72:	b933      	cbnz	r3, 8001a82 <_free_r+0x2e>
 8001a74:	6063      	str	r3, [r4, #4]
 8001a76:	6014      	str	r4, [r2, #0]
 8001a78:	4628      	mov	r0, r5
 8001a7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001a7e:	f000 bbb1 	b.w	80021e4 <__malloc_unlock>
 8001a82:	42a3      	cmp	r3, r4
 8001a84:	d90c      	bls.n	8001aa0 <_free_r+0x4c>
 8001a86:	6821      	ldr	r1, [r4, #0]
 8001a88:	1862      	adds	r2, r4, r1
 8001a8a:	4293      	cmp	r3, r2
 8001a8c:	bf04      	itt	eq
 8001a8e:	681a      	ldreq	r2, [r3, #0]
 8001a90:	685b      	ldreq	r3, [r3, #4]
 8001a92:	6063      	str	r3, [r4, #4]
 8001a94:	bf04      	itt	eq
 8001a96:	1852      	addeq	r2, r2, r1
 8001a98:	6022      	streq	r2, [r4, #0]
 8001a9a:	6004      	str	r4, [r0, #0]
 8001a9c:	e7ec      	b.n	8001a78 <_free_r+0x24>
 8001a9e:	4613      	mov	r3, r2
 8001aa0:	685a      	ldr	r2, [r3, #4]
 8001aa2:	b10a      	cbz	r2, 8001aa8 <_free_r+0x54>
 8001aa4:	42a2      	cmp	r2, r4
 8001aa6:	d9fa      	bls.n	8001a9e <_free_r+0x4a>
 8001aa8:	6819      	ldr	r1, [r3, #0]
 8001aaa:	1858      	adds	r0, r3, r1
 8001aac:	42a0      	cmp	r0, r4
 8001aae:	d10b      	bne.n	8001ac8 <_free_r+0x74>
 8001ab0:	6820      	ldr	r0, [r4, #0]
 8001ab2:	4401      	add	r1, r0
 8001ab4:	1858      	adds	r0, r3, r1
 8001ab6:	4282      	cmp	r2, r0
 8001ab8:	6019      	str	r1, [r3, #0]
 8001aba:	d1dd      	bne.n	8001a78 <_free_r+0x24>
 8001abc:	6810      	ldr	r0, [r2, #0]
 8001abe:	6852      	ldr	r2, [r2, #4]
 8001ac0:	605a      	str	r2, [r3, #4]
 8001ac2:	4401      	add	r1, r0
 8001ac4:	6019      	str	r1, [r3, #0]
 8001ac6:	e7d7      	b.n	8001a78 <_free_r+0x24>
 8001ac8:	d902      	bls.n	8001ad0 <_free_r+0x7c>
 8001aca:	230c      	movs	r3, #12
 8001acc:	602b      	str	r3, [r5, #0]
 8001ace:	e7d3      	b.n	8001a78 <_free_r+0x24>
 8001ad0:	6820      	ldr	r0, [r4, #0]
 8001ad2:	1821      	adds	r1, r4, r0
 8001ad4:	428a      	cmp	r2, r1
 8001ad6:	bf04      	itt	eq
 8001ad8:	6811      	ldreq	r1, [r2, #0]
 8001ada:	6852      	ldreq	r2, [r2, #4]
 8001adc:	6062      	str	r2, [r4, #4]
 8001ade:	bf04      	itt	eq
 8001ae0:	1809      	addeq	r1, r1, r0
 8001ae2:	6021      	streq	r1, [r4, #0]
 8001ae4:	605c      	str	r4, [r3, #4]
 8001ae6:	e7c7      	b.n	8001a78 <_free_r+0x24>
 8001ae8:	bd38      	pop	{r3, r4, r5, pc}
 8001aea:	bf00      	nop
 8001aec:	2000086c 	.word	0x2000086c

08001af0 <_malloc_r>:
 8001af0:	b570      	push	{r4, r5, r6, lr}
 8001af2:	1ccd      	adds	r5, r1, #3
 8001af4:	f025 0503 	bic.w	r5, r5, #3
 8001af8:	3508      	adds	r5, #8
 8001afa:	2d0c      	cmp	r5, #12
 8001afc:	bf38      	it	cc
 8001afe:	250c      	movcc	r5, #12
 8001b00:	2d00      	cmp	r5, #0
 8001b02:	4606      	mov	r6, r0
 8001b04:	db01      	blt.n	8001b0a <_malloc_r+0x1a>
 8001b06:	42a9      	cmp	r1, r5
 8001b08:	d903      	bls.n	8001b12 <_malloc_r+0x22>
 8001b0a:	230c      	movs	r3, #12
 8001b0c:	6033      	str	r3, [r6, #0]
 8001b0e:	2000      	movs	r0, #0
 8001b10:	bd70      	pop	{r4, r5, r6, pc}
 8001b12:	f000 fb66 	bl	80021e2 <__malloc_lock>
 8001b16:	4a23      	ldr	r2, [pc, #140]	; (8001ba4 <_malloc_r+0xb4>)
 8001b18:	6814      	ldr	r4, [r2, #0]
 8001b1a:	4621      	mov	r1, r4
 8001b1c:	b991      	cbnz	r1, 8001b44 <_malloc_r+0x54>
 8001b1e:	4c22      	ldr	r4, [pc, #136]	; (8001ba8 <_malloc_r+0xb8>)
 8001b20:	6823      	ldr	r3, [r4, #0]
 8001b22:	b91b      	cbnz	r3, 8001b2c <_malloc_r+0x3c>
 8001b24:	4630      	mov	r0, r6
 8001b26:	f000 fb27 	bl	8002178 <_sbrk_r>
 8001b2a:	6020      	str	r0, [r4, #0]
 8001b2c:	4629      	mov	r1, r5
 8001b2e:	4630      	mov	r0, r6
 8001b30:	f000 fb22 	bl	8002178 <_sbrk_r>
 8001b34:	1c43      	adds	r3, r0, #1
 8001b36:	d126      	bne.n	8001b86 <_malloc_r+0x96>
 8001b38:	230c      	movs	r3, #12
 8001b3a:	6033      	str	r3, [r6, #0]
 8001b3c:	4630      	mov	r0, r6
 8001b3e:	f000 fb51 	bl	80021e4 <__malloc_unlock>
 8001b42:	e7e4      	b.n	8001b0e <_malloc_r+0x1e>
 8001b44:	680b      	ldr	r3, [r1, #0]
 8001b46:	1b5b      	subs	r3, r3, r5
 8001b48:	d41a      	bmi.n	8001b80 <_malloc_r+0x90>
 8001b4a:	2b0b      	cmp	r3, #11
 8001b4c:	d90f      	bls.n	8001b6e <_malloc_r+0x7e>
 8001b4e:	600b      	str	r3, [r1, #0]
 8001b50:	50cd      	str	r5, [r1, r3]
 8001b52:	18cc      	adds	r4, r1, r3
 8001b54:	4630      	mov	r0, r6
 8001b56:	f000 fb45 	bl	80021e4 <__malloc_unlock>
 8001b5a:	f104 000b 	add.w	r0, r4, #11
 8001b5e:	1d23      	adds	r3, r4, #4
 8001b60:	f020 0007 	bic.w	r0, r0, #7
 8001b64:	1ac3      	subs	r3, r0, r3
 8001b66:	d01b      	beq.n	8001ba0 <_malloc_r+0xb0>
 8001b68:	425a      	negs	r2, r3
 8001b6a:	50e2      	str	r2, [r4, r3]
 8001b6c:	bd70      	pop	{r4, r5, r6, pc}
 8001b6e:	428c      	cmp	r4, r1
 8001b70:	bf0d      	iteet	eq
 8001b72:	6863      	ldreq	r3, [r4, #4]
 8001b74:	684b      	ldrne	r3, [r1, #4]
 8001b76:	6063      	strne	r3, [r4, #4]
 8001b78:	6013      	streq	r3, [r2, #0]
 8001b7a:	bf18      	it	ne
 8001b7c:	460c      	movne	r4, r1
 8001b7e:	e7e9      	b.n	8001b54 <_malloc_r+0x64>
 8001b80:	460c      	mov	r4, r1
 8001b82:	6849      	ldr	r1, [r1, #4]
 8001b84:	e7ca      	b.n	8001b1c <_malloc_r+0x2c>
 8001b86:	1cc4      	adds	r4, r0, #3
 8001b88:	f024 0403 	bic.w	r4, r4, #3
 8001b8c:	42a0      	cmp	r0, r4
 8001b8e:	d005      	beq.n	8001b9c <_malloc_r+0xac>
 8001b90:	1a21      	subs	r1, r4, r0
 8001b92:	4630      	mov	r0, r6
 8001b94:	f000 faf0 	bl	8002178 <_sbrk_r>
 8001b98:	3001      	adds	r0, #1
 8001b9a:	d0cd      	beq.n	8001b38 <_malloc_r+0x48>
 8001b9c:	6025      	str	r5, [r4, #0]
 8001b9e:	e7d9      	b.n	8001b54 <_malloc_r+0x64>
 8001ba0:	bd70      	pop	{r4, r5, r6, pc}
 8001ba2:	bf00      	nop
 8001ba4:	2000086c 	.word	0x2000086c
 8001ba8:	20000870 	.word	0x20000870

08001bac <__ssputs_r>:
 8001bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001bb0:	688e      	ldr	r6, [r1, #8]
 8001bb2:	429e      	cmp	r6, r3
 8001bb4:	4682      	mov	sl, r0
 8001bb6:	460c      	mov	r4, r1
 8001bb8:	4691      	mov	r9, r2
 8001bba:	4698      	mov	r8, r3
 8001bbc:	d835      	bhi.n	8001c2a <__ssputs_r+0x7e>
 8001bbe:	898a      	ldrh	r2, [r1, #12]
 8001bc0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8001bc4:	d031      	beq.n	8001c2a <__ssputs_r+0x7e>
 8001bc6:	6825      	ldr	r5, [r4, #0]
 8001bc8:	6909      	ldr	r1, [r1, #16]
 8001bca:	1a6f      	subs	r7, r5, r1
 8001bcc:	6965      	ldr	r5, [r4, #20]
 8001bce:	2302      	movs	r3, #2
 8001bd0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8001bd4:	fb95 f5f3 	sdiv	r5, r5, r3
 8001bd8:	f108 0301 	add.w	r3, r8, #1
 8001bdc:	443b      	add	r3, r7
 8001bde:	429d      	cmp	r5, r3
 8001be0:	bf38      	it	cc
 8001be2:	461d      	movcc	r5, r3
 8001be4:	0553      	lsls	r3, r2, #21
 8001be6:	d531      	bpl.n	8001c4c <__ssputs_r+0xa0>
 8001be8:	4629      	mov	r1, r5
 8001bea:	f7ff ff81 	bl	8001af0 <_malloc_r>
 8001bee:	4606      	mov	r6, r0
 8001bf0:	b950      	cbnz	r0, 8001c08 <__ssputs_r+0x5c>
 8001bf2:	230c      	movs	r3, #12
 8001bf4:	f8ca 3000 	str.w	r3, [sl]
 8001bf8:	89a3      	ldrh	r3, [r4, #12]
 8001bfa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001bfe:	81a3      	strh	r3, [r4, #12]
 8001c00:	f04f 30ff 	mov.w	r0, #4294967295
 8001c04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001c08:	463a      	mov	r2, r7
 8001c0a:	6921      	ldr	r1, [r4, #16]
 8001c0c:	f000 fac4 	bl	8002198 <memcpy>
 8001c10:	89a3      	ldrh	r3, [r4, #12]
 8001c12:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8001c16:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001c1a:	81a3      	strh	r3, [r4, #12]
 8001c1c:	6126      	str	r6, [r4, #16]
 8001c1e:	6165      	str	r5, [r4, #20]
 8001c20:	443e      	add	r6, r7
 8001c22:	1bed      	subs	r5, r5, r7
 8001c24:	6026      	str	r6, [r4, #0]
 8001c26:	60a5      	str	r5, [r4, #8]
 8001c28:	4646      	mov	r6, r8
 8001c2a:	4546      	cmp	r6, r8
 8001c2c:	bf28      	it	cs
 8001c2e:	4646      	movcs	r6, r8
 8001c30:	4632      	mov	r2, r6
 8001c32:	4649      	mov	r1, r9
 8001c34:	6820      	ldr	r0, [r4, #0]
 8001c36:	f000 faba 	bl	80021ae <memmove>
 8001c3a:	68a3      	ldr	r3, [r4, #8]
 8001c3c:	1b9b      	subs	r3, r3, r6
 8001c3e:	60a3      	str	r3, [r4, #8]
 8001c40:	6823      	ldr	r3, [r4, #0]
 8001c42:	441e      	add	r6, r3
 8001c44:	6026      	str	r6, [r4, #0]
 8001c46:	2000      	movs	r0, #0
 8001c48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001c4c:	462a      	mov	r2, r5
 8001c4e:	f000 faca 	bl	80021e6 <_realloc_r>
 8001c52:	4606      	mov	r6, r0
 8001c54:	2800      	cmp	r0, #0
 8001c56:	d1e1      	bne.n	8001c1c <__ssputs_r+0x70>
 8001c58:	6921      	ldr	r1, [r4, #16]
 8001c5a:	4650      	mov	r0, sl
 8001c5c:	f7ff fefa 	bl	8001a54 <_free_r>
 8001c60:	e7c7      	b.n	8001bf2 <__ssputs_r+0x46>
	...

08001c64 <_svfiprintf_r>:
 8001c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c68:	b09d      	sub	sp, #116	; 0x74
 8001c6a:	4680      	mov	r8, r0
 8001c6c:	9303      	str	r3, [sp, #12]
 8001c6e:	898b      	ldrh	r3, [r1, #12]
 8001c70:	061c      	lsls	r4, r3, #24
 8001c72:	460d      	mov	r5, r1
 8001c74:	4616      	mov	r6, r2
 8001c76:	d50f      	bpl.n	8001c98 <_svfiprintf_r+0x34>
 8001c78:	690b      	ldr	r3, [r1, #16]
 8001c7a:	b96b      	cbnz	r3, 8001c98 <_svfiprintf_r+0x34>
 8001c7c:	2140      	movs	r1, #64	; 0x40
 8001c7e:	f7ff ff37 	bl	8001af0 <_malloc_r>
 8001c82:	6028      	str	r0, [r5, #0]
 8001c84:	6128      	str	r0, [r5, #16]
 8001c86:	b928      	cbnz	r0, 8001c94 <_svfiprintf_r+0x30>
 8001c88:	230c      	movs	r3, #12
 8001c8a:	f8c8 3000 	str.w	r3, [r8]
 8001c8e:	f04f 30ff 	mov.w	r0, #4294967295
 8001c92:	e0c5      	b.n	8001e20 <_svfiprintf_r+0x1bc>
 8001c94:	2340      	movs	r3, #64	; 0x40
 8001c96:	616b      	str	r3, [r5, #20]
 8001c98:	2300      	movs	r3, #0
 8001c9a:	9309      	str	r3, [sp, #36]	; 0x24
 8001c9c:	2320      	movs	r3, #32
 8001c9e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001ca2:	2330      	movs	r3, #48	; 0x30
 8001ca4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001ca8:	f04f 0b01 	mov.w	fp, #1
 8001cac:	4637      	mov	r7, r6
 8001cae:	463c      	mov	r4, r7
 8001cb0:	f814 3b01 	ldrb.w	r3, [r4], #1
 8001cb4:	2b00      	cmp	r3, #0
 8001cb6:	d13c      	bne.n	8001d32 <_svfiprintf_r+0xce>
 8001cb8:	ebb7 0a06 	subs.w	sl, r7, r6
 8001cbc:	d00b      	beq.n	8001cd6 <_svfiprintf_r+0x72>
 8001cbe:	4653      	mov	r3, sl
 8001cc0:	4632      	mov	r2, r6
 8001cc2:	4629      	mov	r1, r5
 8001cc4:	4640      	mov	r0, r8
 8001cc6:	f7ff ff71 	bl	8001bac <__ssputs_r>
 8001cca:	3001      	adds	r0, #1
 8001ccc:	f000 80a3 	beq.w	8001e16 <_svfiprintf_r+0x1b2>
 8001cd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001cd2:	4453      	add	r3, sl
 8001cd4:	9309      	str	r3, [sp, #36]	; 0x24
 8001cd6:	783b      	ldrb	r3, [r7, #0]
 8001cd8:	2b00      	cmp	r3, #0
 8001cda:	f000 809c 	beq.w	8001e16 <_svfiprintf_r+0x1b2>
 8001cde:	2300      	movs	r3, #0
 8001ce0:	f04f 32ff 	mov.w	r2, #4294967295
 8001ce4:	9304      	str	r3, [sp, #16]
 8001ce6:	9307      	str	r3, [sp, #28]
 8001ce8:	9205      	str	r2, [sp, #20]
 8001cea:	9306      	str	r3, [sp, #24]
 8001cec:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001cf0:	931a      	str	r3, [sp, #104]	; 0x68
 8001cf2:	2205      	movs	r2, #5
 8001cf4:	7821      	ldrb	r1, [r4, #0]
 8001cf6:	4850      	ldr	r0, [pc, #320]	; (8001e38 <_svfiprintf_r+0x1d4>)
 8001cf8:	f7fe fa72 	bl	80001e0 <memchr>
 8001cfc:	1c67      	adds	r7, r4, #1
 8001cfe:	9b04      	ldr	r3, [sp, #16]
 8001d00:	b9d8      	cbnz	r0, 8001d3a <_svfiprintf_r+0xd6>
 8001d02:	06d9      	lsls	r1, r3, #27
 8001d04:	bf44      	itt	mi
 8001d06:	2220      	movmi	r2, #32
 8001d08:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8001d0c:	071a      	lsls	r2, r3, #28
 8001d0e:	bf44      	itt	mi
 8001d10:	222b      	movmi	r2, #43	; 0x2b
 8001d12:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8001d16:	7822      	ldrb	r2, [r4, #0]
 8001d18:	2a2a      	cmp	r2, #42	; 0x2a
 8001d1a:	d016      	beq.n	8001d4a <_svfiprintf_r+0xe6>
 8001d1c:	9a07      	ldr	r2, [sp, #28]
 8001d1e:	2100      	movs	r1, #0
 8001d20:	200a      	movs	r0, #10
 8001d22:	4627      	mov	r7, r4
 8001d24:	3401      	adds	r4, #1
 8001d26:	783b      	ldrb	r3, [r7, #0]
 8001d28:	3b30      	subs	r3, #48	; 0x30
 8001d2a:	2b09      	cmp	r3, #9
 8001d2c:	d951      	bls.n	8001dd2 <_svfiprintf_r+0x16e>
 8001d2e:	b1c9      	cbz	r1, 8001d64 <_svfiprintf_r+0x100>
 8001d30:	e011      	b.n	8001d56 <_svfiprintf_r+0xf2>
 8001d32:	2b25      	cmp	r3, #37	; 0x25
 8001d34:	d0c0      	beq.n	8001cb8 <_svfiprintf_r+0x54>
 8001d36:	4627      	mov	r7, r4
 8001d38:	e7b9      	b.n	8001cae <_svfiprintf_r+0x4a>
 8001d3a:	4a3f      	ldr	r2, [pc, #252]	; (8001e38 <_svfiprintf_r+0x1d4>)
 8001d3c:	1a80      	subs	r0, r0, r2
 8001d3e:	fa0b f000 	lsl.w	r0, fp, r0
 8001d42:	4318      	orrs	r0, r3
 8001d44:	9004      	str	r0, [sp, #16]
 8001d46:	463c      	mov	r4, r7
 8001d48:	e7d3      	b.n	8001cf2 <_svfiprintf_r+0x8e>
 8001d4a:	9a03      	ldr	r2, [sp, #12]
 8001d4c:	1d11      	adds	r1, r2, #4
 8001d4e:	6812      	ldr	r2, [r2, #0]
 8001d50:	9103      	str	r1, [sp, #12]
 8001d52:	2a00      	cmp	r2, #0
 8001d54:	db01      	blt.n	8001d5a <_svfiprintf_r+0xf6>
 8001d56:	9207      	str	r2, [sp, #28]
 8001d58:	e004      	b.n	8001d64 <_svfiprintf_r+0x100>
 8001d5a:	4252      	negs	r2, r2
 8001d5c:	f043 0302 	orr.w	r3, r3, #2
 8001d60:	9207      	str	r2, [sp, #28]
 8001d62:	9304      	str	r3, [sp, #16]
 8001d64:	783b      	ldrb	r3, [r7, #0]
 8001d66:	2b2e      	cmp	r3, #46	; 0x2e
 8001d68:	d10e      	bne.n	8001d88 <_svfiprintf_r+0x124>
 8001d6a:	787b      	ldrb	r3, [r7, #1]
 8001d6c:	2b2a      	cmp	r3, #42	; 0x2a
 8001d6e:	f107 0101 	add.w	r1, r7, #1
 8001d72:	d132      	bne.n	8001dda <_svfiprintf_r+0x176>
 8001d74:	9b03      	ldr	r3, [sp, #12]
 8001d76:	1d1a      	adds	r2, r3, #4
 8001d78:	681b      	ldr	r3, [r3, #0]
 8001d7a:	9203      	str	r2, [sp, #12]
 8001d7c:	2b00      	cmp	r3, #0
 8001d7e:	bfb8      	it	lt
 8001d80:	f04f 33ff 	movlt.w	r3, #4294967295
 8001d84:	3702      	adds	r7, #2
 8001d86:	9305      	str	r3, [sp, #20]
 8001d88:	4c2c      	ldr	r4, [pc, #176]	; (8001e3c <_svfiprintf_r+0x1d8>)
 8001d8a:	7839      	ldrb	r1, [r7, #0]
 8001d8c:	2203      	movs	r2, #3
 8001d8e:	4620      	mov	r0, r4
 8001d90:	f7fe fa26 	bl	80001e0 <memchr>
 8001d94:	b138      	cbz	r0, 8001da6 <_svfiprintf_r+0x142>
 8001d96:	2340      	movs	r3, #64	; 0x40
 8001d98:	1b00      	subs	r0, r0, r4
 8001d9a:	fa03 f000 	lsl.w	r0, r3, r0
 8001d9e:	9b04      	ldr	r3, [sp, #16]
 8001da0:	4303      	orrs	r3, r0
 8001da2:	9304      	str	r3, [sp, #16]
 8001da4:	3701      	adds	r7, #1
 8001da6:	7839      	ldrb	r1, [r7, #0]
 8001da8:	4825      	ldr	r0, [pc, #148]	; (8001e40 <_svfiprintf_r+0x1dc>)
 8001daa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001dae:	2206      	movs	r2, #6
 8001db0:	1c7e      	adds	r6, r7, #1
 8001db2:	f7fe fa15 	bl	80001e0 <memchr>
 8001db6:	2800      	cmp	r0, #0
 8001db8:	d035      	beq.n	8001e26 <_svfiprintf_r+0x1c2>
 8001dba:	4b22      	ldr	r3, [pc, #136]	; (8001e44 <_svfiprintf_r+0x1e0>)
 8001dbc:	b9fb      	cbnz	r3, 8001dfe <_svfiprintf_r+0x19a>
 8001dbe:	9b03      	ldr	r3, [sp, #12]
 8001dc0:	3307      	adds	r3, #7
 8001dc2:	f023 0307 	bic.w	r3, r3, #7
 8001dc6:	3308      	adds	r3, #8
 8001dc8:	9303      	str	r3, [sp, #12]
 8001dca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001dcc:	444b      	add	r3, r9
 8001dce:	9309      	str	r3, [sp, #36]	; 0x24
 8001dd0:	e76c      	b.n	8001cac <_svfiprintf_r+0x48>
 8001dd2:	fb00 3202 	mla	r2, r0, r2, r3
 8001dd6:	2101      	movs	r1, #1
 8001dd8:	e7a3      	b.n	8001d22 <_svfiprintf_r+0xbe>
 8001dda:	2300      	movs	r3, #0
 8001ddc:	9305      	str	r3, [sp, #20]
 8001dde:	4618      	mov	r0, r3
 8001de0:	240a      	movs	r4, #10
 8001de2:	460f      	mov	r7, r1
 8001de4:	3101      	adds	r1, #1
 8001de6:	783a      	ldrb	r2, [r7, #0]
 8001de8:	3a30      	subs	r2, #48	; 0x30
 8001dea:	2a09      	cmp	r2, #9
 8001dec:	d903      	bls.n	8001df6 <_svfiprintf_r+0x192>
 8001dee:	2b00      	cmp	r3, #0
 8001df0:	d0ca      	beq.n	8001d88 <_svfiprintf_r+0x124>
 8001df2:	9005      	str	r0, [sp, #20]
 8001df4:	e7c8      	b.n	8001d88 <_svfiprintf_r+0x124>
 8001df6:	fb04 2000 	mla	r0, r4, r0, r2
 8001dfa:	2301      	movs	r3, #1
 8001dfc:	e7f1      	b.n	8001de2 <_svfiprintf_r+0x17e>
 8001dfe:	ab03      	add	r3, sp, #12
 8001e00:	9300      	str	r3, [sp, #0]
 8001e02:	462a      	mov	r2, r5
 8001e04:	4b10      	ldr	r3, [pc, #64]	; (8001e48 <_svfiprintf_r+0x1e4>)
 8001e06:	a904      	add	r1, sp, #16
 8001e08:	4640      	mov	r0, r8
 8001e0a:	f3af 8000 	nop.w
 8001e0e:	f1b0 3fff 	cmp.w	r0, #4294967295
 8001e12:	4681      	mov	r9, r0
 8001e14:	d1d9      	bne.n	8001dca <_svfiprintf_r+0x166>
 8001e16:	89ab      	ldrh	r3, [r5, #12]
 8001e18:	065b      	lsls	r3, r3, #25
 8001e1a:	f53f af38 	bmi.w	8001c8e <_svfiprintf_r+0x2a>
 8001e1e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001e20:	b01d      	add	sp, #116	; 0x74
 8001e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001e26:	ab03      	add	r3, sp, #12
 8001e28:	9300      	str	r3, [sp, #0]
 8001e2a:	462a      	mov	r2, r5
 8001e2c:	4b06      	ldr	r3, [pc, #24]	; (8001e48 <_svfiprintf_r+0x1e4>)
 8001e2e:	a904      	add	r1, sp, #16
 8001e30:	4640      	mov	r0, r8
 8001e32:	f000 f881 	bl	8001f38 <_printf_i>
 8001e36:	e7ea      	b.n	8001e0e <_svfiprintf_r+0x1aa>
 8001e38:	08004ac4 	.word	0x08004ac4
 8001e3c:	08004aca 	.word	0x08004aca
 8001e40:	08004ace 	.word	0x08004ace
 8001e44:	00000000 	.word	0x00000000
 8001e48:	08001bad 	.word	0x08001bad

08001e4c <_printf_common>:
 8001e4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e50:	4691      	mov	r9, r2
 8001e52:	461f      	mov	r7, r3
 8001e54:	688a      	ldr	r2, [r1, #8]
 8001e56:	690b      	ldr	r3, [r1, #16]
 8001e58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001e5c:	4293      	cmp	r3, r2
 8001e5e:	bfb8      	it	lt
 8001e60:	4613      	movlt	r3, r2
 8001e62:	f8c9 3000 	str.w	r3, [r9]
 8001e66:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001e6a:	4606      	mov	r6, r0
 8001e6c:	460c      	mov	r4, r1
 8001e6e:	b112      	cbz	r2, 8001e76 <_printf_common+0x2a>
 8001e70:	3301      	adds	r3, #1
 8001e72:	f8c9 3000 	str.w	r3, [r9]
 8001e76:	6823      	ldr	r3, [r4, #0]
 8001e78:	0699      	lsls	r1, r3, #26
 8001e7a:	bf42      	ittt	mi
 8001e7c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001e80:	3302      	addmi	r3, #2
 8001e82:	f8c9 3000 	strmi.w	r3, [r9]
 8001e86:	6825      	ldr	r5, [r4, #0]
 8001e88:	f015 0506 	ands.w	r5, r5, #6
 8001e8c:	d107      	bne.n	8001e9e <_printf_common+0x52>
 8001e8e:	f104 0a19 	add.w	sl, r4, #25
 8001e92:	68e3      	ldr	r3, [r4, #12]
 8001e94:	f8d9 2000 	ldr.w	r2, [r9]
 8001e98:	1a9b      	subs	r3, r3, r2
 8001e9a:	429d      	cmp	r5, r3
 8001e9c:	db29      	blt.n	8001ef2 <_printf_common+0xa6>
 8001e9e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001ea2:	6822      	ldr	r2, [r4, #0]
 8001ea4:	3300      	adds	r3, #0
 8001ea6:	bf18      	it	ne
 8001ea8:	2301      	movne	r3, #1
 8001eaa:	0692      	lsls	r2, r2, #26
 8001eac:	d42e      	bmi.n	8001f0c <_printf_common+0xc0>
 8001eae:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001eb2:	4639      	mov	r1, r7
 8001eb4:	4630      	mov	r0, r6
 8001eb6:	47c0      	blx	r8
 8001eb8:	3001      	adds	r0, #1
 8001eba:	d021      	beq.n	8001f00 <_printf_common+0xb4>
 8001ebc:	6823      	ldr	r3, [r4, #0]
 8001ebe:	68e5      	ldr	r5, [r4, #12]
 8001ec0:	f8d9 2000 	ldr.w	r2, [r9]
 8001ec4:	f003 0306 	and.w	r3, r3, #6
 8001ec8:	2b04      	cmp	r3, #4
 8001eca:	bf08      	it	eq
 8001ecc:	1aad      	subeq	r5, r5, r2
 8001ece:	68a3      	ldr	r3, [r4, #8]
 8001ed0:	6922      	ldr	r2, [r4, #16]
 8001ed2:	bf0c      	ite	eq
 8001ed4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001ed8:	2500      	movne	r5, #0
 8001eda:	4293      	cmp	r3, r2
 8001edc:	bfc4      	itt	gt
 8001ede:	1a9b      	subgt	r3, r3, r2
 8001ee0:	18ed      	addgt	r5, r5, r3
 8001ee2:	f04f 0900 	mov.w	r9, #0
 8001ee6:	341a      	adds	r4, #26
 8001ee8:	454d      	cmp	r5, r9
 8001eea:	d11b      	bne.n	8001f24 <_printf_common+0xd8>
 8001eec:	2000      	movs	r0, #0
 8001eee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ef2:	2301      	movs	r3, #1
 8001ef4:	4652      	mov	r2, sl
 8001ef6:	4639      	mov	r1, r7
 8001ef8:	4630      	mov	r0, r6
 8001efa:	47c0      	blx	r8
 8001efc:	3001      	adds	r0, #1
 8001efe:	d103      	bne.n	8001f08 <_printf_common+0xbc>
 8001f00:	f04f 30ff 	mov.w	r0, #4294967295
 8001f04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f08:	3501      	adds	r5, #1
 8001f0a:	e7c2      	b.n	8001e92 <_printf_common+0x46>
 8001f0c:	18e1      	adds	r1, r4, r3
 8001f0e:	1c5a      	adds	r2, r3, #1
 8001f10:	2030      	movs	r0, #48	; 0x30
 8001f12:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001f16:	4422      	add	r2, r4
 8001f18:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001f1c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001f20:	3302      	adds	r3, #2
 8001f22:	e7c4      	b.n	8001eae <_printf_common+0x62>
 8001f24:	2301      	movs	r3, #1
 8001f26:	4622      	mov	r2, r4
 8001f28:	4639      	mov	r1, r7
 8001f2a:	4630      	mov	r0, r6
 8001f2c:	47c0      	blx	r8
 8001f2e:	3001      	adds	r0, #1
 8001f30:	d0e6      	beq.n	8001f00 <_printf_common+0xb4>
 8001f32:	f109 0901 	add.w	r9, r9, #1
 8001f36:	e7d7      	b.n	8001ee8 <_printf_common+0x9c>

08001f38 <_printf_i>:
 8001f38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001f3c:	4617      	mov	r7, r2
 8001f3e:	7e0a      	ldrb	r2, [r1, #24]
 8001f40:	b085      	sub	sp, #20
 8001f42:	2a6e      	cmp	r2, #110	; 0x6e
 8001f44:	4698      	mov	r8, r3
 8001f46:	4606      	mov	r6, r0
 8001f48:	460c      	mov	r4, r1
 8001f4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8001f4c:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8001f50:	f000 80bc 	beq.w	80020cc <_printf_i+0x194>
 8001f54:	d81a      	bhi.n	8001f8c <_printf_i+0x54>
 8001f56:	2a63      	cmp	r2, #99	; 0x63
 8001f58:	d02e      	beq.n	8001fb8 <_printf_i+0x80>
 8001f5a:	d80a      	bhi.n	8001f72 <_printf_i+0x3a>
 8001f5c:	2a00      	cmp	r2, #0
 8001f5e:	f000 80c8 	beq.w	80020f2 <_printf_i+0x1ba>
 8001f62:	2a58      	cmp	r2, #88	; 0x58
 8001f64:	f000 808a 	beq.w	800207c <_printf_i+0x144>
 8001f68:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001f6c:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8001f70:	e02a      	b.n	8001fc8 <_printf_i+0x90>
 8001f72:	2a64      	cmp	r2, #100	; 0x64
 8001f74:	d001      	beq.n	8001f7a <_printf_i+0x42>
 8001f76:	2a69      	cmp	r2, #105	; 0x69
 8001f78:	d1f6      	bne.n	8001f68 <_printf_i+0x30>
 8001f7a:	6821      	ldr	r1, [r4, #0]
 8001f7c:	681a      	ldr	r2, [r3, #0]
 8001f7e:	f011 0f80 	tst.w	r1, #128	; 0x80
 8001f82:	d023      	beq.n	8001fcc <_printf_i+0x94>
 8001f84:	1d11      	adds	r1, r2, #4
 8001f86:	6019      	str	r1, [r3, #0]
 8001f88:	6813      	ldr	r3, [r2, #0]
 8001f8a:	e027      	b.n	8001fdc <_printf_i+0xa4>
 8001f8c:	2a73      	cmp	r2, #115	; 0x73
 8001f8e:	f000 80b4 	beq.w	80020fa <_printf_i+0x1c2>
 8001f92:	d808      	bhi.n	8001fa6 <_printf_i+0x6e>
 8001f94:	2a6f      	cmp	r2, #111	; 0x6f
 8001f96:	d02a      	beq.n	8001fee <_printf_i+0xb6>
 8001f98:	2a70      	cmp	r2, #112	; 0x70
 8001f9a:	d1e5      	bne.n	8001f68 <_printf_i+0x30>
 8001f9c:	680a      	ldr	r2, [r1, #0]
 8001f9e:	f042 0220 	orr.w	r2, r2, #32
 8001fa2:	600a      	str	r2, [r1, #0]
 8001fa4:	e003      	b.n	8001fae <_printf_i+0x76>
 8001fa6:	2a75      	cmp	r2, #117	; 0x75
 8001fa8:	d021      	beq.n	8001fee <_printf_i+0xb6>
 8001faa:	2a78      	cmp	r2, #120	; 0x78
 8001fac:	d1dc      	bne.n	8001f68 <_printf_i+0x30>
 8001fae:	2278      	movs	r2, #120	; 0x78
 8001fb0:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8001fb4:	496e      	ldr	r1, [pc, #440]	; (8002170 <_printf_i+0x238>)
 8001fb6:	e064      	b.n	8002082 <_printf_i+0x14a>
 8001fb8:	681a      	ldr	r2, [r3, #0]
 8001fba:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8001fbe:	1d11      	adds	r1, r2, #4
 8001fc0:	6019      	str	r1, [r3, #0]
 8001fc2:	6813      	ldr	r3, [r2, #0]
 8001fc4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001fc8:	2301      	movs	r3, #1
 8001fca:	e0a3      	b.n	8002114 <_printf_i+0x1dc>
 8001fcc:	f011 0f40 	tst.w	r1, #64	; 0x40
 8001fd0:	f102 0104 	add.w	r1, r2, #4
 8001fd4:	6019      	str	r1, [r3, #0]
 8001fd6:	d0d7      	beq.n	8001f88 <_printf_i+0x50>
 8001fd8:	f9b2 3000 	ldrsh.w	r3, [r2]
 8001fdc:	2b00      	cmp	r3, #0
 8001fde:	da03      	bge.n	8001fe8 <_printf_i+0xb0>
 8001fe0:	222d      	movs	r2, #45	; 0x2d
 8001fe2:	425b      	negs	r3, r3
 8001fe4:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001fe8:	4962      	ldr	r1, [pc, #392]	; (8002174 <_printf_i+0x23c>)
 8001fea:	220a      	movs	r2, #10
 8001fec:	e017      	b.n	800201e <_printf_i+0xe6>
 8001fee:	6820      	ldr	r0, [r4, #0]
 8001ff0:	6819      	ldr	r1, [r3, #0]
 8001ff2:	f010 0f80 	tst.w	r0, #128	; 0x80
 8001ff6:	d003      	beq.n	8002000 <_printf_i+0xc8>
 8001ff8:	1d08      	adds	r0, r1, #4
 8001ffa:	6018      	str	r0, [r3, #0]
 8001ffc:	680b      	ldr	r3, [r1, #0]
 8001ffe:	e006      	b.n	800200e <_printf_i+0xd6>
 8002000:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002004:	f101 0004 	add.w	r0, r1, #4
 8002008:	6018      	str	r0, [r3, #0]
 800200a:	d0f7      	beq.n	8001ffc <_printf_i+0xc4>
 800200c:	880b      	ldrh	r3, [r1, #0]
 800200e:	4959      	ldr	r1, [pc, #356]	; (8002174 <_printf_i+0x23c>)
 8002010:	2a6f      	cmp	r2, #111	; 0x6f
 8002012:	bf14      	ite	ne
 8002014:	220a      	movne	r2, #10
 8002016:	2208      	moveq	r2, #8
 8002018:	2000      	movs	r0, #0
 800201a:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 800201e:	6865      	ldr	r5, [r4, #4]
 8002020:	60a5      	str	r5, [r4, #8]
 8002022:	2d00      	cmp	r5, #0
 8002024:	f2c0 809c 	blt.w	8002160 <_printf_i+0x228>
 8002028:	6820      	ldr	r0, [r4, #0]
 800202a:	f020 0004 	bic.w	r0, r0, #4
 800202e:	6020      	str	r0, [r4, #0]
 8002030:	2b00      	cmp	r3, #0
 8002032:	d13f      	bne.n	80020b4 <_printf_i+0x17c>
 8002034:	2d00      	cmp	r5, #0
 8002036:	f040 8095 	bne.w	8002164 <_printf_i+0x22c>
 800203a:	4675      	mov	r5, lr
 800203c:	2a08      	cmp	r2, #8
 800203e:	d10b      	bne.n	8002058 <_printf_i+0x120>
 8002040:	6823      	ldr	r3, [r4, #0]
 8002042:	07da      	lsls	r2, r3, #31
 8002044:	d508      	bpl.n	8002058 <_printf_i+0x120>
 8002046:	6923      	ldr	r3, [r4, #16]
 8002048:	6862      	ldr	r2, [r4, #4]
 800204a:	429a      	cmp	r2, r3
 800204c:	bfde      	ittt	le
 800204e:	2330      	movle	r3, #48	; 0x30
 8002050:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002054:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002058:	ebae 0305 	sub.w	r3, lr, r5
 800205c:	6123      	str	r3, [r4, #16]
 800205e:	f8cd 8000 	str.w	r8, [sp]
 8002062:	463b      	mov	r3, r7
 8002064:	aa03      	add	r2, sp, #12
 8002066:	4621      	mov	r1, r4
 8002068:	4630      	mov	r0, r6
 800206a:	f7ff feef 	bl	8001e4c <_printf_common>
 800206e:	3001      	adds	r0, #1
 8002070:	d155      	bne.n	800211e <_printf_i+0x1e6>
 8002072:	f04f 30ff 	mov.w	r0, #4294967295
 8002076:	b005      	add	sp, #20
 8002078:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800207c:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8002080:	493c      	ldr	r1, [pc, #240]	; (8002174 <_printf_i+0x23c>)
 8002082:	6822      	ldr	r2, [r4, #0]
 8002084:	6818      	ldr	r0, [r3, #0]
 8002086:	f012 0f80 	tst.w	r2, #128	; 0x80
 800208a:	f100 0504 	add.w	r5, r0, #4
 800208e:	601d      	str	r5, [r3, #0]
 8002090:	d001      	beq.n	8002096 <_printf_i+0x15e>
 8002092:	6803      	ldr	r3, [r0, #0]
 8002094:	e002      	b.n	800209c <_printf_i+0x164>
 8002096:	0655      	lsls	r5, r2, #25
 8002098:	d5fb      	bpl.n	8002092 <_printf_i+0x15a>
 800209a:	8803      	ldrh	r3, [r0, #0]
 800209c:	07d0      	lsls	r0, r2, #31
 800209e:	bf44      	itt	mi
 80020a0:	f042 0220 	orrmi.w	r2, r2, #32
 80020a4:	6022      	strmi	r2, [r4, #0]
 80020a6:	b91b      	cbnz	r3, 80020b0 <_printf_i+0x178>
 80020a8:	6822      	ldr	r2, [r4, #0]
 80020aa:	f022 0220 	bic.w	r2, r2, #32
 80020ae:	6022      	str	r2, [r4, #0]
 80020b0:	2210      	movs	r2, #16
 80020b2:	e7b1      	b.n	8002018 <_printf_i+0xe0>
 80020b4:	4675      	mov	r5, lr
 80020b6:	fbb3 f0f2 	udiv	r0, r3, r2
 80020ba:	fb02 3310 	mls	r3, r2, r0, r3
 80020be:	5ccb      	ldrb	r3, [r1, r3]
 80020c0:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80020c4:	4603      	mov	r3, r0
 80020c6:	2800      	cmp	r0, #0
 80020c8:	d1f5      	bne.n	80020b6 <_printf_i+0x17e>
 80020ca:	e7b7      	b.n	800203c <_printf_i+0x104>
 80020cc:	6808      	ldr	r0, [r1, #0]
 80020ce:	681a      	ldr	r2, [r3, #0]
 80020d0:	6949      	ldr	r1, [r1, #20]
 80020d2:	f010 0f80 	tst.w	r0, #128	; 0x80
 80020d6:	d004      	beq.n	80020e2 <_printf_i+0x1aa>
 80020d8:	1d10      	adds	r0, r2, #4
 80020da:	6018      	str	r0, [r3, #0]
 80020dc:	6813      	ldr	r3, [r2, #0]
 80020de:	6019      	str	r1, [r3, #0]
 80020e0:	e007      	b.n	80020f2 <_printf_i+0x1ba>
 80020e2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80020e6:	f102 0004 	add.w	r0, r2, #4
 80020ea:	6018      	str	r0, [r3, #0]
 80020ec:	6813      	ldr	r3, [r2, #0]
 80020ee:	d0f6      	beq.n	80020de <_printf_i+0x1a6>
 80020f0:	8019      	strh	r1, [r3, #0]
 80020f2:	2300      	movs	r3, #0
 80020f4:	6123      	str	r3, [r4, #16]
 80020f6:	4675      	mov	r5, lr
 80020f8:	e7b1      	b.n	800205e <_printf_i+0x126>
 80020fa:	681a      	ldr	r2, [r3, #0]
 80020fc:	1d11      	adds	r1, r2, #4
 80020fe:	6019      	str	r1, [r3, #0]
 8002100:	6815      	ldr	r5, [r2, #0]
 8002102:	6862      	ldr	r2, [r4, #4]
 8002104:	2100      	movs	r1, #0
 8002106:	4628      	mov	r0, r5
 8002108:	f7fe f86a 	bl	80001e0 <memchr>
 800210c:	b108      	cbz	r0, 8002112 <_printf_i+0x1da>
 800210e:	1b40      	subs	r0, r0, r5
 8002110:	6060      	str	r0, [r4, #4]
 8002112:	6863      	ldr	r3, [r4, #4]
 8002114:	6123      	str	r3, [r4, #16]
 8002116:	2300      	movs	r3, #0
 8002118:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800211c:	e79f      	b.n	800205e <_printf_i+0x126>
 800211e:	6923      	ldr	r3, [r4, #16]
 8002120:	462a      	mov	r2, r5
 8002122:	4639      	mov	r1, r7
 8002124:	4630      	mov	r0, r6
 8002126:	47c0      	blx	r8
 8002128:	3001      	adds	r0, #1
 800212a:	d0a2      	beq.n	8002072 <_printf_i+0x13a>
 800212c:	6823      	ldr	r3, [r4, #0]
 800212e:	079b      	lsls	r3, r3, #30
 8002130:	d507      	bpl.n	8002142 <_printf_i+0x20a>
 8002132:	2500      	movs	r5, #0
 8002134:	f104 0919 	add.w	r9, r4, #25
 8002138:	68e3      	ldr	r3, [r4, #12]
 800213a:	9a03      	ldr	r2, [sp, #12]
 800213c:	1a9b      	subs	r3, r3, r2
 800213e:	429d      	cmp	r5, r3
 8002140:	db05      	blt.n	800214e <_printf_i+0x216>
 8002142:	68e0      	ldr	r0, [r4, #12]
 8002144:	9b03      	ldr	r3, [sp, #12]
 8002146:	4298      	cmp	r0, r3
 8002148:	bfb8      	it	lt
 800214a:	4618      	movlt	r0, r3
 800214c:	e793      	b.n	8002076 <_printf_i+0x13e>
 800214e:	2301      	movs	r3, #1
 8002150:	464a      	mov	r2, r9
 8002152:	4639      	mov	r1, r7
 8002154:	4630      	mov	r0, r6
 8002156:	47c0      	blx	r8
 8002158:	3001      	adds	r0, #1
 800215a:	d08a      	beq.n	8002072 <_printf_i+0x13a>
 800215c:	3501      	adds	r5, #1
 800215e:	e7eb      	b.n	8002138 <_printf_i+0x200>
 8002160:	2b00      	cmp	r3, #0
 8002162:	d1a7      	bne.n	80020b4 <_printf_i+0x17c>
 8002164:	780b      	ldrb	r3, [r1, #0]
 8002166:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800216a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800216e:	e765      	b.n	800203c <_printf_i+0x104>
 8002170:	08004ae6 	.word	0x08004ae6
 8002174:	08004ad5 	.word	0x08004ad5

08002178 <_sbrk_r>:
 8002178:	b538      	push	{r3, r4, r5, lr}
 800217a:	4c06      	ldr	r4, [pc, #24]	; (8002194 <_sbrk_r+0x1c>)
 800217c:	2300      	movs	r3, #0
 800217e:	4605      	mov	r5, r0
 8002180:	4608      	mov	r0, r1
 8002182:	6023      	str	r3, [r4, #0]
 8002184:	f7ff fbc4 	bl	8001910 <_sbrk>
 8002188:	1c43      	adds	r3, r0, #1
 800218a:	d102      	bne.n	8002192 <_sbrk_r+0x1a>
 800218c:	6823      	ldr	r3, [r4, #0]
 800218e:	b103      	cbz	r3, 8002192 <_sbrk_r+0x1a>
 8002190:	602b      	str	r3, [r5, #0]
 8002192:	bd38      	pop	{r3, r4, r5, pc}
 8002194:	20000940 	.word	0x20000940

08002198 <memcpy>:
 8002198:	b510      	push	{r4, lr}
 800219a:	1e43      	subs	r3, r0, #1
 800219c:	440a      	add	r2, r1
 800219e:	4291      	cmp	r1, r2
 80021a0:	d100      	bne.n	80021a4 <memcpy+0xc>
 80021a2:	bd10      	pop	{r4, pc}
 80021a4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80021a8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80021ac:	e7f7      	b.n	800219e <memcpy+0x6>

080021ae <memmove>:
 80021ae:	4288      	cmp	r0, r1
 80021b0:	b510      	push	{r4, lr}
 80021b2:	eb01 0302 	add.w	r3, r1, r2
 80021b6:	d803      	bhi.n	80021c0 <memmove+0x12>
 80021b8:	1e42      	subs	r2, r0, #1
 80021ba:	4299      	cmp	r1, r3
 80021bc:	d10c      	bne.n	80021d8 <memmove+0x2a>
 80021be:	bd10      	pop	{r4, pc}
 80021c0:	4298      	cmp	r0, r3
 80021c2:	d2f9      	bcs.n	80021b8 <memmove+0xa>
 80021c4:	1881      	adds	r1, r0, r2
 80021c6:	1ad2      	subs	r2, r2, r3
 80021c8:	42d3      	cmn	r3, r2
 80021ca:	d100      	bne.n	80021ce <memmove+0x20>
 80021cc:	bd10      	pop	{r4, pc}
 80021ce:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80021d2:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80021d6:	e7f7      	b.n	80021c8 <memmove+0x1a>
 80021d8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80021dc:	f802 4f01 	strb.w	r4, [r2, #1]!
 80021e0:	e7eb      	b.n	80021ba <memmove+0xc>

080021e2 <__malloc_lock>:
 80021e2:	4770      	bx	lr

080021e4 <__malloc_unlock>:
 80021e4:	4770      	bx	lr

080021e6 <_realloc_r>:
 80021e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021e8:	4607      	mov	r7, r0
 80021ea:	4614      	mov	r4, r2
 80021ec:	460e      	mov	r6, r1
 80021ee:	b921      	cbnz	r1, 80021fa <_realloc_r+0x14>
 80021f0:	4611      	mov	r1, r2
 80021f2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80021f6:	f7ff bc7b 	b.w	8001af0 <_malloc_r>
 80021fa:	b922      	cbnz	r2, 8002206 <_realloc_r+0x20>
 80021fc:	f7ff fc2a 	bl	8001a54 <_free_r>
 8002200:	4625      	mov	r5, r4
 8002202:	4628      	mov	r0, r5
 8002204:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002206:	f000 f814 	bl	8002232 <_malloc_usable_size_r>
 800220a:	4284      	cmp	r4, r0
 800220c:	d90f      	bls.n	800222e <_realloc_r+0x48>
 800220e:	4621      	mov	r1, r4
 8002210:	4638      	mov	r0, r7
 8002212:	f7ff fc6d 	bl	8001af0 <_malloc_r>
 8002216:	4605      	mov	r5, r0
 8002218:	2800      	cmp	r0, #0
 800221a:	d0f2      	beq.n	8002202 <_realloc_r+0x1c>
 800221c:	4631      	mov	r1, r6
 800221e:	4622      	mov	r2, r4
 8002220:	f7ff ffba 	bl	8002198 <memcpy>
 8002224:	4631      	mov	r1, r6
 8002226:	4638      	mov	r0, r7
 8002228:	f7ff fc14 	bl	8001a54 <_free_r>
 800222c:	e7e9      	b.n	8002202 <_realloc_r+0x1c>
 800222e:	4635      	mov	r5, r6
 8002230:	e7e7      	b.n	8002202 <_realloc_r+0x1c>

08002232 <_malloc_usable_size_r>:
 8002232:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8002236:	2800      	cmp	r0, #0
 8002238:	f1a0 0004 	sub.w	r0, r0, #4
 800223c:	bfbc      	itt	lt
 800223e:	580b      	ldrlt	r3, [r1, r0]
 8002240:	18c0      	addlt	r0, r0, r3
 8002242:	4770      	bx	lr

08002244 <CARME_CAN_Read_Register>:
 8002244:	b480      	push	{r7}
 8002246:	b083      	sub	sp, #12
 8002248:	af00      	add	r7, sp, #0
 800224a:	4603      	mov	r3, r0
 800224c:	71fb      	strb	r3, [r7, #7]
 800224e:	4b07      	ldr	r3, [pc, #28]	; (800226c <CARME_CAN_Read_Register+0x28>)
 8002250:	681b      	ldr	r3, [r3, #0]
 8002252:	79fa      	ldrb	r2, [r7, #7]
 8002254:	701a      	strb	r2, [r3, #0]
 8002256:	4b06      	ldr	r3, [pc, #24]	; (8002270 <CARME_CAN_Read_Register+0x2c>)
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	781b      	ldrb	r3, [r3, #0]
 800225c:	b2db      	uxtb	r3, r3
 800225e:	4618      	mov	r0, r3
 8002260:	370c      	adds	r7, #12
 8002262:	46bd      	mov	sp, r7
 8002264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002268:	4770      	bx	lr
 800226a:	bf00      	nop
 800226c:	20000064 	.word	0x20000064
 8002270:	20000068 	.word	0x20000068

08002274 <CARME_CAN_Interrupt_Handler>:
 8002274:	b580      	push	{r7, lr}
 8002276:	b082      	sub	sp, #8
 8002278:	af00      	add	r7, sp, #0
 800227a:	2003      	movs	r0, #3
 800227c:	f7ff ffe2 	bl	8002244 <CARME_CAN_Read_Register>
 8002280:	4603      	mov	r3, r0
 8002282:	71fb      	strb	r3, [r7, #7]
 8002284:	79fb      	ldrb	r3, [r7, #7]
 8002286:	f003 0301 	and.w	r3, r3, #1
 800228a:	2b00      	cmp	r3, #0
 800228c:	d007      	beq.n	800229e <CARME_CAN_Interrupt_Handler+0x2a>
 800228e:	4b36      	ldr	r3, [pc, #216]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	2b00      	cmp	r3, #0
 8002294:	d05c      	beq.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 8002296:	4b34      	ldr	r3, [pc, #208]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 8002298:	681b      	ldr	r3, [r3, #0]
 800229a:	4798      	blx	r3
 800229c:	e058      	b.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 800229e:	79fb      	ldrb	r3, [r7, #7]
 80022a0:	f003 0302 	and.w	r3, r3, #2
 80022a4:	2b00      	cmp	r3, #0
 80022a6:	d007      	beq.n	80022b8 <CARME_CAN_Interrupt_Handler+0x44>
 80022a8:	4b2f      	ldr	r3, [pc, #188]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 80022aa:	685b      	ldr	r3, [r3, #4]
 80022ac:	2b00      	cmp	r3, #0
 80022ae:	d04f      	beq.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 80022b0:	4b2d      	ldr	r3, [pc, #180]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 80022b2:	685b      	ldr	r3, [r3, #4]
 80022b4:	4798      	blx	r3
 80022b6:	e04b      	b.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 80022b8:	79fb      	ldrb	r3, [r7, #7]
 80022ba:	f003 0304 	and.w	r3, r3, #4
 80022be:	2b00      	cmp	r3, #0
 80022c0:	d007      	beq.n	80022d2 <CARME_CAN_Interrupt_Handler+0x5e>
 80022c2:	4b29      	ldr	r3, [pc, #164]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 80022c4:	689b      	ldr	r3, [r3, #8]
 80022c6:	2b00      	cmp	r3, #0
 80022c8:	d042      	beq.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 80022ca:	4b27      	ldr	r3, [pc, #156]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 80022cc:	689b      	ldr	r3, [r3, #8]
 80022ce:	4798      	blx	r3
 80022d0:	e03e      	b.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 80022d2:	79fb      	ldrb	r3, [r7, #7]
 80022d4:	f003 0308 	and.w	r3, r3, #8
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d007      	beq.n	80022ec <CARME_CAN_Interrupt_Handler+0x78>
 80022dc:	4b22      	ldr	r3, [pc, #136]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 80022de:	68db      	ldr	r3, [r3, #12]
 80022e0:	2b00      	cmp	r3, #0
 80022e2:	d035      	beq.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 80022e4:	4b20      	ldr	r3, [pc, #128]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 80022e6:	68db      	ldr	r3, [r3, #12]
 80022e8:	4798      	blx	r3
 80022ea:	e031      	b.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 80022ec:	79fb      	ldrb	r3, [r7, #7]
 80022ee:	f003 0310 	and.w	r3, r3, #16
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d007      	beq.n	8002306 <CARME_CAN_Interrupt_Handler+0x92>
 80022f6:	4b1c      	ldr	r3, [pc, #112]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 80022f8:	691b      	ldr	r3, [r3, #16]
 80022fa:	2b00      	cmp	r3, #0
 80022fc:	d028      	beq.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 80022fe:	4b1a      	ldr	r3, [pc, #104]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 8002300:	691b      	ldr	r3, [r3, #16]
 8002302:	4798      	blx	r3
 8002304:	e024      	b.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 8002306:	79fb      	ldrb	r3, [r7, #7]
 8002308:	f003 0320 	and.w	r3, r3, #32
 800230c:	2b00      	cmp	r3, #0
 800230e:	d007      	beq.n	8002320 <CARME_CAN_Interrupt_Handler+0xac>
 8002310:	4b15      	ldr	r3, [pc, #84]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 8002312:	695b      	ldr	r3, [r3, #20]
 8002314:	2b00      	cmp	r3, #0
 8002316:	d01b      	beq.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 8002318:	4b13      	ldr	r3, [pc, #76]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 800231a:	695b      	ldr	r3, [r3, #20]
 800231c:	4798      	blx	r3
 800231e:	e017      	b.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 8002320:	79fb      	ldrb	r3, [r7, #7]
 8002322:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002326:	2b00      	cmp	r3, #0
 8002328:	d007      	beq.n	800233a <CARME_CAN_Interrupt_Handler+0xc6>
 800232a:	4b0f      	ldr	r3, [pc, #60]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 800232c:	699b      	ldr	r3, [r3, #24]
 800232e:	2b00      	cmp	r3, #0
 8002330:	d00e      	beq.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 8002332:	4b0d      	ldr	r3, [pc, #52]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 8002334:	699b      	ldr	r3, [r3, #24]
 8002336:	4798      	blx	r3
 8002338:	e00a      	b.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 800233a:	79fb      	ldrb	r3, [r7, #7]
 800233c:	b25b      	sxtb	r3, r3
 800233e:	2b00      	cmp	r3, #0
 8002340:	da06      	bge.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 8002342:	4b09      	ldr	r3, [pc, #36]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 8002344:	69db      	ldr	r3, [r3, #28]
 8002346:	2b00      	cmp	r3, #0
 8002348:	d002      	beq.n	8002350 <CARME_CAN_Interrupt_Handler+0xdc>
 800234a:	4b07      	ldr	r3, [pc, #28]	; (8002368 <CARME_CAN_Interrupt_Handler+0xf4>)
 800234c:	69db      	ldr	r3, [r3, #28]
 800234e:	4798      	blx	r3
 8002350:	2003      	movs	r0, #3
 8002352:	f7ff ff77 	bl	8002244 <CARME_CAN_Read_Register>
 8002356:	4603      	mov	r3, r0
 8002358:	71fb      	strb	r3, [r7, #7]
 800235a:	79fb      	ldrb	r3, [r7, #7]
 800235c:	2b00      	cmp	r3, #0
 800235e:	d191      	bne.n	8002284 <CARME_CAN_Interrupt_Handler+0x10>
 8002360:	3708      	adds	r7, #8
 8002362:	46bd      	mov	sp, r7
 8002364:	bd80      	pop	{r7, pc}
 8002366:	bf00      	nop
 8002368:	20000874 	.word	0x20000874

0800236c <CARME_Init>:
 800236c:	b580      	push	{r7, lr}
 800236e:	af00      	add	r7, sp, #0
 8002370:	2001      	movs	r0, #1
 8002372:	2101      	movs	r1, #1
 8002374:	f001 fd9a 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 8002378:	2002      	movs	r0, #2
 800237a:	2101      	movs	r1, #1
 800237c:	f001 fd96 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 8002380:	2004      	movs	r0, #4
 8002382:	2101      	movs	r1, #1
 8002384:	f001 fd92 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 8002388:	2008      	movs	r0, #8
 800238a:	2101      	movs	r1, #1
 800238c:	f001 fd8e 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 8002390:	2010      	movs	r0, #16
 8002392:	2101      	movs	r1, #1
 8002394:	f001 fd8a 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 8002398:	2020      	movs	r0, #32
 800239a:	2101      	movs	r1, #1
 800239c:	f001 fd86 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 80023a0:	2040      	movs	r0, #64	; 0x40
 80023a2:	2101      	movs	r1, #1
 80023a4:	f001 fd82 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 80023a8:	2080      	movs	r0, #128	; 0x80
 80023aa:	2101      	movs	r1, #1
 80023ac:	f001 fd7e 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 80023b0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80023b4:	2101      	movs	r1, #1
 80023b6:	f001 fd79 	bl	8003eac <RCC_AHB1PeriphClockCmd>
 80023ba:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80023be:	2101      	movs	r1, #1
 80023c0:	f001 fdce 	bl	8003f60 <RCC_APB2PeriphClockCmd>
 80023c4:	4810      	ldr	r0, [pc, #64]	; (8002408 <CARME_Init+0x9c>)
 80023c6:	f001 f89d 	bl	8003504 <GPIO_DeInit>
 80023ca:	4810      	ldr	r0, [pc, #64]	; (800240c <CARME_Init+0xa0>)
 80023cc:	f001 f89a 	bl	8003504 <GPIO_DeInit>
 80023d0:	480f      	ldr	r0, [pc, #60]	; (8002410 <CARME_Init+0xa4>)
 80023d2:	f001 f897 	bl	8003504 <GPIO_DeInit>
 80023d6:	480f      	ldr	r0, [pc, #60]	; (8002414 <CARME_Init+0xa8>)
 80023d8:	f001 f894 	bl	8003504 <GPIO_DeInit>
 80023dc:	480e      	ldr	r0, [pc, #56]	; (8002418 <CARME_Init+0xac>)
 80023de:	f001 f891 	bl	8003504 <GPIO_DeInit>
 80023e2:	480e      	ldr	r0, [pc, #56]	; (800241c <CARME_Init+0xb0>)
 80023e4:	f001 f88e 	bl	8003504 <GPIO_DeInit>
 80023e8:	480d      	ldr	r0, [pc, #52]	; (8002420 <CARME_Init+0xb4>)
 80023ea:	f001 f88b 	bl	8003504 <GPIO_DeInit>
 80023ee:	480d      	ldr	r0, [pc, #52]	; (8002424 <CARME_Init+0xb8>)
 80023f0:	f001 f888 	bl	8003504 <GPIO_DeInit>
 80023f4:	480c      	ldr	r0, [pc, #48]	; (8002428 <CARME_Init+0xbc>)
 80023f6:	f001 f885 	bl	8003504 <GPIO_DeInit>
 80023fa:	f000 f8f3 	bl	80025e4 <CARME_AGPIO_Init>
 80023fe:	f000 f815 	bl	800242c <CARME_FSMC_GPIO_Init>
 8002402:	f000 f83d 	bl	8002480 <CARME_FSMC_Init>
 8002406:	bd80      	pop	{r7, pc}
 8002408:	40020000 	.word	0x40020000
 800240c:	40020400 	.word	0x40020400
 8002410:	40020800 	.word	0x40020800
 8002414:	40020c00 	.word	0x40020c00
 8002418:	40021000 	.word	0x40021000
 800241c:	40021400 	.word	0x40021400
 8002420:	40021800 	.word	0x40021800
 8002424:	40021c00 	.word	0x40021c00
 8002428:	40022000 	.word	0x40022000

0800242c <CARME_FSMC_GPIO_Init>:
 800242c:	b580      	push	{r7, lr}
 800242e:	b0ec      	sub	sp, #432	; 0x1b0
 8002430:	af00      	add	r7, sp, #0
 8002432:	f107 0208 	add.w	r2, r7, #8
 8002436:	4b11      	ldr	r3, [pc, #68]	; (800247c <CARME_FSMC_GPIO_Init+0x50>)
 8002438:	4611      	mov	r1, r2
 800243a:	461a      	mov	r2, r3
 800243c:	f44f 73d4 	mov.w	r3, #424	; 0x1a8
 8002440:	4608      	mov	r0, r1
 8002442:	4611      	mov	r1, r2
 8002444:	461a      	mov	r2, r3
 8002446:	f7ff fea7 	bl	8002198 <memcpy>
 800244a:	463b      	mov	r3, r7
 800244c:	2202      	movs	r2, #2
 800244e:	715a      	strb	r2, [r3, #5]
 8002450:	463b      	mov	r3, r7
 8002452:	2202      	movs	r2, #2
 8002454:	711a      	strb	r2, [r3, #4]
 8002456:	463b      	mov	r3, r7
 8002458:	2202      	movs	r2, #2
 800245a:	71da      	strb	r2, [r3, #7]
 800245c:	463b      	mov	r3, r7
 800245e:	2200      	movs	r2, #0
 8002460:	719a      	strb	r2, [r3, #6]
 8002462:	f107 0208 	add.w	r2, r7, #8
 8002466:	463b      	mov	r3, r7
 8002468:	4610      	mov	r0, r2
 800246a:	4619      	mov	r1, r3
 800246c:	2235      	movs	r2, #53	; 0x35
 800246e:	f000 f8cb 	bl	8002608 <CARME_GPIO_Init>
 8002472:	f507 77d8 	add.w	r7, r7, #432	; 0x1b0
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}
 800247a:	bf00      	nop
 800247c:	0800491c 	.word	0x0800491c

08002480 <CARME_FSMC_Init>:
 8002480:	b580      	push	{r7, lr}
 8002482:	b096      	sub	sp, #88	; 0x58
 8002484:	af00      	add	r7, sp, #0
 8002486:	2001      	movs	r0, #1
 8002488:	2101      	movs	r1, #1
 800248a:	f001 fd2d 	bl	8003ee8 <RCC_AHB3PeriphClockCmd>
 800248e:	2000      	movs	r0, #0
 8002490:	f000 ff48 	bl	8003324 <FSMC_NORSRAMDeInit>
 8002494:	2002      	movs	r0, #2
 8002496:	f000 ff45 	bl	8003324 <FSMC_NORSRAMDeInit>
 800249a:	2004      	movs	r0, #4
 800249c:	f000 ff42 	bl	8003324 <FSMC_NORSRAMDeInit>
 80024a0:	2006      	movs	r0, #6
 80024a2:	f000 ff3f 	bl	8003324 <FSMC_NORSRAMDeInit>
 80024a6:	463b      	mov	r3, r7
 80024a8:	653b      	str	r3, [r7, #80]	; 0x50
 80024aa:	463b      	mov	r3, r7
 80024ac:	657b      	str	r3, [r7, #84]	; 0x54
 80024ae:	2305      	movs	r3, #5
 80024b0:	603b      	str	r3, [r7, #0]
 80024b2:	2300      	movs	r3, #0
 80024b4:	607b      	str	r3, [r7, #4]
 80024b6:	2309      	movs	r3, #9
 80024b8:	60bb      	str	r3, [r7, #8]
 80024ba:	2300      	movs	r3, #0
 80024bc:	60fb      	str	r3, [r7, #12]
 80024be:	2300      	movs	r3, #0
 80024c0:	613b      	str	r3, [r7, #16]
 80024c2:	2300      	movs	r3, #0
 80024c4:	617b      	str	r3, [r7, #20]
 80024c6:	2300      	movs	r3, #0
 80024c8:	61bb      	str	r3, [r7, #24]
 80024ca:	2302      	movs	r3, #2
 80024cc:	61fb      	str	r3, [r7, #28]
 80024ce:	2300      	movs	r3, #0
 80024d0:	623b      	str	r3, [r7, #32]
 80024d2:	2304      	movs	r3, #4
 80024d4:	627b      	str	r3, [r7, #36]	; 0x24
 80024d6:	2310      	movs	r3, #16
 80024d8:	62bb      	str	r3, [r7, #40]	; 0x28
 80024da:	2300      	movs	r3, #0
 80024dc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80024de:	2300      	movs	r3, #0
 80024e0:	633b      	str	r3, [r7, #48]	; 0x30
 80024e2:	2300      	movs	r3, #0
 80024e4:	637b      	str	r3, [r7, #52]	; 0x34
 80024e6:	2300      	movs	r3, #0
 80024e8:	63bb      	str	r3, [r7, #56]	; 0x38
 80024ea:	2300      	movs	r3, #0
 80024ec:	63fb      	str	r3, [r7, #60]	; 0x3c
 80024ee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80024f2:	643b      	str	r3, [r7, #64]	; 0x40
 80024f4:	2300      	movs	r3, #0
 80024f6:	647b      	str	r3, [r7, #68]	; 0x44
 80024f8:	2300      	movs	r3, #0
 80024fa:	64bb      	str	r3, [r7, #72]	; 0x48
 80024fc:	2300      	movs	r3, #0
 80024fe:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002500:	f107 031c 	add.w	r3, r7, #28
 8002504:	4618      	mov	r0, r3
 8002506:	f000 ff39 	bl	800337c <FSMC_NORSRAMInit>
 800250a:	2002      	movs	r0, #2
 800250c:	2101      	movs	r1, #1
 800250e:	f000 ffcf 	bl	80034b0 <FSMC_NORSRAMCmd>
 8002512:	2305      	movs	r3, #5
 8002514:	603b      	str	r3, [r7, #0]
 8002516:	2300      	movs	r3, #0
 8002518:	607b      	str	r3, [r7, #4]
 800251a:	2309      	movs	r3, #9
 800251c:	60bb      	str	r3, [r7, #8]
 800251e:	2300      	movs	r3, #0
 8002520:	60fb      	str	r3, [r7, #12]
 8002522:	2300      	movs	r3, #0
 8002524:	613b      	str	r3, [r7, #16]
 8002526:	2300      	movs	r3, #0
 8002528:	617b      	str	r3, [r7, #20]
 800252a:	2300      	movs	r3, #0
 800252c:	61bb      	str	r3, [r7, #24]
 800252e:	2304      	movs	r3, #4
 8002530:	61fb      	str	r3, [r7, #28]
 8002532:	2300      	movs	r3, #0
 8002534:	623b      	str	r3, [r7, #32]
 8002536:	2300      	movs	r3, #0
 8002538:	627b      	str	r3, [r7, #36]	; 0x24
 800253a:	2310      	movs	r3, #16
 800253c:	62bb      	str	r3, [r7, #40]	; 0x28
 800253e:	2300      	movs	r3, #0
 8002540:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002542:	2300      	movs	r3, #0
 8002544:	633b      	str	r3, [r7, #48]	; 0x30
 8002546:	2300      	movs	r3, #0
 8002548:	637b      	str	r3, [r7, #52]	; 0x34
 800254a:	2300      	movs	r3, #0
 800254c:	63bb      	str	r3, [r7, #56]	; 0x38
 800254e:	2300      	movs	r3, #0
 8002550:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002552:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002556:	643b      	str	r3, [r7, #64]	; 0x40
 8002558:	2300      	movs	r3, #0
 800255a:	647b      	str	r3, [r7, #68]	; 0x44
 800255c:	2300      	movs	r3, #0
 800255e:	64bb      	str	r3, [r7, #72]	; 0x48
 8002560:	2300      	movs	r3, #0
 8002562:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002564:	f107 031c 	add.w	r3, r7, #28
 8002568:	4618      	mov	r0, r3
 800256a:	f000 ff07 	bl	800337c <FSMC_NORSRAMInit>
 800256e:	2004      	movs	r0, #4
 8002570:	2101      	movs	r1, #1
 8002572:	f000 ff9d 	bl	80034b0 <FSMC_NORSRAMCmd>
 8002576:	2301      	movs	r3, #1
 8002578:	603b      	str	r3, [r7, #0]
 800257a:	2308      	movs	r3, #8
 800257c:	607b      	str	r3, [r7, #4]
 800257e:	230f      	movs	r3, #15
 8002580:	60bb      	str	r3, [r7, #8]
 8002582:	2300      	movs	r3, #0
 8002584:	60fb      	str	r3, [r7, #12]
 8002586:	2300      	movs	r3, #0
 8002588:	613b      	str	r3, [r7, #16]
 800258a:	2305      	movs	r3, #5
 800258c:	617b      	str	r3, [r7, #20]
 800258e:	f04f 5340 	mov.w	r3, #805306368	; 0x30000000
 8002592:	61bb      	str	r3, [r7, #24]
 8002594:	2306      	movs	r3, #6
 8002596:	61fb      	str	r3, [r7, #28]
 8002598:	2300      	movs	r3, #0
 800259a:	623b      	str	r3, [r7, #32]
 800259c:	2300      	movs	r3, #0
 800259e:	627b      	str	r3, [r7, #36]	; 0x24
 80025a0:	2310      	movs	r3, #16
 80025a2:	62bb      	str	r3, [r7, #40]	; 0x28
 80025a4:	2300      	movs	r3, #0
 80025a6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80025a8:	2300      	movs	r3, #0
 80025aa:	633b      	str	r3, [r7, #48]	; 0x30
 80025ac:	2300      	movs	r3, #0
 80025ae:	637b      	str	r3, [r7, #52]	; 0x34
 80025b0:	2300      	movs	r3, #0
 80025b2:	63bb      	str	r3, [r7, #56]	; 0x38
 80025b4:	2300      	movs	r3, #0
 80025b6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80025b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80025bc:	643b      	str	r3, [r7, #64]	; 0x40
 80025be:	2300      	movs	r3, #0
 80025c0:	647b      	str	r3, [r7, #68]	; 0x44
 80025c2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80025c6:	64bb      	str	r3, [r7, #72]	; 0x48
 80025c8:	2300      	movs	r3, #0
 80025ca:	64fb      	str	r3, [r7, #76]	; 0x4c
 80025cc:	f107 031c 	add.w	r3, r7, #28
 80025d0:	4618      	mov	r0, r3
 80025d2:	f000 fed3 	bl	800337c <FSMC_NORSRAMInit>
 80025d6:	2006      	movs	r0, #6
 80025d8:	2101      	movs	r1, #1
 80025da:	f000 ff69 	bl	80034b0 <FSMC_NORSRAMCmd>
 80025de:	3758      	adds	r7, #88	; 0x58
 80025e0:	46bd      	mov	sp, r7
 80025e2:	bd80      	pop	{r7, pc}

080025e4 <CARME_AGPIO_Init>:
 80025e4:	b580      	push	{r7, lr}
 80025e6:	b082      	sub	sp, #8
 80025e8:	af00      	add	r7, sp, #0
 80025ea:	463b      	mov	r3, r7
 80025ec:	4618      	mov	r0, r3
 80025ee:	f001 f8c9 	bl	8003784 <GPIO_StructInit>
 80025f2:	463b      	mov	r3, r7
 80025f4:	4803      	ldr	r0, [pc, #12]	; (8002604 <CARME_AGPIO_Init+0x20>)
 80025f6:	4619      	mov	r1, r3
 80025f8:	2214      	movs	r2, #20
 80025fa:	f000 f805 	bl	8002608 <CARME_GPIO_Init>
 80025fe:	3708      	adds	r7, #8
 8002600:	46bd      	mov	sp, r7
 8002602:	bd80      	pop	{r7, pc}
 8002604:	2000006c 	.word	0x2000006c

08002608 <CARME_GPIO_Init>:
 8002608:	b580      	push	{r7, lr}
 800260a:	b086      	sub	sp, #24
 800260c:	af00      	add	r7, sp, #0
 800260e:	60f8      	str	r0, [r7, #12]
 8002610:	60b9      	str	r1, [r7, #8]
 8002612:	4613      	mov	r3, r2
 8002614:	71fb      	strb	r3, [r7, #7]
 8002616:	2300      	movs	r3, #0
 8002618:	75fb      	strb	r3, [r7, #23]
 800261a:	e0e6      	b.n	80027ea <CARME_GPIO_Init+0x1e2>
 800261c:	7dfb      	ldrb	r3, [r7, #23]
 800261e:	00db      	lsls	r3, r3, #3
 8002620:	68fa      	ldr	r2, [r7, #12]
 8002622:	4413      	add	r3, r2
 8002624:	889b      	ldrh	r3, [r3, #4]
 8002626:	461a      	mov	r2, r3
 8002628:	68bb      	ldr	r3, [r7, #8]
 800262a:	601a      	str	r2, [r3, #0]
 800262c:	7dfb      	ldrb	r3, [r7, #23]
 800262e:	00db      	lsls	r3, r3, #3
 8002630:	68fa      	ldr	r2, [r7, #12]
 8002632:	4413      	add	r3, r2
 8002634:	799a      	ldrb	r2, [r3, #6]
 8002636:	68bb      	ldr	r3, [r7, #8]
 8002638:	711a      	strb	r2, [r3, #4]
 800263a:	7dfb      	ldrb	r3, [r7, #23]
 800263c:	00db      	lsls	r3, r3, #3
 800263e:	68fa      	ldr	r2, [r7, #12]
 8002640:	4413      	add	r3, r2
 8002642:	681b      	ldr	r3, [r3, #0]
 8002644:	4618      	mov	r0, r3
 8002646:	68b9      	ldr	r1, [r7, #8]
 8002648:	f001 f80e 	bl	8003668 <GPIO_Init>
 800264c:	7dfb      	ldrb	r3, [r7, #23]
 800264e:	00db      	lsls	r3, r3, #3
 8002650:	68fa      	ldr	r2, [r7, #12]
 8002652:	4413      	add	r3, r2
 8002654:	799b      	ldrb	r3, [r3, #6]
 8002656:	2b02      	cmp	r3, #2
 8002658:	f040 80c4 	bne.w	80027e4 <CARME_GPIO_Init+0x1dc>
 800265c:	7dfb      	ldrb	r3, [r7, #23]
 800265e:	00db      	lsls	r3, r3, #3
 8002660:	68fa      	ldr	r2, [r7, #12]
 8002662:	4413      	add	r3, r2
 8002664:	6819      	ldr	r1, [r3, #0]
 8002666:	7dfb      	ldrb	r3, [r7, #23]
 8002668:	00db      	lsls	r3, r3, #3
 800266a:	68fa      	ldr	r2, [r7, #12]
 800266c:	4413      	add	r3, r2
 800266e:	889b      	ldrh	r3, [r3, #4]
 8002670:	f003 0301 	and.w	r3, r3, #1
 8002674:	2b00      	cmp	r3, #0
 8002676:	f040 80ab 	bne.w	80027d0 <CARME_GPIO_Init+0x1c8>
 800267a:	7dfb      	ldrb	r3, [r7, #23]
 800267c:	00db      	lsls	r3, r3, #3
 800267e:	68fa      	ldr	r2, [r7, #12]
 8002680:	4413      	add	r3, r2
 8002682:	889b      	ldrh	r3, [r3, #4]
 8002684:	f003 0302 	and.w	r3, r3, #2
 8002688:	2b00      	cmp	r3, #0
 800268a:	f040 809f 	bne.w	80027cc <CARME_GPIO_Init+0x1c4>
 800268e:	7dfb      	ldrb	r3, [r7, #23]
 8002690:	00db      	lsls	r3, r3, #3
 8002692:	68fa      	ldr	r2, [r7, #12]
 8002694:	4413      	add	r3, r2
 8002696:	889b      	ldrh	r3, [r3, #4]
 8002698:	f003 0304 	and.w	r3, r3, #4
 800269c:	2b00      	cmp	r3, #0
 800269e:	f040 8093 	bne.w	80027c8 <CARME_GPIO_Init+0x1c0>
 80026a2:	7dfb      	ldrb	r3, [r7, #23]
 80026a4:	00db      	lsls	r3, r3, #3
 80026a6:	68fa      	ldr	r2, [r7, #12]
 80026a8:	4413      	add	r3, r2
 80026aa:	889b      	ldrh	r3, [r3, #4]
 80026ac:	f003 0308 	and.w	r3, r3, #8
 80026b0:	2b00      	cmp	r3, #0
 80026b2:	f040 8087 	bne.w	80027c4 <CARME_GPIO_Init+0x1bc>
 80026b6:	7dfb      	ldrb	r3, [r7, #23]
 80026b8:	00db      	lsls	r3, r3, #3
 80026ba:	68fa      	ldr	r2, [r7, #12]
 80026bc:	4413      	add	r3, r2
 80026be:	889b      	ldrh	r3, [r3, #4]
 80026c0:	f003 0310 	and.w	r3, r3, #16
 80026c4:	2b00      	cmp	r3, #0
 80026c6:	d17b      	bne.n	80027c0 <CARME_GPIO_Init+0x1b8>
 80026c8:	7dfb      	ldrb	r3, [r7, #23]
 80026ca:	00db      	lsls	r3, r3, #3
 80026cc:	68fa      	ldr	r2, [r7, #12]
 80026ce:	4413      	add	r3, r2
 80026d0:	889b      	ldrh	r3, [r3, #4]
 80026d2:	f003 0320 	and.w	r3, r3, #32
 80026d6:	2b00      	cmp	r3, #0
 80026d8:	d170      	bne.n	80027bc <CARME_GPIO_Init+0x1b4>
 80026da:	7dfb      	ldrb	r3, [r7, #23]
 80026dc:	00db      	lsls	r3, r3, #3
 80026de:	68fa      	ldr	r2, [r7, #12]
 80026e0:	4413      	add	r3, r2
 80026e2:	889b      	ldrh	r3, [r3, #4]
 80026e4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80026e8:	2b00      	cmp	r3, #0
 80026ea:	d165      	bne.n	80027b8 <CARME_GPIO_Init+0x1b0>
 80026ec:	7dfb      	ldrb	r3, [r7, #23]
 80026ee:	00db      	lsls	r3, r3, #3
 80026f0:	68fa      	ldr	r2, [r7, #12]
 80026f2:	4413      	add	r3, r2
 80026f4:	889b      	ldrh	r3, [r3, #4]
 80026f6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80026fa:	2b00      	cmp	r3, #0
 80026fc:	d15a      	bne.n	80027b4 <CARME_GPIO_Init+0x1ac>
 80026fe:	7dfb      	ldrb	r3, [r7, #23]
 8002700:	00db      	lsls	r3, r3, #3
 8002702:	68fa      	ldr	r2, [r7, #12]
 8002704:	4413      	add	r3, r2
 8002706:	889b      	ldrh	r3, [r3, #4]
 8002708:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800270c:	2b00      	cmp	r3, #0
 800270e:	d14f      	bne.n	80027b0 <CARME_GPIO_Init+0x1a8>
 8002710:	7dfb      	ldrb	r3, [r7, #23]
 8002712:	00db      	lsls	r3, r3, #3
 8002714:	68fa      	ldr	r2, [r7, #12]
 8002716:	4413      	add	r3, r2
 8002718:	889b      	ldrh	r3, [r3, #4]
 800271a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800271e:	2b00      	cmp	r3, #0
 8002720:	d144      	bne.n	80027ac <CARME_GPIO_Init+0x1a4>
 8002722:	7dfb      	ldrb	r3, [r7, #23]
 8002724:	00db      	lsls	r3, r3, #3
 8002726:	68fa      	ldr	r2, [r7, #12]
 8002728:	4413      	add	r3, r2
 800272a:	889b      	ldrh	r3, [r3, #4]
 800272c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002730:	2b00      	cmp	r3, #0
 8002732:	d139      	bne.n	80027a8 <CARME_GPIO_Init+0x1a0>
 8002734:	7dfb      	ldrb	r3, [r7, #23]
 8002736:	00db      	lsls	r3, r3, #3
 8002738:	68fa      	ldr	r2, [r7, #12]
 800273a:	4413      	add	r3, r2
 800273c:	889b      	ldrh	r3, [r3, #4]
 800273e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002742:	2b00      	cmp	r3, #0
 8002744:	d12e      	bne.n	80027a4 <CARME_GPIO_Init+0x19c>
 8002746:	7dfb      	ldrb	r3, [r7, #23]
 8002748:	00db      	lsls	r3, r3, #3
 800274a:	68fa      	ldr	r2, [r7, #12]
 800274c:	4413      	add	r3, r2
 800274e:	889b      	ldrh	r3, [r3, #4]
 8002750:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002754:	2b00      	cmp	r3, #0
 8002756:	d123      	bne.n	80027a0 <CARME_GPIO_Init+0x198>
 8002758:	7dfb      	ldrb	r3, [r7, #23]
 800275a:	00db      	lsls	r3, r3, #3
 800275c:	68fa      	ldr	r2, [r7, #12]
 800275e:	4413      	add	r3, r2
 8002760:	889b      	ldrh	r3, [r3, #4]
 8002762:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002766:	2b00      	cmp	r3, #0
 8002768:	d118      	bne.n	800279c <CARME_GPIO_Init+0x194>
 800276a:	7dfb      	ldrb	r3, [r7, #23]
 800276c:	00db      	lsls	r3, r3, #3
 800276e:	68fa      	ldr	r2, [r7, #12]
 8002770:	4413      	add	r3, r2
 8002772:	889b      	ldrh	r3, [r3, #4]
 8002774:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002778:	2b00      	cmp	r3, #0
 800277a:	d10d      	bne.n	8002798 <CARME_GPIO_Init+0x190>
 800277c:	7dfb      	ldrb	r3, [r7, #23]
 800277e:	00db      	lsls	r3, r3, #3
 8002780:	68fa      	ldr	r2, [r7, #12]
 8002782:	4413      	add	r3, r2
 8002784:	889b      	ldrh	r3, [r3, #4]
 8002786:	b29b      	uxth	r3, r3
 8002788:	b21b      	sxth	r3, r3
 800278a:	2b00      	cmp	r3, #0
 800278c:	da01      	bge.n	8002792 <CARME_GPIO_Init+0x18a>
 800278e:	230f      	movs	r3, #15
 8002790:	e01f      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 8002792:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002796:	e01c      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 8002798:	230e      	movs	r3, #14
 800279a:	e01a      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 800279c:	230d      	movs	r3, #13
 800279e:	e018      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027a0:	230c      	movs	r3, #12
 80027a2:	e016      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027a4:	230b      	movs	r3, #11
 80027a6:	e014      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027a8:	230a      	movs	r3, #10
 80027aa:	e012      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027ac:	2309      	movs	r3, #9
 80027ae:	e010      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027b0:	2308      	movs	r3, #8
 80027b2:	e00e      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027b4:	2307      	movs	r3, #7
 80027b6:	e00c      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027b8:	2306      	movs	r3, #6
 80027ba:	e00a      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027bc:	2305      	movs	r3, #5
 80027be:	e008      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027c0:	2304      	movs	r3, #4
 80027c2:	e006      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027c4:	2303      	movs	r3, #3
 80027c6:	e004      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027c8:	2302      	movs	r3, #2
 80027ca:	e002      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027cc:	2301      	movs	r3, #1
 80027ce:	e000      	b.n	80027d2 <CARME_GPIO_Init+0x1ca>
 80027d0:	2300      	movs	r3, #0
 80027d2:	7dfa      	ldrb	r2, [r7, #23]
 80027d4:	00d2      	lsls	r2, r2, #3
 80027d6:	68f8      	ldr	r0, [r7, #12]
 80027d8:	4402      	add	r2, r0
 80027da:	79d2      	ldrb	r2, [r2, #7]
 80027dc:	4608      	mov	r0, r1
 80027de:	4619      	mov	r1, r3
 80027e0:	f001 f802 	bl	80037e8 <GPIO_PinAFConfig>
 80027e4:	7dfb      	ldrb	r3, [r7, #23]
 80027e6:	3301      	adds	r3, #1
 80027e8:	75fb      	strb	r3, [r7, #23]
 80027ea:	7dfa      	ldrb	r2, [r7, #23]
 80027ec:	79fb      	ldrb	r3, [r7, #7]
 80027ee:	429a      	cmp	r2, r3
 80027f0:	f4ff af14 	bcc.w	800261c <CARME_GPIO_Init+0x14>
 80027f4:	3718      	adds	r7, #24
 80027f6:	46bd      	mov	sp, r7
 80027f8:	bd80      	pop	{r7, pc}
 80027fa:	bf00      	nop

080027fc <CARME_I2C_Settings>:
 80027fc:	b580      	push	{r7, lr}
 80027fe:	b084      	sub	sp, #16
 8002800:	af00      	add	r7, sp, #0
 8002802:	6078      	str	r0, [r7, #4]
 8002804:	687a      	ldr	r2, [r7, #4]
 8002806:	4b18      	ldr	r3, [pc, #96]	; (8002868 <CARME_I2C_Settings+0x6c>)
 8002808:	429a      	cmp	r2, r3
 800280a:	d10f      	bne.n	800282c <CARME_I2C_Settings+0x30>
 800280c:	4816      	ldr	r0, [pc, #88]	; (8002868 <CARME_I2C_Settings+0x6c>)
 800280e:	2100      	movs	r1, #0
 8002810:	f001 f94a 	bl	8003aa8 <I2C_Cmd>
 8002814:	4814      	ldr	r0, [pc, #80]	; (8002868 <CARME_I2C_Settings+0x6c>)
 8002816:	f001 f82d 	bl	8003874 <I2C_DeInit>
 800281a:	6878      	ldr	r0, [r7, #4]
 800281c:	4913      	ldr	r1, [pc, #76]	; (800286c <CARME_I2C_Settings+0x70>)
 800281e:	f001 f863 	bl	80038e8 <I2C_Init>
 8002822:	6878      	ldr	r0, [r7, #4]
 8002824:	2101      	movs	r1, #1
 8002826:	f001 f93f 	bl	8003aa8 <I2C_Cmd>
 800282a:	e012      	b.n	8002852 <CARME_I2C_Settings+0x56>
 800282c:	687a      	ldr	r2, [r7, #4]
 800282e:	4b10      	ldr	r3, [pc, #64]	; (8002870 <CARME_I2C_Settings+0x74>)
 8002830:	429a      	cmp	r2, r3
 8002832:	d10e      	bne.n	8002852 <CARME_I2C_Settings+0x56>
 8002834:	480e      	ldr	r0, [pc, #56]	; (8002870 <CARME_I2C_Settings+0x74>)
 8002836:	2100      	movs	r1, #0
 8002838:	f001 f936 	bl	8003aa8 <I2C_Cmd>
 800283c:	480c      	ldr	r0, [pc, #48]	; (8002870 <CARME_I2C_Settings+0x74>)
 800283e:	f001 f819 	bl	8003874 <I2C_DeInit>
 8002842:	6878      	ldr	r0, [r7, #4]
 8002844:	490b      	ldr	r1, [pc, #44]	; (8002874 <CARME_I2C_Settings+0x78>)
 8002846:	f001 f84f 	bl	80038e8 <I2C_Init>
 800284a:	6878      	ldr	r0, [r7, #4]
 800284c:	2101      	movs	r1, #1
 800284e:	f001 f92b 	bl	8003aa8 <I2C_Cmd>
 8002852:	23ff      	movs	r3, #255	; 0xff
 8002854:	73fb      	strb	r3, [r7, #15]
 8002856:	bf00      	nop
 8002858:	7bfb      	ldrb	r3, [r7, #15]
 800285a:	1e5a      	subs	r2, r3, #1
 800285c:	73fa      	strb	r2, [r7, #15]
 800285e:	2b00      	cmp	r3, #0
 8002860:	d1fa      	bne.n	8002858 <CARME_I2C_Settings+0x5c>
 8002862:	3710      	adds	r7, #16
 8002864:	46bd      	mov	sp, r7
 8002866:	bd80      	pop	{r7, pc}
 8002868:	40005800 	.word	0x40005800
 800286c:	20000894 	.word	0x20000894
 8002870:	40005c00 	.word	0x40005c00
 8002874:	200008a4 	.word	0x200008a4

08002878 <CARME_I2C_Timeout>:
 8002878:	b580      	push	{r7, lr}
 800287a:	b082      	sub	sp, #8
 800287c:	af00      	add	r7, sp, #0
 800287e:	6078      	str	r0, [r7, #4]
 8002880:	6878      	ldr	r0, [r7, #4]
 8002882:	2101      	movs	r1, #1
 8002884:	f001 f950 	bl	8003b28 <I2C_GenerateSTOP>
 8002888:	6878      	ldr	r0, [r7, #4]
 800288a:	2101      	movs	r1, #1
 800288c:	f001 f9aa 	bl	8003be4 <I2C_SoftwareResetCmd>
 8002890:	6878      	ldr	r0, [r7, #4]
 8002892:	2100      	movs	r1, #0
 8002894:	f001 f9a6 	bl	8003be4 <I2C_SoftwareResetCmd>
 8002898:	6878      	ldr	r0, [r7, #4]
 800289a:	f7ff ffaf 	bl	80027fc <CARME_I2C_Settings>
 800289e:	2360      	movs	r3, #96	; 0x60
 80028a0:	4618      	mov	r0, r3
 80028a2:	3708      	adds	r7, #8
 80028a4:	46bd      	mov	sp, r7
 80028a6:	bd80      	pop	{r7, pc}

080028a8 <CARME_I2C_Write>:
 80028a8:	b580      	push	{r7, lr}
 80028aa:	b084      	sub	sp, #16
 80028ac:	af00      	add	r7, sp, #0
 80028ae:	6078      	str	r0, [r7, #4]
 80028b0:	70f9      	strb	r1, [r7, #3]
 80028b2:	803a      	strh	r2, [r7, #0]
 80028b4:	70bb      	strb	r3, [r7, #2]
 80028b6:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80028ba:	60fb      	str	r3, [r7, #12]
 80028bc:	e00a      	b.n	80028d4 <CARME_I2C_Write+0x2c>
 80028be:	68fb      	ldr	r3, [r7, #12]
 80028c0:	3b01      	subs	r3, #1
 80028c2:	60fb      	str	r3, [r7, #12]
 80028c4:	68fb      	ldr	r3, [r7, #12]
 80028c6:	2b00      	cmp	r3, #0
 80028c8:	d104      	bne.n	80028d4 <CARME_I2C_Write+0x2c>
 80028ca:	6878      	ldr	r0, [r7, #4]
 80028cc:	f7ff ffd4 	bl	8002878 <CARME_I2C_Timeout>
 80028d0:	4603      	mov	r3, r0
 80028d2:	e0c0      	b.n	8002a56 <CARME_I2C_Write+0x1ae>
 80028d4:	6878      	ldr	r0, [r7, #4]
 80028d6:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 80028da:	f001 f9f3 	bl	8003cc4 <I2C_GetFlagStatus>
 80028de:	4603      	mov	r3, r0
 80028e0:	2b00      	cmp	r3, #0
 80028e2:	d1ec      	bne.n	80028be <CARME_I2C_Write+0x16>
 80028e4:	6878      	ldr	r0, [r7, #4]
 80028e6:	2101      	movs	r1, #1
 80028e8:	f001 f8fe 	bl	8003ae8 <I2C_GenerateSTART>
 80028ec:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80028f0:	60fb      	str	r3, [r7, #12]
 80028f2:	e00a      	b.n	800290a <CARME_I2C_Write+0x62>
 80028f4:	68fb      	ldr	r3, [r7, #12]
 80028f6:	3b01      	subs	r3, #1
 80028f8:	60fb      	str	r3, [r7, #12]
 80028fa:	68fb      	ldr	r3, [r7, #12]
 80028fc:	2b00      	cmp	r3, #0
 80028fe:	d104      	bne.n	800290a <CARME_I2C_Write+0x62>
 8002900:	6878      	ldr	r0, [r7, #4]
 8002902:	f7ff ffb9 	bl	8002878 <CARME_I2C_Timeout>
 8002906:	4603      	mov	r3, r0
 8002908:	e0a5      	b.n	8002a56 <CARME_I2C_Write+0x1ae>
 800290a:	6878      	ldr	r0, [r7, #4]
 800290c:	4954      	ldr	r1, [pc, #336]	; (8002a60 <CARME_I2C_Write+0x1b8>)
 800290e:	f001 f9a9 	bl	8003c64 <I2C_CheckEvent>
 8002912:	4603      	mov	r3, r0
 8002914:	2b00      	cmp	r3, #0
 8002916:	d0ed      	beq.n	80028f4 <CARME_I2C_Write+0x4c>
 8002918:	78fb      	ldrb	r3, [r7, #3]
 800291a:	6878      	ldr	r0, [r7, #4]
 800291c:	4619      	mov	r1, r3
 800291e:	2200      	movs	r2, #0
 8002920:	f001 f922 	bl	8003b68 <I2C_Send7bitAddress>
 8002924:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002928:	60fb      	str	r3, [r7, #12]
 800292a:	e00a      	b.n	8002942 <CARME_I2C_Write+0x9a>
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	3b01      	subs	r3, #1
 8002930:	60fb      	str	r3, [r7, #12]
 8002932:	68fb      	ldr	r3, [r7, #12]
 8002934:	2b00      	cmp	r3, #0
 8002936:	d104      	bne.n	8002942 <CARME_I2C_Write+0x9a>
 8002938:	6878      	ldr	r0, [r7, #4]
 800293a:	f7ff ff9d 	bl	8002878 <CARME_I2C_Timeout>
 800293e:	4603      	mov	r3, r0
 8002940:	e089      	b.n	8002a56 <CARME_I2C_Write+0x1ae>
 8002942:	6878      	ldr	r0, [r7, #4]
 8002944:	4947      	ldr	r1, [pc, #284]	; (8002a64 <CARME_I2C_Write+0x1bc>)
 8002946:	f001 f98d 	bl	8003c64 <I2C_CheckEvent>
 800294a:	4603      	mov	r3, r0
 800294c:	2b00      	cmp	r3, #0
 800294e:	d0ed      	beq.n	800292c <CARME_I2C_Write+0x84>
 8002950:	78bb      	ldrb	r3, [r7, #2]
 8002952:	2b01      	cmp	r3, #1
 8002954:	d138      	bne.n	80029c8 <CARME_I2C_Write+0x120>
 8002956:	883b      	ldrh	r3, [r7, #0]
 8002958:	0a1b      	lsrs	r3, r3, #8
 800295a:	b29b      	uxth	r3, r3
 800295c:	b2db      	uxtb	r3, r3
 800295e:	6878      	ldr	r0, [r7, #4]
 8002960:	4619      	mov	r1, r3
 8002962:	f001 f961 	bl	8003c28 <I2C_SendData>
 8002966:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800296a:	60fb      	str	r3, [r7, #12]
 800296c:	e00a      	b.n	8002984 <CARME_I2C_Write+0xdc>
 800296e:	68fb      	ldr	r3, [r7, #12]
 8002970:	3b01      	subs	r3, #1
 8002972:	60fb      	str	r3, [r7, #12]
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	2b00      	cmp	r3, #0
 8002978:	d104      	bne.n	8002984 <CARME_I2C_Write+0xdc>
 800297a:	6878      	ldr	r0, [r7, #4]
 800297c:	f7ff ff7c 	bl	8002878 <CARME_I2C_Timeout>
 8002980:	4603      	mov	r3, r0
 8002982:	e068      	b.n	8002a56 <CARME_I2C_Write+0x1ae>
 8002984:	6878      	ldr	r0, [r7, #4]
 8002986:	4938      	ldr	r1, [pc, #224]	; (8002a68 <CARME_I2C_Write+0x1c0>)
 8002988:	f001 f96c 	bl	8003c64 <I2C_CheckEvent>
 800298c:	4603      	mov	r3, r0
 800298e:	2b00      	cmp	r3, #0
 8002990:	d0ed      	beq.n	800296e <CARME_I2C_Write+0xc6>
 8002992:	883b      	ldrh	r3, [r7, #0]
 8002994:	b2db      	uxtb	r3, r3
 8002996:	6878      	ldr	r0, [r7, #4]
 8002998:	4619      	mov	r1, r3
 800299a:	f001 f945 	bl	8003c28 <I2C_SendData>
 800299e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80029a2:	60fb      	str	r3, [r7, #12]
 80029a4:	e008      	b.n	80029b8 <CARME_I2C_Write+0x110>
 80029a6:	68fb      	ldr	r3, [r7, #12]
 80029a8:	3b01      	subs	r3, #1
 80029aa:	60fb      	str	r3, [r7, #12]
 80029ac:	68fb      	ldr	r3, [r7, #12]
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d102      	bne.n	80029b8 <CARME_I2C_Write+0x110>
 80029b2:	6878      	ldr	r0, [r7, #4]
 80029b4:	f7ff ff60 	bl	8002878 <CARME_I2C_Timeout>
 80029b8:	6878      	ldr	r0, [r7, #4]
 80029ba:	492c      	ldr	r1, [pc, #176]	; (8002a6c <CARME_I2C_Write+0x1c4>)
 80029bc:	f001 f982 	bl	8003cc4 <I2C_GetFlagStatus>
 80029c0:	4603      	mov	r3, r0
 80029c2:	2b00      	cmp	r3, #0
 80029c4:	d0ef      	beq.n	80029a6 <CARME_I2C_Write+0xfe>
 80029c6:	e01b      	b.n	8002a00 <CARME_I2C_Write+0x158>
 80029c8:	883b      	ldrh	r3, [r7, #0]
 80029ca:	b2db      	uxtb	r3, r3
 80029cc:	6878      	ldr	r0, [r7, #4]
 80029ce:	4619      	mov	r1, r3
 80029d0:	f001 f92a 	bl	8003c28 <I2C_SendData>
 80029d4:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80029d8:	60fb      	str	r3, [r7, #12]
 80029da:	e00a      	b.n	80029f2 <CARME_I2C_Write+0x14a>
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	3b01      	subs	r3, #1
 80029e0:	60fb      	str	r3, [r7, #12]
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	d104      	bne.n	80029f2 <CARME_I2C_Write+0x14a>
 80029e8:	6878      	ldr	r0, [r7, #4]
 80029ea:	f7ff ff45 	bl	8002878 <CARME_I2C_Timeout>
 80029ee:	4603      	mov	r3, r0
 80029f0:	e031      	b.n	8002a56 <CARME_I2C_Write+0x1ae>
 80029f2:	6878      	ldr	r0, [r7, #4]
 80029f4:	491c      	ldr	r1, [pc, #112]	; (8002a68 <CARME_I2C_Write+0x1c0>)
 80029f6:	f001 f935 	bl	8003c64 <I2C_CheckEvent>
 80029fa:	4603      	mov	r3, r0
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	d0ed      	beq.n	80029dc <CARME_I2C_Write+0x134>
 8002a00:	2300      	movs	r3, #0
 8002a02:	817b      	strh	r3, [r7, #10]
 8002a04:	e01e      	b.n	8002a44 <CARME_I2C_Write+0x19c>
 8002a06:	897b      	ldrh	r3, [r7, #10]
 8002a08:	69ba      	ldr	r2, [r7, #24]
 8002a0a:	4413      	add	r3, r2
 8002a0c:	781b      	ldrb	r3, [r3, #0]
 8002a0e:	6878      	ldr	r0, [r7, #4]
 8002a10:	4619      	mov	r1, r3
 8002a12:	f001 f909 	bl	8003c28 <I2C_SendData>
 8002a16:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002a1a:	60fb      	str	r3, [r7, #12]
 8002a1c:	e008      	b.n	8002a30 <CARME_I2C_Write+0x188>
 8002a1e:	68fb      	ldr	r3, [r7, #12]
 8002a20:	3b01      	subs	r3, #1
 8002a22:	60fb      	str	r3, [r7, #12]
 8002a24:	68fb      	ldr	r3, [r7, #12]
 8002a26:	2b00      	cmp	r3, #0
 8002a28:	d102      	bne.n	8002a30 <CARME_I2C_Write+0x188>
 8002a2a:	6878      	ldr	r0, [r7, #4]
 8002a2c:	f7ff ff24 	bl	8002878 <CARME_I2C_Timeout>
 8002a30:	6878      	ldr	r0, [r7, #4]
 8002a32:	490e      	ldr	r1, [pc, #56]	; (8002a6c <CARME_I2C_Write+0x1c4>)
 8002a34:	f001 f946 	bl	8003cc4 <I2C_GetFlagStatus>
 8002a38:	4603      	mov	r3, r0
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d0ef      	beq.n	8002a1e <CARME_I2C_Write+0x176>
 8002a3e:	897b      	ldrh	r3, [r7, #10]
 8002a40:	3301      	adds	r3, #1
 8002a42:	817b      	strh	r3, [r7, #10]
 8002a44:	897a      	ldrh	r2, [r7, #10]
 8002a46:	8bbb      	ldrh	r3, [r7, #28]
 8002a48:	429a      	cmp	r2, r3
 8002a4a:	d3dc      	bcc.n	8002a06 <CARME_I2C_Write+0x15e>
 8002a4c:	6878      	ldr	r0, [r7, #4]
 8002a4e:	2101      	movs	r1, #1
 8002a50:	f001 f86a 	bl	8003b28 <I2C_GenerateSTOP>
 8002a54:	2300      	movs	r3, #0
 8002a56:	4618      	mov	r0, r3
 8002a58:	3710      	adds	r7, #16
 8002a5a:	46bd      	mov	sp, r7
 8002a5c:	bd80      	pop	{r7, pc}
 8002a5e:	bf00      	nop
 8002a60:	00030001 	.word	0x00030001
 8002a64:	00070082 	.word	0x00070082
 8002a68:	00070080 	.word	0x00070080
 8002a6c:	10000004 	.word	0x10000004

08002a70 <CARME_I2C_Read>:
 8002a70:	b590      	push	{r4, r7, lr}
 8002a72:	b085      	sub	sp, #20
 8002a74:	af00      	add	r7, sp, #0
 8002a76:	6078      	str	r0, [r7, #4]
 8002a78:	70f9      	strb	r1, [r7, #3]
 8002a7a:	803a      	strh	r2, [r7, #0]
 8002a7c:	70bb      	strb	r3, [r7, #2]
 8002a7e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002a82:	60fb      	str	r3, [r7, #12]
 8002a84:	e00a      	b.n	8002a9c <CARME_I2C_Read+0x2c>
 8002a86:	68fb      	ldr	r3, [r7, #12]
 8002a88:	3b01      	subs	r3, #1
 8002a8a:	60fb      	str	r3, [r7, #12]
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	d104      	bne.n	8002a9c <CARME_I2C_Read+0x2c>
 8002a92:	6878      	ldr	r0, [r7, #4]
 8002a94:	f7ff fef0 	bl	8002878 <CARME_I2C_Timeout>
 8002a98:	4603      	mov	r3, r0
 8002a9a:	e13c      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002a9c:	6878      	ldr	r0, [r7, #4]
 8002a9e:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8002aa2:	f001 f90f 	bl	8003cc4 <I2C_GetFlagStatus>
 8002aa6:	4603      	mov	r3, r0
 8002aa8:	2b00      	cmp	r3, #0
 8002aaa:	d1ec      	bne.n	8002a86 <CARME_I2C_Read+0x16>
 8002aac:	6878      	ldr	r0, [r7, #4]
 8002aae:	2101      	movs	r1, #1
 8002ab0:	f001 f81a 	bl	8003ae8 <I2C_GenerateSTART>
 8002ab4:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002ab8:	60fb      	str	r3, [r7, #12]
 8002aba:	e00a      	b.n	8002ad2 <CARME_I2C_Read+0x62>
 8002abc:	68fb      	ldr	r3, [r7, #12]
 8002abe:	3b01      	subs	r3, #1
 8002ac0:	60fb      	str	r3, [r7, #12]
 8002ac2:	68fb      	ldr	r3, [r7, #12]
 8002ac4:	2b00      	cmp	r3, #0
 8002ac6:	d104      	bne.n	8002ad2 <CARME_I2C_Read+0x62>
 8002ac8:	6878      	ldr	r0, [r7, #4]
 8002aca:	f7ff fed5 	bl	8002878 <CARME_I2C_Timeout>
 8002ace:	4603      	mov	r3, r0
 8002ad0:	e121      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002ad2:	6878      	ldr	r0, [r7, #4]
 8002ad4:	4992      	ldr	r1, [pc, #584]	; (8002d20 <CARME_I2C_Read+0x2b0>)
 8002ad6:	f001 f8c5 	bl	8003c64 <I2C_CheckEvent>
 8002ada:	4603      	mov	r3, r0
 8002adc:	2b00      	cmp	r3, #0
 8002ade:	d0ed      	beq.n	8002abc <CARME_I2C_Read+0x4c>
 8002ae0:	78fb      	ldrb	r3, [r7, #3]
 8002ae2:	6878      	ldr	r0, [r7, #4]
 8002ae4:	4619      	mov	r1, r3
 8002ae6:	2200      	movs	r2, #0
 8002ae8:	f001 f83e 	bl	8003b68 <I2C_Send7bitAddress>
 8002aec:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002af0:	60fb      	str	r3, [r7, #12]
 8002af2:	e00a      	b.n	8002b0a <CARME_I2C_Read+0x9a>
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	3b01      	subs	r3, #1
 8002af8:	60fb      	str	r3, [r7, #12]
 8002afa:	68fb      	ldr	r3, [r7, #12]
 8002afc:	2b00      	cmp	r3, #0
 8002afe:	d104      	bne.n	8002b0a <CARME_I2C_Read+0x9a>
 8002b00:	6878      	ldr	r0, [r7, #4]
 8002b02:	f7ff feb9 	bl	8002878 <CARME_I2C_Timeout>
 8002b06:	4603      	mov	r3, r0
 8002b08:	e105      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002b0a:	6878      	ldr	r0, [r7, #4]
 8002b0c:	4985      	ldr	r1, [pc, #532]	; (8002d24 <CARME_I2C_Read+0x2b4>)
 8002b0e:	f001 f8a9 	bl	8003c64 <I2C_CheckEvent>
 8002b12:	4603      	mov	r3, r0
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d0ed      	beq.n	8002af4 <CARME_I2C_Read+0x84>
 8002b18:	78bb      	ldrb	r3, [r7, #2]
 8002b1a:	2b01      	cmp	r3, #1
 8002b1c:	d138      	bne.n	8002b90 <CARME_I2C_Read+0x120>
 8002b1e:	883b      	ldrh	r3, [r7, #0]
 8002b20:	0a1b      	lsrs	r3, r3, #8
 8002b22:	b29b      	uxth	r3, r3
 8002b24:	b2db      	uxtb	r3, r3
 8002b26:	6878      	ldr	r0, [r7, #4]
 8002b28:	4619      	mov	r1, r3
 8002b2a:	f001 f87d 	bl	8003c28 <I2C_SendData>
 8002b2e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002b32:	60fb      	str	r3, [r7, #12]
 8002b34:	e00a      	b.n	8002b4c <CARME_I2C_Read+0xdc>
 8002b36:	68fb      	ldr	r3, [r7, #12]
 8002b38:	3b01      	subs	r3, #1
 8002b3a:	60fb      	str	r3, [r7, #12]
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d104      	bne.n	8002b4c <CARME_I2C_Read+0xdc>
 8002b42:	6878      	ldr	r0, [r7, #4]
 8002b44:	f7ff fe98 	bl	8002878 <CARME_I2C_Timeout>
 8002b48:	4603      	mov	r3, r0
 8002b4a:	e0e4      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002b4c:	6878      	ldr	r0, [r7, #4]
 8002b4e:	4976      	ldr	r1, [pc, #472]	; (8002d28 <CARME_I2C_Read+0x2b8>)
 8002b50:	f001 f888 	bl	8003c64 <I2C_CheckEvent>
 8002b54:	4603      	mov	r3, r0
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d0ed      	beq.n	8002b36 <CARME_I2C_Read+0xc6>
 8002b5a:	883b      	ldrh	r3, [r7, #0]
 8002b5c:	b2db      	uxtb	r3, r3
 8002b5e:	6878      	ldr	r0, [r7, #4]
 8002b60:	4619      	mov	r1, r3
 8002b62:	f001 f861 	bl	8003c28 <I2C_SendData>
 8002b66:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002b6a:	60fb      	str	r3, [r7, #12]
 8002b6c:	e008      	b.n	8002b80 <CARME_I2C_Read+0x110>
 8002b6e:	68fb      	ldr	r3, [r7, #12]
 8002b70:	3b01      	subs	r3, #1
 8002b72:	60fb      	str	r3, [r7, #12]
 8002b74:	68fb      	ldr	r3, [r7, #12]
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	d102      	bne.n	8002b80 <CARME_I2C_Read+0x110>
 8002b7a:	6878      	ldr	r0, [r7, #4]
 8002b7c:	f7ff fe7c 	bl	8002878 <CARME_I2C_Timeout>
 8002b80:	6878      	ldr	r0, [r7, #4]
 8002b82:	496a      	ldr	r1, [pc, #424]	; (8002d2c <CARME_I2C_Read+0x2bc>)
 8002b84:	f001 f89e 	bl	8003cc4 <I2C_GetFlagStatus>
 8002b88:	4603      	mov	r3, r0
 8002b8a:	2b00      	cmp	r3, #0
 8002b8c:	d0ef      	beq.n	8002b6e <CARME_I2C_Read+0xfe>
 8002b8e:	e01b      	b.n	8002bc8 <CARME_I2C_Read+0x158>
 8002b90:	883b      	ldrh	r3, [r7, #0]
 8002b92:	b2db      	uxtb	r3, r3
 8002b94:	6878      	ldr	r0, [r7, #4]
 8002b96:	4619      	mov	r1, r3
 8002b98:	f001 f846 	bl	8003c28 <I2C_SendData>
 8002b9c:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002ba0:	60fb      	str	r3, [r7, #12]
 8002ba2:	e00a      	b.n	8002bba <CARME_I2C_Read+0x14a>
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	3b01      	subs	r3, #1
 8002ba8:	60fb      	str	r3, [r7, #12]
 8002baa:	68fb      	ldr	r3, [r7, #12]
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d104      	bne.n	8002bba <CARME_I2C_Read+0x14a>
 8002bb0:	6878      	ldr	r0, [r7, #4]
 8002bb2:	f7ff fe61 	bl	8002878 <CARME_I2C_Timeout>
 8002bb6:	4603      	mov	r3, r0
 8002bb8:	e0ad      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002bba:	6878      	ldr	r0, [r7, #4]
 8002bbc:	495a      	ldr	r1, [pc, #360]	; (8002d28 <CARME_I2C_Read+0x2b8>)
 8002bbe:	f001 f851 	bl	8003c64 <I2C_CheckEvent>
 8002bc2:	4603      	mov	r3, r0
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d0ed      	beq.n	8002ba4 <CARME_I2C_Read+0x134>
 8002bc8:	6878      	ldr	r0, [r7, #4]
 8002bca:	2101      	movs	r1, #1
 8002bcc:	f000 ff8c 	bl	8003ae8 <I2C_GenerateSTART>
 8002bd0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002bd4:	60fb      	str	r3, [r7, #12]
 8002bd6:	e00a      	b.n	8002bee <CARME_I2C_Read+0x17e>
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	3b01      	subs	r3, #1
 8002bdc:	60fb      	str	r3, [r7, #12]
 8002bde:	68fb      	ldr	r3, [r7, #12]
 8002be0:	2b00      	cmp	r3, #0
 8002be2:	d104      	bne.n	8002bee <CARME_I2C_Read+0x17e>
 8002be4:	6878      	ldr	r0, [r7, #4]
 8002be6:	f7ff fe47 	bl	8002878 <CARME_I2C_Timeout>
 8002bea:	4603      	mov	r3, r0
 8002bec:	e093      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002bee:	6878      	ldr	r0, [r7, #4]
 8002bf0:	494b      	ldr	r1, [pc, #300]	; (8002d20 <CARME_I2C_Read+0x2b0>)
 8002bf2:	f001 f837 	bl	8003c64 <I2C_CheckEvent>
 8002bf6:	4603      	mov	r3, r0
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d0ed      	beq.n	8002bd8 <CARME_I2C_Read+0x168>
 8002bfc:	78fb      	ldrb	r3, [r7, #3]
 8002bfe:	6878      	ldr	r0, [r7, #4]
 8002c00:	4619      	mov	r1, r3
 8002c02:	2201      	movs	r2, #1
 8002c04:	f000 ffb0 	bl	8003b68 <I2C_Send7bitAddress>
 8002c08:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002c0c:	60fb      	str	r3, [r7, #12]
 8002c0e:	e00a      	b.n	8002c26 <CARME_I2C_Read+0x1b6>
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	3b01      	subs	r3, #1
 8002c14:	60fb      	str	r3, [r7, #12]
 8002c16:	68fb      	ldr	r3, [r7, #12]
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d104      	bne.n	8002c26 <CARME_I2C_Read+0x1b6>
 8002c1c:	6878      	ldr	r0, [r7, #4]
 8002c1e:	f7ff fe2b 	bl	8002878 <CARME_I2C_Timeout>
 8002c22:	4603      	mov	r3, r0
 8002c24:	e077      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002c26:	6878      	ldr	r0, [r7, #4]
 8002c28:	4941      	ldr	r1, [pc, #260]	; (8002d30 <CARME_I2C_Read+0x2c0>)
 8002c2a:	f001 f84b 	bl	8003cc4 <I2C_GetFlagStatus>
 8002c2e:	4603      	mov	r3, r0
 8002c30:	2b00      	cmp	r3, #0
 8002c32:	d0ed      	beq.n	8002c10 <CARME_I2C_Read+0x1a0>
 8002c34:	2300      	movs	r3, #0
 8002c36:	817b      	strh	r3, [r7, #10]
 8002c38:	e020      	b.n	8002c7c <CARME_I2C_Read+0x20c>
 8002c3a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002c3e:	60fb      	str	r3, [r7, #12]
 8002c40:	e00a      	b.n	8002c58 <CARME_I2C_Read+0x1e8>
 8002c42:	68fb      	ldr	r3, [r7, #12]
 8002c44:	3b01      	subs	r3, #1
 8002c46:	60fb      	str	r3, [r7, #12]
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	d104      	bne.n	8002c58 <CARME_I2C_Read+0x1e8>
 8002c4e:	6878      	ldr	r0, [r7, #4]
 8002c50:	f7ff fe12 	bl	8002878 <CARME_I2C_Timeout>
 8002c54:	4603      	mov	r3, r0
 8002c56:	e05e      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002c58:	6878      	ldr	r0, [r7, #4]
 8002c5a:	4936      	ldr	r1, [pc, #216]	; (8002d34 <CARME_I2C_Read+0x2c4>)
 8002c5c:	f001 f802 	bl	8003c64 <I2C_CheckEvent>
 8002c60:	4603      	mov	r3, r0
 8002c62:	2b00      	cmp	r3, #0
 8002c64:	d0ed      	beq.n	8002c42 <CARME_I2C_Read+0x1d2>
 8002c66:	897b      	ldrh	r3, [r7, #10]
 8002c68:	6a3a      	ldr	r2, [r7, #32]
 8002c6a:	18d4      	adds	r4, r2, r3
 8002c6c:	6878      	ldr	r0, [r7, #4]
 8002c6e:	f000 ffeb 	bl	8003c48 <I2C_ReceiveData>
 8002c72:	4603      	mov	r3, r0
 8002c74:	7023      	strb	r3, [r4, #0]
 8002c76:	897b      	ldrh	r3, [r7, #10]
 8002c78:	3301      	adds	r3, #1
 8002c7a:	817b      	strh	r3, [r7, #10]
 8002c7c:	897a      	ldrh	r2, [r7, #10]
 8002c7e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002c80:	3b01      	subs	r3, #1
 8002c82:	429a      	cmp	r2, r3
 8002c84:	dbd9      	blt.n	8002c3a <CARME_I2C_Read+0x1ca>
 8002c86:	6878      	ldr	r0, [r7, #4]
 8002c88:	2100      	movs	r1, #0
 8002c8a:	f000 ff8b 	bl	8003ba4 <I2C_AcknowledgeConfig>
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	8b1b      	ldrh	r3, [r3, #24]
 8002c92:	6878      	ldr	r0, [r7, #4]
 8002c94:	2101      	movs	r1, #1
 8002c96:	f000 ff47 	bl	8003b28 <I2C_GenerateSTOP>
 8002c9a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002c9e:	60fb      	str	r3, [r7, #12]
 8002ca0:	e00a      	b.n	8002cb8 <CARME_I2C_Read+0x248>
 8002ca2:	68fb      	ldr	r3, [r7, #12]
 8002ca4:	3b01      	subs	r3, #1
 8002ca6:	60fb      	str	r3, [r7, #12]
 8002ca8:	68fb      	ldr	r3, [r7, #12]
 8002caa:	2b00      	cmp	r3, #0
 8002cac:	d104      	bne.n	8002cb8 <CARME_I2C_Read+0x248>
 8002cae:	6878      	ldr	r0, [r7, #4]
 8002cb0:	f7ff fde2 	bl	8002878 <CARME_I2C_Timeout>
 8002cb4:	4603      	mov	r3, r0
 8002cb6:	e02e      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002cb8:	6878      	ldr	r0, [r7, #4]
 8002cba:	491f      	ldr	r1, [pc, #124]	; (8002d38 <CARME_I2C_Read+0x2c8>)
 8002cbc:	f001 f802 	bl	8003cc4 <I2C_GetFlagStatus>
 8002cc0:	4603      	mov	r3, r0
 8002cc2:	2b00      	cmp	r3, #0
 8002cc4:	d0ed      	beq.n	8002ca2 <CARME_I2C_Read+0x232>
 8002cc6:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002cc8:	3b01      	subs	r3, #1
 8002cca:	6a3a      	ldr	r2, [r7, #32]
 8002ccc:	18d4      	adds	r4, r2, r3
 8002cce:	6878      	ldr	r0, [r7, #4]
 8002cd0:	f000 ffba 	bl	8003c48 <I2C_ReceiveData>
 8002cd4:	4603      	mov	r3, r0
 8002cd6:	7023      	strb	r3, [r4, #0]
 8002cd8:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002cdc:	60fb      	str	r3, [r7, #12]
 8002cde:	e00a      	b.n	8002cf6 <CARME_I2C_Read+0x286>
 8002ce0:	68fb      	ldr	r3, [r7, #12]
 8002ce2:	3b01      	subs	r3, #1
 8002ce4:	60fb      	str	r3, [r7, #12]
 8002ce6:	68fb      	ldr	r3, [r7, #12]
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d104      	bne.n	8002cf6 <CARME_I2C_Read+0x286>
 8002cec:	6878      	ldr	r0, [r7, #4]
 8002cee:	f7ff fdc3 	bl	8002878 <CARME_I2C_Timeout>
 8002cf2:	4603      	mov	r3, r0
 8002cf4:	e00f      	b.n	8002d16 <CARME_I2C_Read+0x2a6>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	881b      	ldrh	r3, [r3, #0]
 8002cfa:	b29b      	uxth	r3, r3
 8002cfc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d1ed      	bne.n	8002ce0 <CARME_I2C_Read+0x270>
 8002d04:	6878      	ldr	r0, [r7, #4]
 8002d06:	2101      	movs	r1, #1
 8002d08:	f000 ff4c 	bl	8003ba4 <I2C_AcknowledgeConfig>
 8002d0c:	6878      	ldr	r0, [r7, #4]
 8002d0e:	490b      	ldr	r1, [pc, #44]	; (8002d3c <CARME_I2C_Read+0x2cc>)
 8002d10:	f001 f80c 	bl	8003d2c <I2C_ClearFlag>
 8002d14:	2300      	movs	r3, #0
 8002d16:	4618      	mov	r0, r3
 8002d18:	3714      	adds	r7, #20
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	bd90      	pop	{r4, r7, pc}
 8002d1e:	bf00      	nop
 8002d20:	00030001 	.word	0x00030001
 8002d24:	00070082 	.word	0x00070082
 8002d28:	00070080 	.word	0x00070080
 8002d2c:	10000004 	.word	0x10000004
 8002d30:	10000002 	.word	0x10000002
 8002d34:	00030040 	.word	0x00030040
 8002d38:	10000040 	.word	0x10000040
 8002d3c:	10000400 	.word	0x10000400

08002d40 <SSD1963_WriteCommand>:
 8002d40:	b480      	push	{r7}
 8002d42:	b083      	sub	sp, #12
 8002d44:	af00      	add	r7, sp, #0
 8002d46:	4603      	mov	r3, r0
 8002d48:	80fb      	strh	r3, [r7, #6]
 8002d4a:	f04f 43d0 	mov.w	r3, #1744830464	; 0x68000000
 8002d4e:	88fa      	ldrh	r2, [r7, #6]
 8002d50:	801a      	strh	r2, [r3, #0]
 8002d52:	370c      	adds	r7, #12
 8002d54:	46bd      	mov	sp, r7
 8002d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d5a:	4770      	bx	lr

08002d5c <SSD1963_WriteData>:
 8002d5c:	b480      	push	{r7}
 8002d5e:	b083      	sub	sp, #12
 8002d60:	af00      	add	r7, sp, #0
 8002d62:	4603      	mov	r3, r0
 8002d64:	80fb      	strh	r3, [r7, #6]
 8002d66:	f04f 43d0 	mov.w	r3, #1744830464	; 0x68000000
 8002d6a:	88fa      	ldrh	r2, [r7, #6]
 8002d6c:	805a      	strh	r2, [r3, #2]
 8002d6e:	370c      	adds	r7, #12
 8002d70:	46bd      	mov	sp, r7
 8002d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d76:	4770      	bx	lr

08002d78 <SSD1963_ReadData>:
 8002d78:	b480      	push	{r7}
 8002d7a:	af00      	add	r7, sp, #0
 8002d7c:	f04f 43d0 	mov.w	r3, #1744830464	; 0x68000000
 8002d80:	885b      	ldrh	r3, [r3, #2]
 8002d82:	b29b      	uxth	r3, r3
 8002d84:	4618      	mov	r0, r3
 8002d86:	46bd      	mov	sp, r7
 8002d88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d8c:	4770      	bx	lr
 8002d8e:	bf00      	nop

08002d90 <SSD1963_DisplayOn>:
 8002d90:	b580      	push	{r7, lr}
 8002d92:	af00      	add	r7, sp, #0
 8002d94:	2029      	movs	r0, #41	; 0x29
 8002d96:	f7ff ffd3 	bl	8002d40 <SSD1963_WriteCommand>
 8002d9a:	bd80      	pop	{r7, pc}

08002d9c <SSD1963_Delay>:
 8002d9c:	b480      	push	{r7}
 8002d9e:	b085      	sub	sp, #20
 8002da0:	af00      	add	r7, sp, #0
 8002da2:	6078      	str	r0, [r7, #4]
 8002da4:	2300      	movs	r3, #0
 8002da6:	60fb      	str	r3, [r7, #12]
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	4a08      	ldr	r2, [pc, #32]	; (8002dcc <SSD1963_Delay+0x30>)
 8002dac:	fb02 f303 	mul.w	r3, r2, r3
 8002db0:	60fb      	str	r3, [r7, #12]
 8002db2:	e002      	b.n	8002dba <SSD1963_Delay+0x1e>
 8002db4:	68fb      	ldr	r3, [r7, #12]
 8002db6:	3b01      	subs	r3, #1
 8002db8:	60fb      	str	r3, [r7, #12]
 8002dba:	68fb      	ldr	r3, [r7, #12]
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d1f9      	bne.n	8002db4 <SSD1963_Delay+0x18>
 8002dc0:	3714      	adds	r7, #20
 8002dc2:	46bd      	mov	sp, r7
 8002dc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dc8:	4770      	bx	lr
 8002dca:	bf00      	nop
 8002dcc:	000186a0 	.word	0x000186a0

08002dd0 <SSD1963_Init>:
 8002dd0:	b580      	push	{r7, lr}
 8002dd2:	b082      	sub	sp, #8
 8002dd4:	af02      	add	r7, sp, #8
 8002dd6:	f000 f953 	bl	8003080 <SSD1963_LLD_Init>
 8002dda:	484d      	ldr	r0, [pc, #308]	; (8002f10 <SSD1963_Init+0x140>)
 8002ddc:	f000 f934 	bl	8003048 <SSD1963_GetDeviceDescriptorBlock>
 8002de0:	2001      	movs	r0, #1
 8002de2:	f7ff ffad 	bl	8002d40 <SSD1963_WriteCommand>
 8002de6:	200a      	movs	r0, #10
 8002de8:	f7ff ffd8 	bl	8002d9c <SSD1963_Delay>
 8002dec:	20e2      	movs	r0, #226	; 0xe2
 8002dee:	f7ff ffa7 	bl	8002d40 <SSD1963_WriteCommand>
 8002df2:	202c      	movs	r0, #44	; 0x2c
 8002df4:	f7ff ffb2 	bl	8002d5c <SSD1963_WriteData>
 8002df8:	2002      	movs	r0, #2
 8002dfa:	f7ff ffaf 	bl	8002d5c <SSD1963_WriteData>
 8002dfe:	20a5      	movs	r0, #165	; 0xa5
 8002e00:	f7ff ffac 	bl	8002d5c <SSD1963_WriteData>
 8002e04:	20e0      	movs	r0, #224	; 0xe0
 8002e06:	f7ff ff9b 	bl	8002d40 <SSD1963_WriteCommand>
 8002e0a:	2001      	movs	r0, #1
 8002e0c:	f7ff ffa6 	bl	8002d5c <SSD1963_WriteData>
 8002e10:	200a      	movs	r0, #10
 8002e12:	f7ff ffc3 	bl	8002d9c <SSD1963_Delay>
 8002e16:	20e0      	movs	r0, #224	; 0xe0
 8002e18:	f7ff ff92 	bl	8002d40 <SSD1963_WriteCommand>
 8002e1c:	2003      	movs	r0, #3
 8002e1e:	f7ff ff9d 	bl	8002d5c <SSD1963_WriteData>
 8002e22:	200a      	movs	r0, #10
 8002e24:	f7ff ffba 	bl	8002d9c <SSD1963_Delay>
 8002e28:	20b0      	movs	r0, #176	; 0xb0
 8002e2a:	f7ff ff89 	bl	8002d40 <SSD1963_WriteCommand>
 8002e2e:	200c      	movs	r0, #12
 8002e30:	f7ff ff94 	bl	8002d5c <SSD1963_WriteData>
 8002e34:	2000      	movs	r0, #0
 8002e36:	f7ff ff91 	bl	8002d5c <SSD1963_WriteData>
 8002e3a:	2001      	movs	r0, #1
 8002e3c:	f7ff ff8e 	bl	8002d5c <SSD1963_WriteData>
 8002e40:	203f      	movs	r0, #63	; 0x3f
 8002e42:	f7ff ff8b 	bl	8002d5c <SSD1963_WriteData>
 8002e46:	2000      	movs	r0, #0
 8002e48:	f7ff ff88 	bl	8002d5c <SSD1963_WriteData>
 8002e4c:	20ef      	movs	r0, #239	; 0xef
 8002e4e:	f7ff ff85 	bl	8002d5c <SSD1963_WriteData>
 8002e52:	2000      	movs	r0, #0
 8002e54:	f7ff ff82 	bl	8002d5c <SSD1963_WriteData>
 8002e58:	20f0      	movs	r0, #240	; 0xf0
 8002e5a:	f7ff ff71 	bl	8002d40 <SSD1963_WriteCommand>
 8002e5e:	2003      	movs	r0, #3
 8002e60:	f7ff ff7c 	bl	8002d5c <SSD1963_WriteData>
 8002e64:	20e6      	movs	r0, #230	; 0xe6
 8002e66:	f7ff ff6b 	bl	8002d40 <SSD1963_WriteCommand>
 8002e6a:	2000      	movs	r0, #0
 8002e6c:	f7ff ff76 	bl	8002d5c <SSD1963_WriteData>
 8002e70:	20dc      	movs	r0, #220	; 0xdc
 8002e72:	f7ff ff73 	bl	8002d5c <SSD1963_WriteData>
 8002e76:	2098      	movs	r0, #152	; 0x98
 8002e78:	f7ff ff70 	bl	8002d5c <SSD1963_WriteData>
 8002e7c:	20b4      	movs	r0, #180	; 0xb4
 8002e7e:	f7ff ff5f 	bl	8002d40 <SSD1963_WriteCommand>
 8002e82:	2001      	movs	r0, #1
 8002e84:	f7ff ff6a 	bl	8002d5c <SSD1963_WriteData>
 8002e88:	2098      	movs	r0, #152	; 0x98
 8002e8a:	f7ff ff67 	bl	8002d5c <SSD1963_WriteData>
 8002e8e:	2000      	movs	r0, #0
 8002e90:	f7ff ff64 	bl	8002d5c <SSD1963_WriteData>
 8002e94:	2044      	movs	r0, #68	; 0x44
 8002e96:	f7ff ff61 	bl	8002d5c <SSD1963_WriteData>
 8002e9a:	201c      	movs	r0, #28
 8002e9c:	f7ff ff5e 	bl	8002d5c <SSD1963_WriteData>
 8002ea0:	2000      	movs	r0, #0
 8002ea2:	f7ff ff5b 	bl	8002d5c <SSD1963_WriteData>
 8002ea6:	2000      	movs	r0, #0
 8002ea8:	f7ff ff58 	bl	8002d5c <SSD1963_WriteData>
 8002eac:	2000      	movs	r0, #0
 8002eae:	f7ff ff55 	bl	8002d5c <SSD1963_WriteData>
 8002eb2:	20b6      	movs	r0, #182	; 0xb6
 8002eb4:	f7ff ff44 	bl	8002d40 <SSD1963_WriteCommand>
 8002eb8:	2001      	movs	r0, #1
 8002eba:	f7ff ff4f 	bl	8002d5c <SSD1963_WriteData>
 8002ebe:	2008      	movs	r0, #8
 8002ec0:	f7ff ff4c 	bl	8002d5c <SSD1963_WriteData>
 8002ec4:	2000      	movs	r0, #0
 8002ec6:	f7ff ff49 	bl	8002d5c <SSD1963_WriteData>
 8002eca:	2014      	movs	r0, #20
 8002ecc:	f7ff ff46 	bl	8002d5c <SSD1963_WriteData>
 8002ed0:	2003      	movs	r0, #3
 8002ed2:	f7ff ff43 	bl	8002d5c <SSD1963_WriteData>
 8002ed6:	2000      	movs	r0, #0
 8002ed8:	f7ff ff40 	bl	8002d5c <SSD1963_WriteData>
 8002edc:	2000      	movs	r0, #0
 8002ede:	f7ff ff3d 	bl	8002d5c <SSD1963_WriteData>
 8002ee2:	20b8      	movs	r0, #184	; 0xb8
 8002ee4:	f7ff ff2c 	bl	8002d40 <SSD1963_WriteCommand>
 8002ee8:	200f      	movs	r0, #15
 8002eea:	f7ff ff37 	bl	8002d5c <SSD1963_WriteData>
 8002eee:	2001      	movs	r0, #1
 8002ef0:	f7ff ff34 	bl	8002d5c <SSD1963_WriteData>
 8002ef4:	2300      	movs	r3, #0
 8002ef6:	9300      	str	r3, [sp, #0]
 8002ef8:	2000      	movs	r0, #0
 8002efa:	2100      	movs	r1, #0
 8002efc:	f240 123f 	movw	r2, #319	; 0x13f
 8002f00:	23ef      	movs	r3, #239	; 0xef
 8002f02:	f000 f847 	bl	8002f94 <SSD1963_FillArea>
 8002f06:	f7ff ff43 	bl	8002d90 <SSD1963_DisplayOn>
 8002f0a:	46bd      	mov	sp, r7
 8002f0c:	bd80      	pop	{r7, pc}
 8002f0e:	bf00      	nop
 8002f10:	200008b4 	.word	0x200008b4

08002f14 <SSD1963_SetArea>:
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b082      	sub	sp, #8
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	80f8      	strh	r0, [r7, #6]
 8002f1c:	80b9      	strh	r1, [r7, #4]
 8002f1e:	807a      	strh	r2, [r7, #2]
 8002f20:	803b      	strh	r3, [r7, #0]
 8002f22:	202a      	movs	r0, #42	; 0x2a
 8002f24:	f7ff ff0c 	bl	8002d40 <SSD1963_WriteCommand>
 8002f28:	88fb      	ldrh	r3, [r7, #6]
 8002f2a:	0a1b      	lsrs	r3, r3, #8
 8002f2c:	b29b      	uxth	r3, r3
 8002f2e:	4618      	mov	r0, r3
 8002f30:	f7ff ff14 	bl	8002d5c <SSD1963_WriteData>
 8002f34:	88fb      	ldrh	r3, [r7, #6]
 8002f36:	b2db      	uxtb	r3, r3
 8002f38:	b29b      	uxth	r3, r3
 8002f3a:	4618      	mov	r0, r3
 8002f3c:	f7ff ff0e 	bl	8002d5c <SSD1963_WriteData>
 8002f40:	887b      	ldrh	r3, [r7, #2]
 8002f42:	0a1b      	lsrs	r3, r3, #8
 8002f44:	b29b      	uxth	r3, r3
 8002f46:	4618      	mov	r0, r3
 8002f48:	f7ff ff08 	bl	8002d5c <SSD1963_WriteData>
 8002f4c:	887b      	ldrh	r3, [r7, #2]
 8002f4e:	b2db      	uxtb	r3, r3
 8002f50:	b29b      	uxth	r3, r3
 8002f52:	4618      	mov	r0, r3
 8002f54:	f7ff ff02 	bl	8002d5c <SSD1963_WriteData>
 8002f58:	202b      	movs	r0, #43	; 0x2b
 8002f5a:	f7ff fef1 	bl	8002d40 <SSD1963_WriteCommand>
 8002f5e:	88bb      	ldrh	r3, [r7, #4]
 8002f60:	0a1b      	lsrs	r3, r3, #8
 8002f62:	b29b      	uxth	r3, r3
 8002f64:	4618      	mov	r0, r3
 8002f66:	f7ff fef9 	bl	8002d5c <SSD1963_WriteData>
 8002f6a:	88bb      	ldrh	r3, [r7, #4]
 8002f6c:	b2db      	uxtb	r3, r3
 8002f6e:	b29b      	uxth	r3, r3
 8002f70:	4618      	mov	r0, r3
 8002f72:	f7ff fef3 	bl	8002d5c <SSD1963_WriteData>
 8002f76:	883b      	ldrh	r3, [r7, #0]
 8002f78:	0a1b      	lsrs	r3, r3, #8
 8002f7a:	b29b      	uxth	r3, r3
 8002f7c:	4618      	mov	r0, r3
 8002f7e:	f7ff feed 	bl	8002d5c <SSD1963_WriteData>
 8002f82:	883b      	ldrh	r3, [r7, #0]
 8002f84:	b2db      	uxtb	r3, r3
 8002f86:	b29b      	uxth	r3, r3
 8002f88:	4618      	mov	r0, r3
 8002f8a:	f7ff fee7 	bl	8002d5c <SSD1963_WriteData>
 8002f8e:	3708      	adds	r7, #8
 8002f90:	46bd      	mov	sp, r7
 8002f92:	bd80      	pop	{r7, pc}

08002f94 <SSD1963_FillArea>:
 8002f94:	b580      	push	{r7, lr}
 8002f96:	b084      	sub	sp, #16
 8002f98:	af00      	add	r7, sp, #0
 8002f9a:	80f8      	strh	r0, [r7, #6]
 8002f9c:	80b9      	strh	r1, [r7, #4]
 8002f9e:	807a      	strh	r2, [r7, #2]
 8002fa0:	803b      	strh	r3, [r7, #0]
 8002fa2:	88f8      	ldrh	r0, [r7, #6]
 8002fa4:	88b9      	ldrh	r1, [r7, #4]
 8002fa6:	887a      	ldrh	r2, [r7, #2]
 8002fa8:	883b      	ldrh	r3, [r7, #0]
 8002faa:	f7ff ffb3 	bl	8002f14 <SSD1963_SetArea>
 8002fae:	202c      	movs	r0, #44	; 0x2c
 8002fb0:	f7ff fec6 	bl	8002d40 <SSD1963_WriteCommand>
 8002fb4:	2300      	movs	r3, #0
 8002fb6:	60fb      	str	r3, [r7, #12]
 8002fb8:	e006      	b.n	8002fc8 <SSD1963_FillArea+0x34>
 8002fba:	8b3b      	ldrh	r3, [r7, #24]
 8002fbc:	4618      	mov	r0, r3
 8002fbe:	f7ff fecd 	bl	8002d5c <SSD1963_WriteData>
 8002fc2:	68fb      	ldr	r3, [r7, #12]
 8002fc4:	3301      	adds	r3, #1
 8002fc6:	60fb      	str	r3, [r7, #12]
 8002fc8:	887a      	ldrh	r2, [r7, #2]
 8002fca:	88fb      	ldrh	r3, [r7, #6]
 8002fcc:	1ad3      	subs	r3, r2, r3
 8002fce:	3301      	adds	r3, #1
 8002fd0:	8839      	ldrh	r1, [r7, #0]
 8002fd2:	88ba      	ldrh	r2, [r7, #4]
 8002fd4:	1a8a      	subs	r2, r1, r2
 8002fd6:	3201      	adds	r2, #1
 8002fd8:	fb02 f303 	mul.w	r3, r2, r3
 8002fdc:	461a      	mov	r2, r3
 8002fde:	68fb      	ldr	r3, [r7, #12]
 8002fe0:	429a      	cmp	r2, r3
 8002fe2:	d8ea      	bhi.n	8002fba <SSD1963_FillArea+0x26>
 8002fe4:	3710      	adds	r7, #16
 8002fe6:	46bd      	mov	sp, r7
 8002fe8:	bd80      	pop	{r7, pc}
 8002fea:	bf00      	nop

08002fec <SSD1963_WriteArea>:
 8002fec:	b580      	push	{r7, lr}
 8002fee:	b084      	sub	sp, #16
 8002ff0:	af00      	add	r7, sp, #0
 8002ff2:	80f8      	strh	r0, [r7, #6]
 8002ff4:	80b9      	strh	r1, [r7, #4]
 8002ff6:	807a      	strh	r2, [r7, #2]
 8002ff8:	803b      	strh	r3, [r7, #0]
 8002ffa:	88f8      	ldrh	r0, [r7, #6]
 8002ffc:	88b9      	ldrh	r1, [r7, #4]
 8002ffe:	887a      	ldrh	r2, [r7, #2]
 8003000:	883b      	ldrh	r3, [r7, #0]
 8003002:	f7ff ff87 	bl	8002f14 <SSD1963_SetArea>
 8003006:	202c      	movs	r0, #44	; 0x2c
 8003008:	f7ff fe9a 	bl	8002d40 <SSD1963_WriteCommand>
 800300c:	2300      	movs	r3, #0
 800300e:	60fb      	str	r3, [r7, #12]
 8003010:	e009      	b.n	8003026 <SSD1963_WriteArea+0x3a>
 8003012:	69bb      	ldr	r3, [r7, #24]
 8003014:	1c9a      	adds	r2, r3, #2
 8003016:	61ba      	str	r2, [r7, #24]
 8003018:	881b      	ldrh	r3, [r3, #0]
 800301a:	4618      	mov	r0, r3
 800301c:	f7ff fe9e 	bl	8002d5c <SSD1963_WriteData>
 8003020:	68fb      	ldr	r3, [r7, #12]
 8003022:	3301      	adds	r3, #1
 8003024:	60fb      	str	r3, [r7, #12]
 8003026:	887a      	ldrh	r2, [r7, #2]
 8003028:	88fb      	ldrh	r3, [r7, #6]
 800302a:	1ad3      	subs	r3, r2, r3
 800302c:	3301      	adds	r3, #1
 800302e:	8839      	ldrh	r1, [r7, #0]
 8003030:	88ba      	ldrh	r2, [r7, #4]
 8003032:	1a8a      	subs	r2, r1, r2
 8003034:	3201      	adds	r2, #1
 8003036:	fb02 f303 	mul.w	r3, r2, r3
 800303a:	461a      	mov	r2, r3
 800303c:	68fb      	ldr	r3, [r7, #12]
 800303e:	429a      	cmp	r2, r3
 8003040:	d8e7      	bhi.n	8003012 <SSD1963_WriteArea+0x26>
 8003042:	3710      	adds	r7, #16
 8003044:	46bd      	mov	sp, r7
 8003046:	bd80      	pop	{r7, pc}

08003048 <SSD1963_GetDeviceDescriptorBlock>:
 8003048:	b590      	push	{r4, r7, lr}
 800304a:	b083      	sub	sp, #12
 800304c:	af00      	add	r7, sp, #0
 800304e:	6078      	str	r0, [r7, #4]
 8003050:	20a1      	movs	r0, #161	; 0xa1
 8003052:	f7ff fe75 	bl	8002d40 <SSD1963_WriteCommand>
 8003056:	f7ff fe8f 	bl	8002d78 <SSD1963_ReadData>
 800305a:	4603      	mov	r3, r0
 800305c:	461a      	mov	r2, r3
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	801a      	strh	r2, [r3, #0]
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	1c9c      	adds	r4, r3, #2
 8003066:	f7ff fe87 	bl	8002d78 <SSD1963_ReadData>
 800306a:	4603      	mov	r3, r0
 800306c:	8023      	strh	r3, [r4, #0]
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	1d1c      	adds	r4, r3, #4
 8003072:	f7ff fe81 	bl	8002d78 <SSD1963_ReadData>
 8003076:	4603      	mov	r3, r0
 8003078:	8023      	strh	r3, [r4, #0]
 800307a:	370c      	adds	r7, #12
 800307c:	46bd      	mov	sp, r7
 800307e:	bd90      	pop	{r4, r7, pc}

08003080 <SSD1963_LLD_Init>:
 8003080:	b580      	push	{r7, lr}
 8003082:	b082      	sub	sp, #8
 8003084:	af00      	add	r7, sp, #0
 8003086:	2302      	movs	r3, #2
 8003088:	717b      	strb	r3, [r7, #5]
 800308a:	2302      	movs	r3, #2
 800308c:	713b      	strb	r3, [r7, #4]
 800308e:	2300      	movs	r3, #0
 8003090:	71fb      	strb	r3, [r7, #7]
 8003092:	2300      	movs	r3, #0
 8003094:	71bb      	strb	r3, [r7, #6]
 8003096:	463b      	mov	r3, r7
 8003098:	4806      	ldr	r0, [pc, #24]	; (80030b4 <SSD1963_LLD_Init+0x34>)
 800309a:	4619      	mov	r1, r3
 800309c:	2202      	movs	r2, #2
 800309e:	f7ff fab3 	bl	8002608 <CARME_GPIO_Init>
 80030a2:	4805      	ldr	r0, [pc, #20]	; (80030b8 <SSD1963_LLD_Init+0x38>)
 80030a4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80030a8:	2201      	movs	r2, #1
 80030aa:	f000 fb85 	bl	80037b8 <GPIO_WriteBit>
 80030ae:	3708      	adds	r7, #8
 80030b0:	46bd      	mov	sp, r7
 80030b2:	bd80      	pop	{r7, pc}
 80030b4:	2000010c 	.word	0x2000010c
 80030b8:	40021c00 	.word	0x40021c00

080030bc <SystemInit>:
 80030bc:	b580      	push	{r7, lr}
 80030be:	af00      	add	r7, sp, #0
 80030c0:	4b15      	ldr	r3, [pc, #84]	; (8003118 <SystemInit+0x5c>)
 80030c2:	4a15      	ldr	r2, [pc, #84]	; (8003118 <SystemInit+0x5c>)
 80030c4:	f8d2 2088 	ldr.w	r2, [r2, #136]	; 0x88
 80030c8:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80030cc:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80030d0:	4b12      	ldr	r3, [pc, #72]	; (800311c <SystemInit+0x60>)
 80030d2:	4a12      	ldr	r2, [pc, #72]	; (800311c <SystemInit+0x60>)
 80030d4:	6812      	ldr	r2, [r2, #0]
 80030d6:	f042 0201 	orr.w	r2, r2, #1
 80030da:	601a      	str	r2, [r3, #0]
 80030dc:	4b0f      	ldr	r3, [pc, #60]	; (800311c <SystemInit+0x60>)
 80030de:	2200      	movs	r2, #0
 80030e0:	609a      	str	r2, [r3, #8]
 80030e2:	4a0e      	ldr	r2, [pc, #56]	; (800311c <SystemInit+0x60>)
 80030e4:	4b0d      	ldr	r3, [pc, #52]	; (800311c <SystemInit+0x60>)
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80030ec:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80030f0:	6013      	str	r3, [r2, #0]
 80030f2:	4b0a      	ldr	r3, [pc, #40]	; (800311c <SystemInit+0x60>)
 80030f4:	4a0a      	ldr	r2, [pc, #40]	; (8003120 <SystemInit+0x64>)
 80030f6:	605a      	str	r2, [r3, #4]
 80030f8:	4b08      	ldr	r3, [pc, #32]	; (800311c <SystemInit+0x60>)
 80030fa:	4a08      	ldr	r2, [pc, #32]	; (800311c <SystemInit+0x60>)
 80030fc:	6812      	ldr	r2, [r2, #0]
 80030fe:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003102:	601a      	str	r2, [r3, #0]
 8003104:	4b05      	ldr	r3, [pc, #20]	; (800311c <SystemInit+0x60>)
 8003106:	2200      	movs	r2, #0
 8003108:	60da      	str	r2, [r3, #12]
 800310a:	f000 f80b 	bl	8003124 <SetSysClock>
 800310e:	4b02      	ldr	r3, [pc, #8]	; (8003118 <SystemInit+0x5c>)
 8003110:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003114:	609a      	str	r2, [r3, #8]
 8003116:	bd80      	pop	{r7, pc}
 8003118:	e000ed00 	.word	0xe000ed00
 800311c:	40023800 	.word	0x40023800
 8003120:	24003010 	.word	0x24003010

08003124 <SetSysClock>:
 8003124:	b480      	push	{r7}
 8003126:	b083      	sub	sp, #12
 8003128:	af00      	add	r7, sp, #0
 800312a:	2300      	movs	r3, #0
 800312c:	607b      	str	r3, [r7, #4]
 800312e:	2300      	movs	r3, #0
 8003130:	603b      	str	r3, [r7, #0]
 8003132:	4b35      	ldr	r3, [pc, #212]	; (8003208 <SetSysClock+0xe4>)
 8003134:	4a34      	ldr	r2, [pc, #208]	; (8003208 <SetSysClock+0xe4>)
 8003136:	6812      	ldr	r2, [r2, #0]
 8003138:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800313c:	601a      	str	r2, [r3, #0]
 800313e:	4b32      	ldr	r3, [pc, #200]	; (8003208 <SetSysClock+0xe4>)
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003146:	603b      	str	r3, [r7, #0]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	3301      	adds	r3, #1
 800314c:	607b      	str	r3, [r7, #4]
 800314e:	683b      	ldr	r3, [r7, #0]
 8003150:	2b00      	cmp	r3, #0
 8003152:	d103      	bne.n	800315c <SetSysClock+0x38>
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	f5b3 4fa0 	cmp.w	r3, #20480	; 0x5000
 800315a:	d1f0      	bne.n	800313e <SetSysClock+0x1a>
 800315c:	4b2a      	ldr	r3, [pc, #168]	; (8003208 <SetSysClock+0xe4>)
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003164:	2b00      	cmp	r3, #0
 8003166:	d002      	beq.n	800316e <SetSysClock+0x4a>
 8003168:	2301      	movs	r3, #1
 800316a:	603b      	str	r3, [r7, #0]
 800316c:	e001      	b.n	8003172 <SetSysClock+0x4e>
 800316e:	2300      	movs	r3, #0
 8003170:	603b      	str	r3, [r7, #0]
 8003172:	683b      	ldr	r3, [r7, #0]
 8003174:	2b01      	cmp	r3, #1
 8003176:	d142      	bne.n	80031fe <SetSysClock+0xda>
 8003178:	4b23      	ldr	r3, [pc, #140]	; (8003208 <SetSysClock+0xe4>)
 800317a:	4a23      	ldr	r2, [pc, #140]	; (8003208 <SetSysClock+0xe4>)
 800317c:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800317e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003182:	641a      	str	r2, [r3, #64]	; 0x40
 8003184:	4b21      	ldr	r3, [pc, #132]	; (800320c <SetSysClock+0xe8>)
 8003186:	4a21      	ldr	r2, [pc, #132]	; (800320c <SetSysClock+0xe8>)
 8003188:	6812      	ldr	r2, [r2, #0]
 800318a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800318e:	601a      	str	r2, [r3, #0]
 8003190:	4b1d      	ldr	r3, [pc, #116]	; (8003208 <SetSysClock+0xe4>)
 8003192:	4a1d      	ldr	r2, [pc, #116]	; (8003208 <SetSysClock+0xe4>)
 8003194:	6892      	ldr	r2, [r2, #8]
 8003196:	609a      	str	r2, [r3, #8]
 8003198:	4b1b      	ldr	r3, [pc, #108]	; (8003208 <SetSysClock+0xe4>)
 800319a:	4a1b      	ldr	r2, [pc, #108]	; (8003208 <SetSysClock+0xe4>)
 800319c:	6892      	ldr	r2, [r2, #8]
 800319e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80031a2:	609a      	str	r2, [r3, #8]
 80031a4:	4b18      	ldr	r3, [pc, #96]	; (8003208 <SetSysClock+0xe4>)
 80031a6:	4a18      	ldr	r2, [pc, #96]	; (8003208 <SetSysClock+0xe4>)
 80031a8:	6892      	ldr	r2, [r2, #8]
 80031aa:	f442 52a0 	orr.w	r2, r2, #5120	; 0x1400
 80031ae:	609a      	str	r2, [r3, #8]
 80031b0:	4b15      	ldr	r3, [pc, #84]	; (8003208 <SetSysClock+0xe4>)
 80031b2:	4a17      	ldr	r2, [pc, #92]	; (8003210 <SetSysClock+0xec>)
 80031b4:	605a      	str	r2, [r3, #4]
 80031b6:	4b14      	ldr	r3, [pc, #80]	; (8003208 <SetSysClock+0xe4>)
 80031b8:	4a13      	ldr	r2, [pc, #76]	; (8003208 <SetSysClock+0xe4>)
 80031ba:	6812      	ldr	r2, [r2, #0]
 80031bc:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80031c0:	601a      	str	r2, [r3, #0]
 80031c2:	bf00      	nop
 80031c4:	4b10      	ldr	r3, [pc, #64]	; (8003208 <SetSysClock+0xe4>)
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	d0f9      	beq.n	80031c4 <SetSysClock+0xa0>
 80031d0:	4b10      	ldr	r3, [pc, #64]	; (8003214 <SetSysClock+0xf0>)
 80031d2:	f240 7205 	movw	r2, #1797	; 0x705
 80031d6:	601a      	str	r2, [r3, #0]
 80031d8:	4b0b      	ldr	r3, [pc, #44]	; (8003208 <SetSysClock+0xe4>)
 80031da:	4a0b      	ldr	r2, [pc, #44]	; (8003208 <SetSysClock+0xe4>)
 80031dc:	6892      	ldr	r2, [r2, #8]
 80031de:	f022 0203 	bic.w	r2, r2, #3
 80031e2:	609a      	str	r2, [r3, #8]
 80031e4:	4b08      	ldr	r3, [pc, #32]	; (8003208 <SetSysClock+0xe4>)
 80031e6:	4a08      	ldr	r2, [pc, #32]	; (8003208 <SetSysClock+0xe4>)
 80031e8:	6892      	ldr	r2, [r2, #8]
 80031ea:	f042 0202 	orr.w	r2, r2, #2
 80031ee:	609a      	str	r2, [r3, #8]
 80031f0:	bf00      	nop
 80031f2:	4b05      	ldr	r3, [pc, #20]	; (8003208 <SetSysClock+0xe4>)
 80031f4:	689b      	ldr	r3, [r3, #8]
 80031f6:	f003 030c 	and.w	r3, r3, #12
 80031fa:	2b08      	cmp	r3, #8
 80031fc:	d1f9      	bne.n	80031f2 <SetSysClock+0xce>
 80031fe:	370c      	adds	r7, #12
 8003200:	46bd      	mov	sp, r7
 8003202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003206:	4770      	bx	lr
 8003208:	40023800 	.word	0x40023800
 800320c:	40007000 	.word	0x40007000
 8003210:	07405419 	.word	0x07405419
 8003214:	40023c00 	.word	0x40023c00

08003218 <NVIC_Init>:
 8003218:	b480      	push	{r7}
 800321a:	b085      	sub	sp, #20
 800321c:	af00      	add	r7, sp, #0
 800321e:	6078      	str	r0, [r7, #4]
 8003220:	2300      	movs	r3, #0
 8003222:	73fb      	strb	r3, [r7, #15]
 8003224:	2300      	movs	r3, #0
 8003226:	73bb      	strb	r3, [r7, #14]
 8003228:	230f      	movs	r3, #15
 800322a:	737b      	strb	r3, [r7, #13]
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	78db      	ldrb	r3, [r3, #3]
 8003230:	2b00      	cmp	r3, #0
 8003232:	d037      	beq.n	80032a4 <NVIC_Init+0x8c>
 8003234:	4b25      	ldr	r3, [pc, #148]	; (80032cc <NVIC_Init+0xb4>)
 8003236:	68db      	ldr	r3, [r3, #12]
 8003238:	43db      	mvns	r3, r3
 800323a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800323e:	0a1b      	lsrs	r3, r3, #8
 8003240:	73fb      	strb	r3, [r7, #15]
 8003242:	7bfb      	ldrb	r3, [r7, #15]
 8003244:	f1c3 0304 	rsb	r3, r3, #4
 8003248:	73bb      	strb	r3, [r7, #14]
 800324a:	7b7a      	ldrb	r2, [r7, #13]
 800324c:	7bfb      	ldrb	r3, [r7, #15]
 800324e:	fa42 f303 	asr.w	r3, r2, r3
 8003252:	737b      	strb	r3, [r7, #13]
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	785b      	ldrb	r3, [r3, #1]
 8003258:	461a      	mov	r2, r3
 800325a:	7bbb      	ldrb	r3, [r7, #14]
 800325c:	fa02 f303 	lsl.w	r3, r2, r3
 8003260:	73fb      	strb	r3, [r7, #15]
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	789a      	ldrb	r2, [r3, #2]
 8003266:	7b7b      	ldrb	r3, [r7, #13]
 8003268:	4013      	ands	r3, r2
 800326a:	b2da      	uxtb	r2, r3
 800326c:	7bfb      	ldrb	r3, [r7, #15]
 800326e:	4313      	orrs	r3, r2
 8003270:	73fb      	strb	r3, [r7, #15]
 8003272:	7bfb      	ldrb	r3, [r7, #15]
 8003274:	011b      	lsls	r3, r3, #4
 8003276:	73fb      	strb	r3, [r7, #15]
 8003278:	4a15      	ldr	r2, [pc, #84]	; (80032d0 <NVIC_Init+0xb8>)
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	781b      	ldrb	r3, [r3, #0]
 800327e:	4413      	add	r3, r2
 8003280:	7bfa      	ldrb	r2, [r7, #15]
 8003282:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003286:	4b12      	ldr	r3, [pc, #72]	; (80032d0 <NVIC_Init+0xb8>)
 8003288:	687a      	ldr	r2, [r7, #4]
 800328a:	7812      	ldrb	r2, [r2, #0]
 800328c:	0952      	lsrs	r2, r2, #5
 800328e:	b2d2      	uxtb	r2, r2
 8003290:	6879      	ldr	r1, [r7, #4]
 8003292:	7809      	ldrb	r1, [r1, #0]
 8003294:	f001 011f 	and.w	r1, r1, #31
 8003298:	2001      	movs	r0, #1
 800329a:	fa00 f101 	lsl.w	r1, r0, r1
 800329e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80032a2:	e00e      	b.n	80032c2 <NVIC_Init+0xaa>
 80032a4:	4b0a      	ldr	r3, [pc, #40]	; (80032d0 <NVIC_Init+0xb8>)
 80032a6:	687a      	ldr	r2, [r7, #4]
 80032a8:	7812      	ldrb	r2, [r2, #0]
 80032aa:	0952      	lsrs	r2, r2, #5
 80032ac:	b2d2      	uxtb	r2, r2
 80032ae:	6879      	ldr	r1, [r7, #4]
 80032b0:	7809      	ldrb	r1, [r1, #0]
 80032b2:	f001 011f 	and.w	r1, r1, #31
 80032b6:	2001      	movs	r0, #1
 80032b8:	fa00 f101 	lsl.w	r1, r0, r1
 80032bc:	3220      	adds	r2, #32
 80032be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80032c2:	3714      	adds	r7, #20
 80032c4:	46bd      	mov	sp, r7
 80032c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032ca:	4770      	bx	lr
 80032cc:	e000ed00 	.word	0xe000ed00
 80032d0:	e000e100 	.word	0xe000e100

080032d4 <EXTI_GetITStatus>:
 80032d4:	b480      	push	{r7}
 80032d6:	b085      	sub	sp, #20
 80032d8:	af00      	add	r7, sp, #0
 80032da:	6078      	str	r0, [r7, #4]
 80032dc:	2300      	movs	r3, #0
 80032de:	73fb      	strb	r3, [r7, #15]
 80032e0:	4b08      	ldr	r3, [pc, #32]	; (8003304 <EXTI_GetITStatus+0x30>)
 80032e2:	695a      	ldr	r2, [r3, #20]
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	4013      	ands	r3, r2
 80032e8:	2b00      	cmp	r3, #0
 80032ea:	d002      	beq.n	80032f2 <EXTI_GetITStatus+0x1e>
 80032ec:	2301      	movs	r3, #1
 80032ee:	73fb      	strb	r3, [r7, #15]
 80032f0:	e001      	b.n	80032f6 <EXTI_GetITStatus+0x22>
 80032f2:	2300      	movs	r3, #0
 80032f4:	73fb      	strb	r3, [r7, #15]
 80032f6:	7bfb      	ldrb	r3, [r7, #15]
 80032f8:	4618      	mov	r0, r3
 80032fa:	3714      	adds	r7, #20
 80032fc:	46bd      	mov	sp, r7
 80032fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003302:	4770      	bx	lr
 8003304:	40013c00 	.word	0x40013c00

08003308 <EXTI_ClearITPendingBit>:
 8003308:	b480      	push	{r7}
 800330a:	b083      	sub	sp, #12
 800330c:	af00      	add	r7, sp, #0
 800330e:	6078      	str	r0, [r7, #4]
 8003310:	4b03      	ldr	r3, [pc, #12]	; (8003320 <EXTI_ClearITPendingBit+0x18>)
 8003312:	687a      	ldr	r2, [r7, #4]
 8003314:	615a      	str	r2, [r3, #20]
 8003316:	370c      	adds	r7, #12
 8003318:	46bd      	mov	sp, r7
 800331a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800331e:	4770      	bx	lr
 8003320:	40013c00 	.word	0x40013c00

08003324 <FSMC_NORSRAMDeInit>:
 8003324:	b480      	push	{r7}
 8003326:	b083      	sub	sp, #12
 8003328:	af00      	add	r7, sp, #0
 800332a:	6078      	str	r0, [r7, #4]
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	2b00      	cmp	r3, #0
 8003330:	d107      	bne.n	8003342 <FSMC_NORSRAMDeInit+0x1e>
 8003332:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8003336:	687a      	ldr	r2, [r7, #4]
 8003338:	f243 01db 	movw	r1, #12507	; 0x30db
 800333c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003340:	e006      	b.n	8003350 <FSMC_NORSRAMDeInit+0x2c>
 8003342:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8003346:	687a      	ldr	r2, [r7, #4]
 8003348:	f243 01d2 	movw	r1, #12498	; 0x30d2
 800334c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003350:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8003354:	687a      	ldr	r2, [r7, #4]
 8003356:	3201      	adds	r2, #1
 8003358:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 800335c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003360:	4b05      	ldr	r3, [pc, #20]	; (8003378 <FSMC_NORSRAMDeInit+0x54>)
 8003362:	687a      	ldr	r2, [r7, #4]
 8003364:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8003368:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800336c:	370c      	adds	r7, #12
 800336e:	46bd      	mov	sp, r7
 8003370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003374:	4770      	bx	lr
 8003376:	bf00      	nop
 8003378:	a0000104 	.word	0xa0000104

0800337c <FSMC_NORSRAMInit>:
 800337c:	b480      	push	{r7}
 800337e:	b083      	sub	sp, #12
 8003380:	af00      	add	r7, sp, #0
 8003382:	6078      	str	r0, [r7, #4]
 8003384:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8003388:	687a      	ldr	r2, [r7, #4]
 800338a:	6812      	ldr	r2, [r2, #0]
 800338c:	6879      	ldr	r1, [r7, #4]
 800338e:	6848      	ldr	r0, [r1, #4]
 8003390:	6879      	ldr	r1, [r7, #4]
 8003392:	6889      	ldr	r1, [r1, #8]
 8003394:	4308      	orrs	r0, r1
 8003396:	6879      	ldr	r1, [r7, #4]
 8003398:	68c9      	ldr	r1, [r1, #12]
 800339a:	4308      	orrs	r0, r1
 800339c:	6879      	ldr	r1, [r7, #4]
 800339e:	6909      	ldr	r1, [r1, #16]
 80033a0:	4308      	orrs	r0, r1
 80033a2:	6879      	ldr	r1, [r7, #4]
 80033a4:	6949      	ldr	r1, [r1, #20]
 80033a6:	4308      	orrs	r0, r1
 80033a8:	6879      	ldr	r1, [r7, #4]
 80033aa:	6989      	ldr	r1, [r1, #24]
 80033ac:	4308      	orrs	r0, r1
 80033ae:	6879      	ldr	r1, [r7, #4]
 80033b0:	69c9      	ldr	r1, [r1, #28]
 80033b2:	4308      	orrs	r0, r1
 80033b4:	6879      	ldr	r1, [r7, #4]
 80033b6:	6a09      	ldr	r1, [r1, #32]
 80033b8:	4308      	orrs	r0, r1
 80033ba:	6879      	ldr	r1, [r7, #4]
 80033bc:	6a49      	ldr	r1, [r1, #36]	; 0x24
 80033be:	4308      	orrs	r0, r1
 80033c0:	6879      	ldr	r1, [r7, #4]
 80033c2:	6a89      	ldr	r1, [r1, #40]	; 0x28
 80033c4:	4308      	orrs	r0, r1
 80033c6:	6879      	ldr	r1, [r7, #4]
 80033c8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 80033ca:	4308      	orrs	r0, r1
 80033cc:	6879      	ldr	r1, [r7, #4]
 80033ce:	6b09      	ldr	r1, [r1, #48]	; 0x30
 80033d0:	4301      	orrs	r1, r0
 80033d2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	689b      	ldr	r3, [r3, #8]
 80033da:	2b08      	cmp	r3, #8
 80033dc:	d10d      	bne.n	80033fa <FSMC_NORSRAMInit+0x7e>
 80033de:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 80033e2:	687a      	ldr	r2, [r7, #4]
 80033e4:	6812      	ldr	r2, [r2, #0]
 80033e6:	f04f 4120 	mov.w	r1, #2684354560	; 0xa0000000
 80033ea:	6878      	ldr	r0, [r7, #4]
 80033ec:	6800      	ldr	r0, [r0, #0]
 80033ee:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80033f2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80033f6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80033fa:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 80033fe:	687a      	ldr	r2, [r7, #4]
 8003400:	6812      	ldr	r2, [r2, #0]
 8003402:	3201      	adds	r2, #1
 8003404:	6879      	ldr	r1, [r7, #4]
 8003406:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8003408:	6808      	ldr	r0, [r1, #0]
 800340a:	6879      	ldr	r1, [r7, #4]
 800340c:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800340e:	6849      	ldr	r1, [r1, #4]
 8003410:	0109      	lsls	r1, r1, #4
 8003412:	4308      	orrs	r0, r1
 8003414:	6879      	ldr	r1, [r7, #4]
 8003416:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8003418:	6889      	ldr	r1, [r1, #8]
 800341a:	0209      	lsls	r1, r1, #8
 800341c:	4308      	orrs	r0, r1
 800341e:	6879      	ldr	r1, [r7, #4]
 8003420:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8003422:	68c9      	ldr	r1, [r1, #12]
 8003424:	0409      	lsls	r1, r1, #16
 8003426:	4308      	orrs	r0, r1
 8003428:	6879      	ldr	r1, [r7, #4]
 800342a:	6b49      	ldr	r1, [r1, #52]	; 0x34
 800342c:	6909      	ldr	r1, [r1, #16]
 800342e:	0509      	lsls	r1, r1, #20
 8003430:	4308      	orrs	r0, r1
 8003432:	6879      	ldr	r1, [r7, #4]
 8003434:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8003436:	6949      	ldr	r1, [r1, #20]
 8003438:	0609      	lsls	r1, r1, #24
 800343a:	4308      	orrs	r0, r1
 800343c:	6879      	ldr	r1, [r7, #4]
 800343e:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8003440:	6989      	ldr	r1, [r1, #24]
 8003442:	4301      	orrs	r1, r0
 8003444:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800344c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8003450:	d120      	bne.n	8003494 <FSMC_NORSRAMInit+0x118>
 8003452:	4b16      	ldr	r3, [pc, #88]	; (80034ac <FSMC_NORSRAMInit+0x130>)
 8003454:	687a      	ldr	r2, [r7, #4]
 8003456:	6812      	ldr	r2, [r2, #0]
 8003458:	6879      	ldr	r1, [r7, #4]
 800345a:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800345c:	6808      	ldr	r0, [r1, #0]
 800345e:	6879      	ldr	r1, [r7, #4]
 8003460:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8003462:	6849      	ldr	r1, [r1, #4]
 8003464:	0109      	lsls	r1, r1, #4
 8003466:	4308      	orrs	r0, r1
 8003468:	6879      	ldr	r1, [r7, #4]
 800346a:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800346c:	6889      	ldr	r1, [r1, #8]
 800346e:	0209      	lsls	r1, r1, #8
 8003470:	4308      	orrs	r0, r1
 8003472:	6879      	ldr	r1, [r7, #4]
 8003474:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8003476:	6909      	ldr	r1, [r1, #16]
 8003478:	0509      	lsls	r1, r1, #20
 800347a:	4308      	orrs	r0, r1
 800347c:	6879      	ldr	r1, [r7, #4]
 800347e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8003480:	6949      	ldr	r1, [r1, #20]
 8003482:	0609      	lsls	r1, r1, #24
 8003484:	4308      	orrs	r0, r1
 8003486:	6879      	ldr	r1, [r7, #4]
 8003488:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800348a:	6989      	ldr	r1, [r1, #24]
 800348c:	4301      	orrs	r1, r0
 800348e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003492:	e006      	b.n	80034a2 <FSMC_NORSRAMInit+0x126>
 8003494:	4b05      	ldr	r3, [pc, #20]	; (80034ac <FSMC_NORSRAMInit+0x130>)
 8003496:	687a      	ldr	r2, [r7, #4]
 8003498:	6812      	ldr	r2, [r2, #0]
 800349a:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 800349e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80034a2:	370c      	adds	r7, #12
 80034a4:	46bd      	mov	sp, r7
 80034a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034aa:	4770      	bx	lr
 80034ac:	a0000104 	.word	0xa0000104

080034b0 <FSMC_NORSRAMCmd>:
 80034b0:	b480      	push	{r7}
 80034b2:	b083      	sub	sp, #12
 80034b4:	af00      	add	r7, sp, #0
 80034b6:	6078      	str	r0, [r7, #4]
 80034b8:	460b      	mov	r3, r1
 80034ba:	70fb      	strb	r3, [r7, #3]
 80034bc:	78fb      	ldrb	r3, [r7, #3]
 80034be:	2b00      	cmp	r3, #0
 80034c0:	d00c      	beq.n	80034dc <FSMC_NORSRAMCmd+0x2c>
 80034c2:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 80034c6:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 80034ca:	6879      	ldr	r1, [r7, #4]
 80034cc:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80034d0:	f042 0101 	orr.w	r1, r2, #1
 80034d4:	687a      	ldr	r2, [r7, #4]
 80034d6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80034da:	e00b      	b.n	80034f4 <FSMC_NORSRAMCmd+0x44>
 80034dc:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 80034e0:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 80034e4:	6879      	ldr	r1, [r7, #4]
 80034e6:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 80034ea:	4b05      	ldr	r3, [pc, #20]	; (8003500 <FSMC_NORSRAMCmd+0x50>)
 80034ec:	400b      	ands	r3, r1
 80034ee:	6879      	ldr	r1, [r7, #4]
 80034f0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 80034f4:	370c      	adds	r7, #12
 80034f6:	46bd      	mov	sp, r7
 80034f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034fc:	4770      	bx	lr
 80034fe:	bf00      	nop
 8003500:	000ffffe 	.word	0x000ffffe

08003504 <GPIO_DeInit>:
 8003504:	b580      	push	{r7, lr}
 8003506:	b082      	sub	sp, #8
 8003508:	af00      	add	r7, sp, #0
 800350a:	6078      	str	r0, [r7, #4]
 800350c:	687a      	ldr	r2, [r7, #4]
 800350e:	4b4b      	ldr	r3, [pc, #300]	; (800363c <GPIO_DeInit+0x138>)
 8003510:	429a      	cmp	r2, r3
 8003512:	d108      	bne.n	8003526 <GPIO_DeInit+0x22>
 8003514:	2001      	movs	r0, #1
 8003516:	2101      	movs	r1, #1
 8003518:	f000 fd40 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 800351c:	2001      	movs	r0, #1
 800351e:	2100      	movs	r1, #0
 8003520:	f000 fd3c 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 8003524:	e086      	b.n	8003634 <GPIO_DeInit+0x130>
 8003526:	687a      	ldr	r2, [r7, #4]
 8003528:	4b45      	ldr	r3, [pc, #276]	; (8003640 <GPIO_DeInit+0x13c>)
 800352a:	429a      	cmp	r2, r3
 800352c:	d108      	bne.n	8003540 <GPIO_DeInit+0x3c>
 800352e:	2002      	movs	r0, #2
 8003530:	2101      	movs	r1, #1
 8003532:	f000 fd33 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 8003536:	2002      	movs	r0, #2
 8003538:	2100      	movs	r1, #0
 800353a:	f000 fd2f 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 800353e:	e079      	b.n	8003634 <GPIO_DeInit+0x130>
 8003540:	687a      	ldr	r2, [r7, #4]
 8003542:	4b40      	ldr	r3, [pc, #256]	; (8003644 <GPIO_DeInit+0x140>)
 8003544:	429a      	cmp	r2, r3
 8003546:	d108      	bne.n	800355a <GPIO_DeInit+0x56>
 8003548:	2004      	movs	r0, #4
 800354a:	2101      	movs	r1, #1
 800354c:	f000 fd26 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 8003550:	2004      	movs	r0, #4
 8003552:	2100      	movs	r1, #0
 8003554:	f000 fd22 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 8003558:	e06c      	b.n	8003634 <GPIO_DeInit+0x130>
 800355a:	687a      	ldr	r2, [r7, #4]
 800355c:	4b3a      	ldr	r3, [pc, #232]	; (8003648 <GPIO_DeInit+0x144>)
 800355e:	429a      	cmp	r2, r3
 8003560:	d108      	bne.n	8003574 <GPIO_DeInit+0x70>
 8003562:	2008      	movs	r0, #8
 8003564:	2101      	movs	r1, #1
 8003566:	f000 fd19 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 800356a:	2008      	movs	r0, #8
 800356c:	2100      	movs	r1, #0
 800356e:	f000 fd15 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 8003572:	e05f      	b.n	8003634 <GPIO_DeInit+0x130>
 8003574:	687a      	ldr	r2, [r7, #4]
 8003576:	4b35      	ldr	r3, [pc, #212]	; (800364c <GPIO_DeInit+0x148>)
 8003578:	429a      	cmp	r2, r3
 800357a:	d108      	bne.n	800358e <GPIO_DeInit+0x8a>
 800357c:	2010      	movs	r0, #16
 800357e:	2101      	movs	r1, #1
 8003580:	f000 fd0c 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 8003584:	2010      	movs	r0, #16
 8003586:	2100      	movs	r1, #0
 8003588:	f000 fd08 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 800358c:	e052      	b.n	8003634 <GPIO_DeInit+0x130>
 800358e:	687a      	ldr	r2, [r7, #4]
 8003590:	4b2f      	ldr	r3, [pc, #188]	; (8003650 <GPIO_DeInit+0x14c>)
 8003592:	429a      	cmp	r2, r3
 8003594:	d108      	bne.n	80035a8 <GPIO_DeInit+0xa4>
 8003596:	2020      	movs	r0, #32
 8003598:	2101      	movs	r1, #1
 800359a:	f000 fcff 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 800359e:	2020      	movs	r0, #32
 80035a0:	2100      	movs	r1, #0
 80035a2:	f000 fcfb 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 80035a6:	e045      	b.n	8003634 <GPIO_DeInit+0x130>
 80035a8:	687a      	ldr	r2, [r7, #4]
 80035aa:	4b2a      	ldr	r3, [pc, #168]	; (8003654 <GPIO_DeInit+0x150>)
 80035ac:	429a      	cmp	r2, r3
 80035ae:	d108      	bne.n	80035c2 <GPIO_DeInit+0xbe>
 80035b0:	2040      	movs	r0, #64	; 0x40
 80035b2:	2101      	movs	r1, #1
 80035b4:	f000 fcf2 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 80035b8:	2040      	movs	r0, #64	; 0x40
 80035ba:	2100      	movs	r1, #0
 80035bc:	f000 fcee 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 80035c0:	e038      	b.n	8003634 <GPIO_DeInit+0x130>
 80035c2:	687a      	ldr	r2, [r7, #4]
 80035c4:	4b24      	ldr	r3, [pc, #144]	; (8003658 <GPIO_DeInit+0x154>)
 80035c6:	429a      	cmp	r2, r3
 80035c8:	d108      	bne.n	80035dc <GPIO_DeInit+0xd8>
 80035ca:	2080      	movs	r0, #128	; 0x80
 80035cc:	2101      	movs	r1, #1
 80035ce:	f000 fce5 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 80035d2:	2080      	movs	r0, #128	; 0x80
 80035d4:	2100      	movs	r1, #0
 80035d6:	f000 fce1 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 80035da:	e02b      	b.n	8003634 <GPIO_DeInit+0x130>
 80035dc:	687a      	ldr	r2, [r7, #4]
 80035de:	4b1f      	ldr	r3, [pc, #124]	; (800365c <GPIO_DeInit+0x158>)
 80035e0:	429a      	cmp	r2, r3
 80035e2:	d10a      	bne.n	80035fa <GPIO_DeInit+0xf6>
 80035e4:	f44f 7080 	mov.w	r0, #256	; 0x100
 80035e8:	2101      	movs	r1, #1
 80035ea:	f000 fcd7 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 80035ee:	f44f 7080 	mov.w	r0, #256	; 0x100
 80035f2:	2100      	movs	r1, #0
 80035f4:	f000 fcd2 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 80035f8:	e01c      	b.n	8003634 <GPIO_DeInit+0x130>
 80035fa:	687a      	ldr	r2, [r7, #4]
 80035fc:	4b18      	ldr	r3, [pc, #96]	; (8003660 <GPIO_DeInit+0x15c>)
 80035fe:	429a      	cmp	r2, r3
 8003600:	d10a      	bne.n	8003618 <GPIO_DeInit+0x114>
 8003602:	f44f 7000 	mov.w	r0, #512	; 0x200
 8003606:	2101      	movs	r1, #1
 8003608:	f000 fcc8 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 800360c:	f44f 7000 	mov.w	r0, #512	; 0x200
 8003610:	2100      	movs	r1, #0
 8003612:	f000 fcc3 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 8003616:	e00d      	b.n	8003634 <GPIO_DeInit+0x130>
 8003618:	687a      	ldr	r2, [r7, #4]
 800361a:	4b12      	ldr	r3, [pc, #72]	; (8003664 <GPIO_DeInit+0x160>)
 800361c:	429a      	cmp	r2, r3
 800361e:	d109      	bne.n	8003634 <GPIO_DeInit+0x130>
 8003620:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8003624:	2101      	movs	r1, #1
 8003626:	f000 fcb9 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 800362a:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800362e:	2100      	movs	r1, #0
 8003630:	f000 fcb4 	bl	8003f9c <RCC_AHB1PeriphResetCmd>
 8003634:	3708      	adds	r7, #8
 8003636:	46bd      	mov	sp, r7
 8003638:	bd80      	pop	{r7, pc}
 800363a:	bf00      	nop
 800363c:	40020000 	.word	0x40020000
 8003640:	40020400 	.word	0x40020400
 8003644:	40020800 	.word	0x40020800
 8003648:	40020c00 	.word	0x40020c00
 800364c:	40021000 	.word	0x40021000
 8003650:	40021400 	.word	0x40021400
 8003654:	40021800 	.word	0x40021800
 8003658:	40021c00 	.word	0x40021c00
 800365c:	40022000 	.word	0x40022000
 8003660:	40022400 	.word	0x40022400
 8003664:	40022800 	.word	0x40022800

08003668 <GPIO_Init>:
 8003668:	b480      	push	{r7}
 800366a:	b087      	sub	sp, #28
 800366c:	af00      	add	r7, sp, #0
 800366e:	6078      	str	r0, [r7, #4]
 8003670:	6039      	str	r1, [r7, #0]
 8003672:	2300      	movs	r3, #0
 8003674:	617b      	str	r3, [r7, #20]
 8003676:	2300      	movs	r3, #0
 8003678:	613b      	str	r3, [r7, #16]
 800367a:	2300      	movs	r3, #0
 800367c:	60fb      	str	r3, [r7, #12]
 800367e:	2300      	movs	r3, #0
 8003680:	617b      	str	r3, [r7, #20]
 8003682:	e076      	b.n	8003772 <GPIO_Init+0x10a>
 8003684:	697b      	ldr	r3, [r7, #20]
 8003686:	2201      	movs	r2, #1
 8003688:	fa02 f303 	lsl.w	r3, r2, r3
 800368c:	613b      	str	r3, [r7, #16]
 800368e:	683b      	ldr	r3, [r7, #0]
 8003690:	681a      	ldr	r2, [r3, #0]
 8003692:	693b      	ldr	r3, [r7, #16]
 8003694:	4013      	ands	r3, r2
 8003696:	60fb      	str	r3, [r7, #12]
 8003698:	68fa      	ldr	r2, [r7, #12]
 800369a:	693b      	ldr	r3, [r7, #16]
 800369c:	429a      	cmp	r2, r3
 800369e:	d165      	bne.n	800376c <GPIO_Init+0x104>
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	681a      	ldr	r2, [r3, #0]
 80036a4:	697b      	ldr	r3, [r7, #20]
 80036a6:	005b      	lsls	r3, r3, #1
 80036a8:	2103      	movs	r1, #3
 80036aa:	fa01 f303 	lsl.w	r3, r1, r3
 80036ae:	43db      	mvns	r3, r3
 80036b0:	401a      	ands	r2, r3
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	601a      	str	r2, [r3, #0]
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	681a      	ldr	r2, [r3, #0]
 80036ba:	683b      	ldr	r3, [r7, #0]
 80036bc:	791b      	ldrb	r3, [r3, #4]
 80036be:	4619      	mov	r1, r3
 80036c0:	697b      	ldr	r3, [r7, #20]
 80036c2:	005b      	lsls	r3, r3, #1
 80036c4:	fa01 f303 	lsl.w	r3, r1, r3
 80036c8:	431a      	orrs	r2, r3
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	601a      	str	r2, [r3, #0]
 80036ce:	683b      	ldr	r3, [r7, #0]
 80036d0:	791b      	ldrb	r3, [r3, #4]
 80036d2:	2b01      	cmp	r3, #1
 80036d4:	d003      	beq.n	80036de <GPIO_Init+0x76>
 80036d6:	683b      	ldr	r3, [r7, #0]
 80036d8:	791b      	ldrb	r3, [r3, #4]
 80036da:	2b02      	cmp	r3, #2
 80036dc:	d12e      	bne.n	800373c <GPIO_Init+0xd4>
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	689a      	ldr	r2, [r3, #8]
 80036e2:	697b      	ldr	r3, [r7, #20]
 80036e4:	005b      	lsls	r3, r3, #1
 80036e6:	2103      	movs	r1, #3
 80036e8:	fa01 f303 	lsl.w	r3, r1, r3
 80036ec:	43db      	mvns	r3, r3
 80036ee:	401a      	ands	r2, r3
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	609a      	str	r2, [r3, #8]
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	689a      	ldr	r2, [r3, #8]
 80036f8:	683b      	ldr	r3, [r7, #0]
 80036fa:	795b      	ldrb	r3, [r3, #5]
 80036fc:	4619      	mov	r1, r3
 80036fe:	697b      	ldr	r3, [r7, #20]
 8003700:	005b      	lsls	r3, r3, #1
 8003702:	fa01 f303 	lsl.w	r3, r1, r3
 8003706:	431a      	orrs	r2, r3
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	609a      	str	r2, [r3, #8]
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	685a      	ldr	r2, [r3, #4]
 8003710:	697b      	ldr	r3, [r7, #20]
 8003712:	b29b      	uxth	r3, r3
 8003714:	2101      	movs	r1, #1
 8003716:	fa01 f303 	lsl.w	r3, r1, r3
 800371a:	43db      	mvns	r3, r3
 800371c:	401a      	ands	r2, r3
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	605a      	str	r2, [r3, #4]
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	685a      	ldr	r2, [r3, #4]
 8003726:	683b      	ldr	r3, [r7, #0]
 8003728:	799b      	ldrb	r3, [r3, #6]
 800372a:	4619      	mov	r1, r3
 800372c:	697b      	ldr	r3, [r7, #20]
 800372e:	b29b      	uxth	r3, r3
 8003730:	fa01 f303 	lsl.w	r3, r1, r3
 8003734:	b29b      	uxth	r3, r3
 8003736:	431a      	orrs	r2, r3
 8003738:	687b      	ldr	r3, [r7, #4]
 800373a:	605a      	str	r2, [r3, #4]
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	68da      	ldr	r2, [r3, #12]
 8003740:	697b      	ldr	r3, [r7, #20]
 8003742:	b29b      	uxth	r3, r3
 8003744:	005b      	lsls	r3, r3, #1
 8003746:	2103      	movs	r1, #3
 8003748:	fa01 f303 	lsl.w	r3, r1, r3
 800374c:	43db      	mvns	r3, r3
 800374e:	401a      	ands	r2, r3
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	60da      	str	r2, [r3, #12]
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	68da      	ldr	r2, [r3, #12]
 8003758:	683b      	ldr	r3, [r7, #0]
 800375a:	79db      	ldrb	r3, [r3, #7]
 800375c:	4619      	mov	r1, r3
 800375e:	697b      	ldr	r3, [r7, #20]
 8003760:	005b      	lsls	r3, r3, #1
 8003762:	fa01 f303 	lsl.w	r3, r1, r3
 8003766:	431a      	orrs	r2, r3
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	60da      	str	r2, [r3, #12]
 800376c:	697b      	ldr	r3, [r7, #20]
 800376e:	3301      	adds	r3, #1
 8003770:	617b      	str	r3, [r7, #20]
 8003772:	697b      	ldr	r3, [r7, #20]
 8003774:	2b0f      	cmp	r3, #15
 8003776:	d985      	bls.n	8003684 <GPIO_Init+0x1c>
 8003778:	371c      	adds	r7, #28
 800377a:	46bd      	mov	sp, r7
 800377c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003780:	4770      	bx	lr
 8003782:	bf00      	nop

08003784 <GPIO_StructInit>:
 8003784:	b480      	push	{r7}
 8003786:	b083      	sub	sp, #12
 8003788:	af00      	add	r7, sp, #0
 800378a:	6078      	str	r0, [r7, #4]
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003792:	601a      	str	r2, [r3, #0]
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	2200      	movs	r2, #0
 8003798:	711a      	strb	r2, [r3, #4]
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	2200      	movs	r2, #0
 800379e:	715a      	strb	r2, [r3, #5]
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	2200      	movs	r2, #0
 80037a4:	719a      	strb	r2, [r3, #6]
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	2200      	movs	r2, #0
 80037aa:	71da      	strb	r2, [r3, #7]
 80037ac:	370c      	adds	r7, #12
 80037ae:	46bd      	mov	sp, r7
 80037b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037b4:	4770      	bx	lr
 80037b6:	bf00      	nop

080037b8 <GPIO_WriteBit>:
 80037b8:	b480      	push	{r7}
 80037ba:	b083      	sub	sp, #12
 80037bc:	af00      	add	r7, sp, #0
 80037be:	6078      	str	r0, [r7, #4]
 80037c0:	4613      	mov	r3, r2
 80037c2:	460a      	mov	r2, r1
 80037c4:	807a      	strh	r2, [r7, #2]
 80037c6:	707b      	strb	r3, [r7, #1]
 80037c8:	787b      	ldrb	r3, [r7, #1]
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	d003      	beq.n	80037d6 <GPIO_WriteBit+0x1e>
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	887a      	ldrh	r2, [r7, #2]
 80037d2:	831a      	strh	r2, [r3, #24]
 80037d4:	e002      	b.n	80037dc <GPIO_WriteBit+0x24>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	887a      	ldrh	r2, [r7, #2]
 80037da:	835a      	strh	r2, [r3, #26]
 80037dc:	370c      	adds	r7, #12
 80037de:	46bd      	mov	sp, r7
 80037e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037e4:	4770      	bx	lr
 80037e6:	bf00      	nop

080037e8 <GPIO_PinAFConfig>:
 80037e8:	b480      	push	{r7}
 80037ea:	b085      	sub	sp, #20
 80037ec:	af00      	add	r7, sp, #0
 80037ee:	6078      	str	r0, [r7, #4]
 80037f0:	4613      	mov	r3, r2
 80037f2:	460a      	mov	r2, r1
 80037f4:	807a      	strh	r2, [r7, #2]
 80037f6:	707b      	strb	r3, [r7, #1]
 80037f8:	2300      	movs	r3, #0
 80037fa:	60fb      	str	r3, [r7, #12]
 80037fc:	2300      	movs	r3, #0
 80037fe:	60bb      	str	r3, [r7, #8]
 8003800:	787a      	ldrb	r2, [r7, #1]
 8003802:	887b      	ldrh	r3, [r7, #2]
 8003804:	f003 0307 	and.w	r3, r3, #7
 8003808:	009b      	lsls	r3, r3, #2
 800380a:	fa02 f303 	lsl.w	r3, r2, r3
 800380e:	60fb      	str	r3, [r7, #12]
 8003810:	887b      	ldrh	r3, [r7, #2]
 8003812:	08db      	lsrs	r3, r3, #3
 8003814:	b29b      	uxth	r3, r3
 8003816:	461a      	mov	r2, r3
 8003818:	887b      	ldrh	r3, [r7, #2]
 800381a:	08db      	lsrs	r3, r3, #3
 800381c:	b29b      	uxth	r3, r3
 800381e:	4619      	mov	r1, r3
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	3108      	adds	r1, #8
 8003824:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8003828:	887b      	ldrh	r3, [r7, #2]
 800382a:	f003 0307 	and.w	r3, r3, #7
 800382e:	009b      	lsls	r3, r3, #2
 8003830:	200f      	movs	r0, #15
 8003832:	fa00 f303 	lsl.w	r3, r0, r3
 8003836:	43db      	mvns	r3, r3
 8003838:	4019      	ands	r1, r3
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	3208      	adds	r2, #8
 800383e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003842:	887b      	ldrh	r3, [r7, #2]
 8003844:	08db      	lsrs	r3, r3, #3
 8003846:	b29b      	uxth	r3, r3
 8003848:	461a      	mov	r2, r3
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	3208      	adds	r2, #8
 800384e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8003852:	68fb      	ldr	r3, [r7, #12]
 8003854:	4313      	orrs	r3, r2
 8003856:	60bb      	str	r3, [r7, #8]
 8003858:	887b      	ldrh	r3, [r7, #2]
 800385a:	08db      	lsrs	r3, r3, #3
 800385c:	b29b      	uxth	r3, r3
 800385e:	461a      	mov	r2, r3
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	3208      	adds	r2, #8
 8003864:	68b9      	ldr	r1, [r7, #8]
 8003866:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800386a:	3714      	adds	r7, #20
 800386c:	46bd      	mov	sp, r7
 800386e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003872:	4770      	bx	lr

08003874 <I2C_DeInit>:
 8003874:	b580      	push	{r7, lr}
 8003876:	b082      	sub	sp, #8
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	687a      	ldr	r2, [r7, #4]
 800387e:	4b17      	ldr	r3, [pc, #92]	; (80038dc <I2C_DeInit+0x68>)
 8003880:	429a      	cmp	r2, r3
 8003882:	d10a      	bne.n	800389a <I2C_DeInit+0x26>
 8003884:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8003888:	2101      	movs	r1, #1
 800388a:	f000 fba5 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 800388e:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8003892:	2100      	movs	r1, #0
 8003894:	f000 fba0 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 8003898:	e01c      	b.n	80038d4 <I2C_DeInit+0x60>
 800389a:	687a      	ldr	r2, [r7, #4]
 800389c:	4b10      	ldr	r3, [pc, #64]	; (80038e0 <I2C_DeInit+0x6c>)
 800389e:	429a      	cmp	r2, r3
 80038a0:	d10a      	bne.n	80038b8 <I2C_DeInit+0x44>
 80038a2:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 80038a6:	2101      	movs	r1, #1
 80038a8:	f000 fb96 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80038ac:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 80038b0:	2100      	movs	r1, #0
 80038b2:	f000 fb91 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80038b6:	e00d      	b.n	80038d4 <I2C_DeInit+0x60>
 80038b8:	687a      	ldr	r2, [r7, #4]
 80038ba:	4b0a      	ldr	r3, [pc, #40]	; (80038e4 <I2C_DeInit+0x70>)
 80038bc:	429a      	cmp	r2, r3
 80038be:	d109      	bne.n	80038d4 <I2C_DeInit+0x60>
 80038c0:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 80038c4:	2101      	movs	r1, #1
 80038c6:	f000 fb87 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80038ca:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 80038ce:	2100      	movs	r1, #0
 80038d0:	f000 fb82 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80038d4:	3708      	adds	r7, #8
 80038d6:	46bd      	mov	sp, r7
 80038d8:	bd80      	pop	{r7, pc}
 80038da:	bf00      	nop
 80038dc:	40005400 	.word	0x40005400
 80038e0:	40005800 	.word	0x40005800
 80038e4:	40005c00 	.word	0x40005c00

080038e8 <I2C_Init>:
 80038e8:	b580      	push	{r7, lr}
 80038ea:	b08a      	sub	sp, #40	; 0x28
 80038ec:	af00      	add	r7, sp, #0
 80038ee:	6078      	str	r0, [r7, #4]
 80038f0:	6039      	str	r1, [r7, #0]
 80038f2:	2300      	movs	r3, #0
 80038f4:	84fb      	strh	r3, [r7, #38]	; 0x26
 80038f6:	2300      	movs	r3, #0
 80038f8:	847b      	strh	r3, [r7, #34]	; 0x22
 80038fa:	2304      	movs	r3, #4
 80038fc:	84bb      	strh	r3, [r7, #36]	; 0x24
 80038fe:	4b57      	ldr	r3, [pc, #348]	; (8003a5c <I2C_Init+0x174>)
 8003900:	61fb      	str	r3, [r7, #28]
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	889b      	ldrh	r3, [r3, #4]
 8003906:	84fb      	strh	r3, [r7, #38]	; 0x26
 8003908:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800390a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800390e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8003910:	f107 030c 	add.w	r3, r7, #12
 8003914:	4618      	mov	r0, r3
 8003916:	f000 fa1f 	bl	8003d58 <RCC_GetClocksFreq>
 800391a:	697b      	ldr	r3, [r7, #20]
 800391c:	61fb      	str	r3, [r7, #28]
 800391e:	69fa      	ldr	r2, [r7, #28]
 8003920:	4b4f      	ldr	r3, [pc, #316]	; (8003a60 <I2C_Init+0x178>)
 8003922:	fba3 1302 	umull	r1, r3, r3, r2
 8003926:	0c9b      	lsrs	r3, r3, #18
 8003928:	847b      	strh	r3, [r7, #34]	; 0x22
 800392a:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800392c:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 800392e:	4313      	orrs	r3, r2
 8003930:	84fb      	strh	r3, [r7, #38]	; 0x26
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8003936:	809a      	strh	r2, [r3, #4]
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	881b      	ldrh	r3, [r3, #0]
 800393c:	b29b      	uxth	r3, r3
 800393e:	f023 0301 	bic.w	r3, r3, #1
 8003942:	b29a      	uxth	r2, r3
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	801a      	strh	r2, [r3, #0]
 8003948:	2300      	movs	r3, #0
 800394a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800394c:	683b      	ldr	r3, [r7, #0]
 800394e:	681a      	ldr	r2, [r3, #0]
 8003950:	4b44      	ldr	r3, [pc, #272]	; (8003a64 <I2C_Init+0x17c>)
 8003952:	429a      	cmp	r2, r3
 8003954:	d815      	bhi.n	8003982 <I2C_Init+0x9a>
 8003956:	683b      	ldr	r3, [r7, #0]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	005b      	lsls	r3, r3, #1
 800395c:	69fa      	ldr	r2, [r7, #28]
 800395e:	fbb2 f3f3 	udiv	r3, r2, r3
 8003962:	84bb      	strh	r3, [r7, #36]	; 0x24
 8003964:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003966:	2b03      	cmp	r3, #3
 8003968:	d801      	bhi.n	800396e <I2C_Init+0x86>
 800396a:	2304      	movs	r3, #4
 800396c:	84bb      	strh	r3, [r7, #36]	; 0x24
 800396e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8003970:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003972:	4313      	orrs	r3, r2
 8003974:	84fb      	strh	r3, [r7, #38]	; 0x26
 8003976:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8003978:	3301      	adds	r3, #1
 800397a:	b29a      	uxth	r2, r3
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	841a      	strh	r2, [r3, #32]
 8003980:	e040      	b.n	8003a04 <I2C_Init+0x11c>
 8003982:	683b      	ldr	r3, [r7, #0]
 8003984:	88da      	ldrh	r2, [r3, #6]
 8003986:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 800398a:	429a      	cmp	r2, r3
 800398c:	d109      	bne.n	80039a2 <I2C_Init+0xba>
 800398e:	683b      	ldr	r3, [r7, #0]
 8003990:	681a      	ldr	r2, [r3, #0]
 8003992:	4613      	mov	r3, r2
 8003994:	005b      	lsls	r3, r3, #1
 8003996:	4413      	add	r3, r2
 8003998:	69fa      	ldr	r2, [r7, #28]
 800399a:	fbb2 f3f3 	udiv	r3, r2, r3
 800399e:	84bb      	strh	r3, [r7, #36]	; 0x24
 80039a0:	e00e      	b.n	80039c0 <I2C_Init+0xd8>
 80039a2:	683b      	ldr	r3, [r7, #0]
 80039a4:	681a      	ldr	r2, [r3, #0]
 80039a6:	4613      	mov	r3, r2
 80039a8:	009b      	lsls	r3, r3, #2
 80039aa:	4413      	add	r3, r2
 80039ac:	009a      	lsls	r2, r3, #2
 80039ae:	4413      	add	r3, r2
 80039b0:	69fa      	ldr	r2, [r7, #28]
 80039b2:	fbb2 f3f3 	udiv	r3, r2, r3
 80039b6:	84bb      	strh	r3, [r7, #36]	; 0x24
 80039b8:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80039ba:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80039be:	84bb      	strh	r3, [r7, #36]	; 0x24
 80039c0:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80039c2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d103      	bne.n	80039d2 <I2C_Init+0xea>
 80039ca:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80039cc:	f043 0301 	orr.w	r3, r3, #1
 80039d0:	84bb      	strh	r3, [r7, #36]	; 0x24
 80039d2:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80039d4:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80039d6:	4313      	orrs	r3, r2
 80039d8:	b29b      	uxth	r3, r3
 80039da:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80039de:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80039e2:	84fb      	strh	r3, [r7, #38]	; 0x26
 80039e4:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80039e6:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80039ea:	fb02 f303 	mul.w	r3, r2, r3
 80039ee:	4a1e      	ldr	r2, [pc, #120]	; (8003a68 <I2C_Init+0x180>)
 80039f0:	fb82 1203 	smull	r1, r2, r2, r3
 80039f4:	1192      	asrs	r2, r2, #6
 80039f6:	17db      	asrs	r3, r3, #31
 80039f8:	1ad3      	subs	r3, r2, r3
 80039fa:	b29b      	uxth	r3, r3
 80039fc:	3301      	adds	r3, #1
 80039fe:	b29a      	uxth	r2, r3
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	841a      	strh	r2, [r3, #32]
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8003a08:	839a      	strh	r2, [r3, #28]
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	881b      	ldrh	r3, [r3, #0]
 8003a0e:	b29b      	uxth	r3, r3
 8003a10:	f043 0301 	orr.w	r3, r3, #1
 8003a14:	b29a      	uxth	r2, r3
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	801a      	strh	r2, [r3, #0]
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	881b      	ldrh	r3, [r3, #0]
 8003a1e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8003a20:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8003a22:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 8003a26:	f023 0302 	bic.w	r3, r3, #2
 8003a2a:	84fb      	strh	r3, [r7, #38]	; 0x26
 8003a2c:	683b      	ldr	r3, [r7, #0]
 8003a2e:	889a      	ldrh	r2, [r3, #4]
 8003a30:	683b      	ldr	r3, [r7, #0]
 8003a32:	895b      	ldrh	r3, [r3, #10]
 8003a34:	4313      	orrs	r3, r2
 8003a36:	b29a      	uxth	r2, r3
 8003a38:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8003a3a:	4313      	orrs	r3, r2
 8003a3c:	84fb      	strh	r3, [r7, #38]	; 0x26
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8003a42:	801a      	strh	r2, [r3, #0]
 8003a44:	683b      	ldr	r3, [r7, #0]
 8003a46:	899a      	ldrh	r2, [r3, #12]
 8003a48:	683b      	ldr	r3, [r7, #0]
 8003a4a:	891b      	ldrh	r3, [r3, #8]
 8003a4c:	4313      	orrs	r3, r2
 8003a4e:	b29a      	uxth	r2, r3
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	811a      	strh	r2, [r3, #8]
 8003a54:	3728      	adds	r7, #40	; 0x28
 8003a56:	46bd      	mov	sp, r7
 8003a58:	bd80      	pop	{r7, pc}
 8003a5a:	bf00      	nop
 8003a5c:	007a1200 	.word	0x007a1200
 8003a60:	431bde83 	.word	0x431bde83
 8003a64:	000186a0 	.word	0x000186a0
 8003a68:	10624dd3 	.word	0x10624dd3

08003a6c <I2C_StructInit>:
 8003a6c:	b480      	push	{r7}
 8003a6e:	b083      	sub	sp, #12
 8003a70:	af00      	add	r7, sp, #0
 8003a72:	6078      	str	r0, [r7, #4]
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	f241 3288 	movw	r2, #5000	; 0x1388
 8003a7a:	601a      	str	r2, [r3, #0]
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	2200      	movs	r2, #0
 8003a80:	809a      	strh	r2, [r3, #4]
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 8003a88:	80da      	strh	r2, [r3, #6]
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	2200      	movs	r2, #0
 8003a8e:	811a      	strh	r2, [r3, #8]
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	2200      	movs	r2, #0
 8003a94:	815a      	strh	r2, [r3, #10]
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8003a9c:	819a      	strh	r2, [r3, #12]
 8003a9e:	370c      	adds	r7, #12
 8003aa0:	46bd      	mov	sp, r7
 8003aa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aa6:	4770      	bx	lr

08003aa8 <I2C_Cmd>:
 8003aa8:	b480      	push	{r7}
 8003aaa:	b083      	sub	sp, #12
 8003aac:	af00      	add	r7, sp, #0
 8003aae:	6078      	str	r0, [r7, #4]
 8003ab0:	460b      	mov	r3, r1
 8003ab2:	70fb      	strb	r3, [r7, #3]
 8003ab4:	78fb      	ldrb	r3, [r7, #3]
 8003ab6:	2b00      	cmp	r3, #0
 8003ab8:	d008      	beq.n	8003acc <I2C_Cmd+0x24>
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	881b      	ldrh	r3, [r3, #0]
 8003abe:	b29b      	uxth	r3, r3
 8003ac0:	f043 0301 	orr.w	r3, r3, #1
 8003ac4:	b29a      	uxth	r2, r3
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	801a      	strh	r2, [r3, #0]
 8003aca:	e007      	b.n	8003adc <I2C_Cmd+0x34>
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	881b      	ldrh	r3, [r3, #0]
 8003ad0:	b29b      	uxth	r3, r3
 8003ad2:	f023 0301 	bic.w	r3, r3, #1
 8003ad6:	b29a      	uxth	r2, r3
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	801a      	strh	r2, [r3, #0]
 8003adc:	370c      	adds	r7, #12
 8003ade:	46bd      	mov	sp, r7
 8003ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ae4:	4770      	bx	lr
 8003ae6:	bf00      	nop

08003ae8 <I2C_GenerateSTART>:
 8003ae8:	b480      	push	{r7}
 8003aea:	b083      	sub	sp, #12
 8003aec:	af00      	add	r7, sp, #0
 8003aee:	6078      	str	r0, [r7, #4]
 8003af0:	460b      	mov	r3, r1
 8003af2:	70fb      	strb	r3, [r7, #3]
 8003af4:	78fb      	ldrb	r3, [r7, #3]
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d008      	beq.n	8003b0c <I2C_GenerateSTART+0x24>
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	881b      	ldrh	r3, [r3, #0]
 8003afe:	b29b      	uxth	r3, r3
 8003b00:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003b04:	b29a      	uxth	r2, r3
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	801a      	strh	r2, [r3, #0]
 8003b0a:	e007      	b.n	8003b1c <I2C_GenerateSTART+0x34>
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	881b      	ldrh	r3, [r3, #0]
 8003b10:	b29b      	uxth	r3, r3
 8003b12:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003b16:	b29a      	uxth	r2, r3
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	801a      	strh	r2, [r3, #0]
 8003b1c:	370c      	adds	r7, #12
 8003b1e:	46bd      	mov	sp, r7
 8003b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b24:	4770      	bx	lr
 8003b26:	bf00      	nop

08003b28 <I2C_GenerateSTOP>:
 8003b28:	b480      	push	{r7}
 8003b2a:	b083      	sub	sp, #12
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	6078      	str	r0, [r7, #4]
 8003b30:	460b      	mov	r3, r1
 8003b32:	70fb      	strb	r3, [r7, #3]
 8003b34:	78fb      	ldrb	r3, [r7, #3]
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d008      	beq.n	8003b4c <I2C_GenerateSTOP+0x24>
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	881b      	ldrh	r3, [r3, #0]
 8003b3e:	b29b      	uxth	r3, r3
 8003b40:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003b44:	b29a      	uxth	r2, r3
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	801a      	strh	r2, [r3, #0]
 8003b4a:	e007      	b.n	8003b5c <I2C_GenerateSTOP+0x34>
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	881b      	ldrh	r3, [r3, #0]
 8003b50:	b29b      	uxth	r3, r3
 8003b52:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003b56:	b29a      	uxth	r2, r3
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	801a      	strh	r2, [r3, #0]
 8003b5c:	370c      	adds	r7, #12
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b64:	4770      	bx	lr
 8003b66:	bf00      	nop

08003b68 <I2C_Send7bitAddress>:
 8003b68:	b480      	push	{r7}
 8003b6a:	b083      	sub	sp, #12
 8003b6c:	af00      	add	r7, sp, #0
 8003b6e:	6078      	str	r0, [r7, #4]
 8003b70:	4613      	mov	r3, r2
 8003b72:	460a      	mov	r2, r1
 8003b74:	70fa      	strb	r2, [r7, #3]
 8003b76:	70bb      	strb	r3, [r7, #2]
 8003b78:	78bb      	ldrb	r3, [r7, #2]
 8003b7a:	2b00      	cmp	r3, #0
 8003b7c:	d004      	beq.n	8003b88 <I2C_Send7bitAddress+0x20>
 8003b7e:	78fb      	ldrb	r3, [r7, #3]
 8003b80:	f043 0301 	orr.w	r3, r3, #1
 8003b84:	70fb      	strb	r3, [r7, #3]
 8003b86:	e003      	b.n	8003b90 <I2C_Send7bitAddress+0x28>
 8003b88:	78fb      	ldrb	r3, [r7, #3]
 8003b8a:	f023 0301 	bic.w	r3, r3, #1
 8003b8e:	70fb      	strb	r3, [r7, #3]
 8003b90:	78fb      	ldrb	r3, [r7, #3]
 8003b92:	b29a      	uxth	r2, r3
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	821a      	strh	r2, [r3, #16]
 8003b98:	370c      	adds	r7, #12
 8003b9a:	46bd      	mov	sp, r7
 8003b9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ba0:	4770      	bx	lr
 8003ba2:	bf00      	nop

08003ba4 <I2C_AcknowledgeConfig>:
 8003ba4:	b480      	push	{r7}
 8003ba6:	b083      	sub	sp, #12
 8003ba8:	af00      	add	r7, sp, #0
 8003baa:	6078      	str	r0, [r7, #4]
 8003bac:	460b      	mov	r3, r1
 8003bae:	70fb      	strb	r3, [r7, #3]
 8003bb0:	78fb      	ldrb	r3, [r7, #3]
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	d008      	beq.n	8003bc8 <I2C_AcknowledgeConfig+0x24>
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	881b      	ldrh	r3, [r3, #0]
 8003bba:	b29b      	uxth	r3, r3
 8003bbc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003bc0:	b29a      	uxth	r2, r3
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	801a      	strh	r2, [r3, #0]
 8003bc6:	e007      	b.n	8003bd8 <I2C_AcknowledgeConfig+0x34>
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	881b      	ldrh	r3, [r3, #0]
 8003bcc:	b29b      	uxth	r3, r3
 8003bce:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003bd2:	b29a      	uxth	r2, r3
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	801a      	strh	r2, [r3, #0]
 8003bd8:	370c      	adds	r7, #12
 8003bda:	46bd      	mov	sp, r7
 8003bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003be0:	4770      	bx	lr
 8003be2:	bf00      	nop

08003be4 <I2C_SoftwareResetCmd>:
 8003be4:	b480      	push	{r7}
 8003be6:	b083      	sub	sp, #12
 8003be8:	af00      	add	r7, sp, #0
 8003bea:	6078      	str	r0, [r7, #4]
 8003bec:	460b      	mov	r3, r1
 8003bee:	70fb      	strb	r3, [r7, #3]
 8003bf0:	78fb      	ldrb	r3, [r7, #3]
 8003bf2:	2b00      	cmp	r3, #0
 8003bf4:	d00a      	beq.n	8003c0c <I2C_SoftwareResetCmd+0x28>
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	881b      	ldrh	r3, [r3, #0]
 8003bfa:	b29b      	uxth	r3, r3
 8003bfc:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003c00:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003c04:	b29a      	uxth	r2, r3
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	801a      	strh	r2, [r3, #0]
 8003c0a:	e007      	b.n	8003c1c <I2C_SoftwareResetCmd+0x38>
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	881b      	ldrh	r3, [r3, #0]
 8003c10:	b29b      	uxth	r3, r3
 8003c12:	f3c3 030e 	ubfx	r3, r3, #0, #15
 8003c16:	b29a      	uxth	r2, r3
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	801a      	strh	r2, [r3, #0]
 8003c1c:	370c      	adds	r7, #12
 8003c1e:	46bd      	mov	sp, r7
 8003c20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c24:	4770      	bx	lr
 8003c26:	bf00      	nop

08003c28 <I2C_SendData>:
 8003c28:	b480      	push	{r7}
 8003c2a:	b083      	sub	sp, #12
 8003c2c:	af00      	add	r7, sp, #0
 8003c2e:	6078      	str	r0, [r7, #4]
 8003c30:	460b      	mov	r3, r1
 8003c32:	70fb      	strb	r3, [r7, #3]
 8003c34:	78fb      	ldrb	r3, [r7, #3]
 8003c36:	b29a      	uxth	r2, r3
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	821a      	strh	r2, [r3, #16]
 8003c3c:	370c      	adds	r7, #12
 8003c3e:	46bd      	mov	sp, r7
 8003c40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c44:	4770      	bx	lr
 8003c46:	bf00      	nop

08003c48 <I2C_ReceiveData>:
 8003c48:	b480      	push	{r7}
 8003c4a:	b083      	sub	sp, #12
 8003c4c:	af00      	add	r7, sp, #0
 8003c4e:	6078      	str	r0, [r7, #4]
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	8a1b      	ldrh	r3, [r3, #16]
 8003c54:	b29b      	uxth	r3, r3
 8003c56:	b2db      	uxtb	r3, r3
 8003c58:	4618      	mov	r0, r3
 8003c5a:	370c      	adds	r7, #12
 8003c5c:	46bd      	mov	sp, r7
 8003c5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c62:	4770      	bx	lr

08003c64 <I2C_CheckEvent>:
 8003c64:	b480      	push	{r7}
 8003c66:	b087      	sub	sp, #28
 8003c68:	af00      	add	r7, sp, #0
 8003c6a:	6078      	str	r0, [r7, #4]
 8003c6c:	6039      	str	r1, [r7, #0]
 8003c6e:	2300      	movs	r3, #0
 8003c70:	613b      	str	r3, [r7, #16]
 8003c72:	2300      	movs	r3, #0
 8003c74:	60fb      	str	r3, [r7, #12]
 8003c76:	2300      	movs	r3, #0
 8003c78:	60bb      	str	r3, [r7, #8]
 8003c7a:	2300      	movs	r3, #0
 8003c7c:	75fb      	strb	r3, [r7, #23]
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	8a9b      	ldrh	r3, [r3, #20]
 8003c82:	b29b      	uxth	r3, r3
 8003c84:	60fb      	str	r3, [r7, #12]
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	8b1b      	ldrh	r3, [r3, #24]
 8003c8a:	b29b      	uxth	r3, r3
 8003c8c:	60bb      	str	r3, [r7, #8]
 8003c8e:	68bb      	ldr	r3, [r7, #8]
 8003c90:	041b      	lsls	r3, r3, #16
 8003c92:	60bb      	str	r3, [r7, #8]
 8003c94:	68fa      	ldr	r2, [r7, #12]
 8003c96:	68bb      	ldr	r3, [r7, #8]
 8003c98:	4313      	orrs	r3, r2
 8003c9a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003c9e:	613b      	str	r3, [r7, #16]
 8003ca0:	693a      	ldr	r2, [r7, #16]
 8003ca2:	683b      	ldr	r3, [r7, #0]
 8003ca4:	401a      	ands	r2, r3
 8003ca6:	683b      	ldr	r3, [r7, #0]
 8003ca8:	429a      	cmp	r2, r3
 8003caa:	d102      	bne.n	8003cb2 <I2C_CheckEvent+0x4e>
 8003cac:	2301      	movs	r3, #1
 8003cae:	75fb      	strb	r3, [r7, #23]
 8003cb0:	e001      	b.n	8003cb6 <I2C_CheckEvent+0x52>
 8003cb2:	2300      	movs	r3, #0
 8003cb4:	75fb      	strb	r3, [r7, #23]
 8003cb6:	7dfb      	ldrb	r3, [r7, #23]
 8003cb8:	4618      	mov	r0, r3
 8003cba:	371c      	adds	r7, #28
 8003cbc:	46bd      	mov	sp, r7
 8003cbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cc2:	4770      	bx	lr

08003cc4 <I2C_GetFlagStatus>:
 8003cc4:	b480      	push	{r7}
 8003cc6:	b087      	sub	sp, #28
 8003cc8:	af00      	add	r7, sp, #0
 8003cca:	6078      	str	r0, [r7, #4]
 8003ccc:	6039      	str	r1, [r7, #0]
 8003cce:	2300      	movs	r3, #0
 8003cd0:	75fb      	strb	r3, [r7, #23]
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	613b      	str	r3, [r7, #16]
 8003cd6:	2300      	movs	r3, #0
 8003cd8:	60fb      	str	r3, [r7, #12]
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	60fb      	str	r3, [r7, #12]
 8003cde:	683b      	ldr	r3, [r7, #0]
 8003ce0:	0f1b      	lsrs	r3, r3, #28
 8003ce2:	613b      	str	r3, [r7, #16]
 8003ce4:	683b      	ldr	r3, [r7, #0]
 8003ce6:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003cea:	603b      	str	r3, [r7, #0]
 8003cec:	693b      	ldr	r3, [r7, #16]
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d003      	beq.n	8003cfa <I2C_GetFlagStatus+0x36>
 8003cf2:	68fb      	ldr	r3, [r7, #12]
 8003cf4:	3314      	adds	r3, #20
 8003cf6:	60fb      	str	r3, [r7, #12]
 8003cf8:	e005      	b.n	8003d06 <I2C_GetFlagStatus+0x42>
 8003cfa:	683b      	ldr	r3, [r7, #0]
 8003cfc:	0c1b      	lsrs	r3, r3, #16
 8003cfe:	603b      	str	r3, [r7, #0]
 8003d00:	68fb      	ldr	r3, [r7, #12]
 8003d02:	3318      	adds	r3, #24
 8003d04:	60fb      	str	r3, [r7, #12]
 8003d06:	68fb      	ldr	r3, [r7, #12]
 8003d08:	681a      	ldr	r2, [r3, #0]
 8003d0a:	683b      	ldr	r3, [r7, #0]
 8003d0c:	4013      	ands	r3, r2
 8003d0e:	2b00      	cmp	r3, #0
 8003d10:	d002      	beq.n	8003d18 <I2C_GetFlagStatus+0x54>
 8003d12:	2301      	movs	r3, #1
 8003d14:	75fb      	strb	r3, [r7, #23]
 8003d16:	e001      	b.n	8003d1c <I2C_GetFlagStatus+0x58>
 8003d18:	2300      	movs	r3, #0
 8003d1a:	75fb      	strb	r3, [r7, #23]
 8003d1c:	7dfb      	ldrb	r3, [r7, #23]
 8003d1e:	4618      	mov	r0, r3
 8003d20:	371c      	adds	r7, #28
 8003d22:	46bd      	mov	sp, r7
 8003d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d28:	4770      	bx	lr
 8003d2a:	bf00      	nop

08003d2c <I2C_ClearFlag>:
 8003d2c:	b480      	push	{r7}
 8003d2e:	b085      	sub	sp, #20
 8003d30:	af00      	add	r7, sp, #0
 8003d32:	6078      	str	r0, [r7, #4]
 8003d34:	6039      	str	r1, [r7, #0]
 8003d36:	2300      	movs	r3, #0
 8003d38:	60fb      	str	r3, [r7, #12]
 8003d3a:	683b      	ldr	r3, [r7, #0]
 8003d3c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003d40:	60fb      	str	r3, [r7, #12]
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	b29b      	uxth	r3, r3
 8003d46:	43db      	mvns	r3, r3
 8003d48:	b29a      	uxth	r2, r3
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	829a      	strh	r2, [r3, #20]
 8003d4e:	3714      	adds	r7, #20
 8003d50:	46bd      	mov	sp, r7
 8003d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d56:	4770      	bx	lr

08003d58 <RCC_GetClocksFreq>:
 8003d58:	b480      	push	{r7}
 8003d5a:	b089      	sub	sp, #36	; 0x24
 8003d5c:	af00      	add	r7, sp, #0
 8003d5e:	6078      	str	r0, [r7, #4]
 8003d60:	2300      	movs	r3, #0
 8003d62:	61bb      	str	r3, [r7, #24]
 8003d64:	2300      	movs	r3, #0
 8003d66:	617b      	str	r3, [r7, #20]
 8003d68:	2300      	movs	r3, #0
 8003d6a:	61fb      	str	r3, [r7, #28]
 8003d6c:	2302      	movs	r3, #2
 8003d6e:	613b      	str	r3, [r7, #16]
 8003d70:	2300      	movs	r3, #0
 8003d72:	60fb      	str	r3, [r7, #12]
 8003d74:	2302      	movs	r3, #2
 8003d76:	60bb      	str	r3, [r7, #8]
 8003d78:	4b48      	ldr	r3, [pc, #288]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003d7a:	689b      	ldr	r3, [r3, #8]
 8003d7c:	f003 030c 	and.w	r3, r3, #12
 8003d80:	61bb      	str	r3, [r7, #24]
 8003d82:	69bb      	ldr	r3, [r7, #24]
 8003d84:	2b04      	cmp	r3, #4
 8003d86:	d007      	beq.n	8003d98 <RCC_GetClocksFreq+0x40>
 8003d88:	2b08      	cmp	r3, #8
 8003d8a:	d009      	beq.n	8003da0 <RCC_GetClocksFreq+0x48>
 8003d8c:	2b00      	cmp	r3, #0
 8003d8e:	d13f      	bne.n	8003e10 <RCC_GetClocksFreq+0xb8>
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	4a43      	ldr	r2, [pc, #268]	; (8003ea0 <RCC_GetClocksFreq+0x148>)
 8003d94:	601a      	str	r2, [r3, #0]
 8003d96:	e03f      	b.n	8003e18 <RCC_GetClocksFreq+0xc0>
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	4a42      	ldr	r2, [pc, #264]	; (8003ea4 <RCC_GetClocksFreq+0x14c>)
 8003d9c:	601a      	str	r2, [r3, #0]
 8003d9e:	e03b      	b.n	8003e18 <RCC_GetClocksFreq+0xc0>
 8003da0:	4b3e      	ldr	r3, [pc, #248]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003da2:	685b      	ldr	r3, [r3, #4]
 8003da4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003da8:	0d9b      	lsrs	r3, r3, #22
 8003daa:	60fb      	str	r3, [r7, #12]
 8003dac:	4b3b      	ldr	r3, [pc, #236]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003dae:	685b      	ldr	r3, [r3, #4]
 8003db0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003db4:	60bb      	str	r3, [r7, #8]
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d00d      	beq.n	8003dd8 <RCC_GetClocksFreq+0x80>
 8003dbc:	4a39      	ldr	r2, [pc, #228]	; (8003ea4 <RCC_GetClocksFreq+0x14c>)
 8003dbe:	68bb      	ldr	r3, [r7, #8]
 8003dc0:	fbb2 f2f3 	udiv	r2, r2, r3
 8003dc4:	4b35      	ldr	r3, [pc, #212]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003dc6:	6859      	ldr	r1, [r3, #4]
 8003dc8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8003dcc:	400b      	ands	r3, r1
 8003dce:	099b      	lsrs	r3, r3, #6
 8003dd0:	fb03 f302 	mul.w	r3, r3, r2
 8003dd4:	61fb      	str	r3, [r7, #28]
 8003dd6:	e00c      	b.n	8003df2 <RCC_GetClocksFreq+0x9a>
 8003dd8:	4a31      	ldr	r2, [pc, #196]	; (8003ea0 <RCC_GetClocksFreq+0x148>)
 8003dda:	68bb      	ldr	r3, [r7, #8]
 8003ddc:	fbb2 f2f3 	udiv	r2, r2, r3
 8003de0:	4b2e      	ldr	r3, [pc, #184]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003de2:	6859      	ldr	r1, [r3, #4]
 8003de4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8003de8:	400b      	ands	r3, r1
 8003dea:	099b      	lsrs	r3, r3, #6
 8003dec:	fb03 f302 	mul.w	r3, r3, r2
 8003df0:	61fb      	str	r3, [r7, #28]
 8003df2:	4b2a      	ldr	r3, [pc, #168]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003df4:	685b      	ldr	r3, [r3, #4]
 8003df6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003dfa:	0c1b      	lsrs	r3, r3, #16
 8003dfc:	3301      	adds	r3, #1
 8003dfe:	005b      	lsls	r3, r3, #1
 8003e00:	613b      	str	r3, [r7, #16]
 8003e02:	69fa      	ldr	r2, [r7, #28]
 8003e04:	693b      	ldr	r3, [r7, #16]
 8003e06:	fbb2 f2f3 	udiv	r2, r2, r3
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	601a      	str	r2, [r3, #0]
 8003e0e:	e003      	b.n	8003e18 <RCC_GetClocksFreq+0xc0>
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	4a23      	ldr	r2, [pc, #140]	; (8003ea0 <RCC_GetClocksFreq+0x148>)
 8003e14:	601a      	str	r2, [r3, #0]
 8003e16:	bf00      	nop
 8003e18:	4b20      	ldr	r3, [pc, #128]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003e1a:	689b      	ldr	r3, [r3, #8]
 8003e1c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003e20:	61bb      	str	r3, [r7, #24]
 8003e22:	69bb      	ldr	r3, [r7, #24]
 8003e24:	091b      	lsrs	r3, r3, #4
 8003e26:	61bb      	str	r3, [r7, #24]
 8003e28:	4a1f      	ldr	r2, [pc, #124]	; (8003ea8 <RCC_GetClocksFreq+0x150>)
 8003e2a:	69bb      	ldr	r3, [r7, #24]
 8003e2c:	4413      	add	r3, r2
 8003e2e:	781b      	ldrb	r3, [r3, #0]
 8003e30:	b2db      	uxtb	r3, r3
 8003e32:	617b      	str	r3, [r7, #20]
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	681a      	ldr	r2, [r3, #0]
 8003e38:	697b      	ldr	r3, [r7, #20]
 8003e3a:	40da      	lsrs	r2, r3
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	605a      	str	r2, [r3, #4]
 8003e40:	4b16      	ldr	r3, [pc, #88]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003e42:	689b      	ldr	r3, [r3, #8]
 8003e44:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8003e48:	61bb      	str	r3, [r7, #24]
 8003e4a:	69bb      	ldr	r3, [r7, #24]
 8003e4c:	0a9b      	lsrs	r3, r3, #10
 8003e4e:	61bb      	str	r3, [r7, #24]
 8003e50:	4a15      	ldr	r2, [pc, #84]	; (8003ea8 <RCC_GetClocksFreq+0x150>)
 8003e52:	69bb      	ldr	r3, [r7, #24]
 8003e54:	4413      	add	r3, r2
 8003e56:	781b      	ldrb	r3, [r3, #0]
 8003e58:	b2db      	uxtb	r3, r3
 8003e5a:	617b      	str	r3, [r7, #20]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	685a      	ldr	r2, [r3, #4]
 8003e60:	697b      	ldr	r3, [r7, #20]
 8003e62:	40da      	lsrs	r2, r3
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	609a      	str	r2, [r3, #8]
 8003e68:	4b0c      	ldr	r3, [pc, #48]	; (8003e9c <RCC_GetClocksFreq+0x144>)
 8003e6a:	689b      	ldr	r3, [r3, #8]
 8003e6c:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8003e70:	61bb      	str	r3, [r7, #24]
 8003e72:	69bb      	ldr	r3, [r7, #24]
 8003e74:	0b5b      	lsrs	r3, r3, #13
 8003e76:	61bb      	str	r3, [r7, #24]
 8003e78:	4a0b      	ldr	r2, [pc, #44]	; (8003ea8 <RCC_GetClocksFreq+0x150>)
 8003e7a:	69bb      	ldr	r3, [r7, #24]
 8003e7c:	4413      	add	r3, r2
 8003e7e:	781b      	ldrb	r3, [r3, #0]
 8003e80:	b2db      	uxtb	r3, r3
 8003e82:	617b      	str	r3, [r7, #20]
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	685a      	ldr	r2, [r3, #4]
 8003e88:	697b      	ldr	r3, [r7, #20]
 8003e8a:	40da      	lsrs	r2, r3
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	60da      	str	r2, [r3, #12]
 8003e90:	3724      	adds	r7, #36	; 0x24
 8003e92:	46bd      	mov	sp, r7
 8003e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e98:	4770      	bx	lr
 8003e9a:	bf00      	nop
 8003e9c:	40023800 	.word	0x40023800
 8003ea0:	00f42400 	.word	0x00f42400
 8003ea4:	017d7840 	.word	0x017d7840
 8003ea8:	2000011c 	.word	0x2000011c

08003eac <RCC_AHB1PeriphClockCmd>:
 8003eac:	b480      	push	{r7}
 8003eae:	b083      	sub	sp, #12
 8003eb0:	af00      	add	r7, sp, #0
 8003eb2:	6078      	str	r0, [r7, #4]
 8003eb4:	460b      	mov	r3, r1
 8003eb6:	70fb      	strb	r3, [r7, #3]
 8003eb8:	78fb      	ldrb	r3, [r7, #3]
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d006      	beq.n	8003ecc <RCC_AHB1PeriphClockCmd+0x20>
 8003ebe:	4b09      	ldr	r3, [pc, #36]	; (8003ee4 <RCC_AHB1PeriphClockCmd+0x38>)
 8003ec0:	4a08      	ldr	r2, [pc, #32]	; (8003ee4 <RCC_AHB1PeriphClockCmd+0x38>)
 8003ec2:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003ec4:	687a      	ldr	r2, [r7, #4]
 8003ec6:	430a      	orrs	r2, r1
 8003ec8:	631a      	str	r2, [r3, #48]	; 0x30
 8003eca:	e006      	b.n	8003eda <RCC_AHB1PeriphClockCmd+0x2e>
 8003ecc:	4b05      	ldr	r3, [pc, #20]	; (8003ee4 <RCC_AHB1PeriphClockCmd+0x38>)
 8003ece:	4a05      	ldr	r2, [pc, #20]	; (8003ee4 <RCC_AHB1PeriphClockCmd+0x38>)
 8003ed0:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003ed2:	687a      	ldr	r2, [r7, #4]
 8003ed4:	43d2      	mvns	r2, r2
 8003ed6:	400a      	ands	r2, r1
 8003ed8:	631a      	str	r2, [r3, #48]	; 0x30
 8003eda:	370c      	adds	r7, #12
 8003edc:	46bd      	mov	sp, r7
 8003ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ee2:	4770      	bx	lr
 8003ee4:	40023800 	.word	0x40023800

08003ee8 <RCC_AHB3PeriphClockCmd>:
 8003ee8:	b480      	push	{r7}
 8003eea:	b083      	sub	sp, #12
 8003eec:	af00      	add	r7, sp, #0
 8003eee:	6078      	str	r0, [r7, #4]
 8003ef0:	460b      	mov	r3, r1
 8003ef2:	70fb      	strb	r3, [r7, #3]
 8003ef4:	78fb      	ldrb	r3, [r7, #3]
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d006      	beq.n	8003f08 <RCC_AHB3PeriphClockCmd+0x20>
 8003efa:	4b09      	ldr	r3, [pc, #36]	; (8003f20 <RCC_AHB3PeriphClockCmd+0x38>)
 8003efc:	4a08      	ldr	r2, [pc, #32]	; (8003f20 <RCC_AHB3PeriphClockCmd+0x38>)
 8003efe:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8003f00:	687a      	ldr	r2, [r7, #4]
 8003f02:	430a      	orrs	r2, r1
 8003f04:	639a      	str	r2, [r3, #56]	; 0x38
 8003f06:	e006      	b.n	8003f16 <RCC_AHB3PeriphClockCmd+0x2e>
 8003f08:	4b05      	ldr	r3, [pc, #20]	; (8003f20 <RCC_AHB3PeriphClockCmd+0x38>)
 8003f0a:	4a05      	ldr	r2, [pc, #20]	; (8003f20 <RCC_AHB3PeriphClockCmd+0x38>)
 8003f0c:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8003f0e:	687a      	ldr	r2, [r7, #4]
 8003f10:	43d2      	mvns	r2, r2
 8003f12:	400a      	ands	r2, r1
 8003f14:	639a      	str	r2, [r3, #56]	; 0x38
 8003f16:	370c      	adds	r7, #12
 8003f18:	46bd      	mov	sp, r7
 8003f1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f1e:	4770      	bx	lr
 8003f20:	40023800 	.word	0x40023800

08003f24 <RCC_APB1PeriphClockCmd>:
 8003f24:	b480      	push	{r7}
 8003f26:	b083      	sub	sp, #12
 8003f28:	af00      	add	r7, sp, #0
 8003f2a:	6078      	str	r0, [r7, #4]
 8003f2c:	460b      	mov	r3, r1
 8003f2e:	70fb      	strb	r3, [r7, #3]
 8003f30:	78fb      	ldrb	r3, [r7, #3]
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d006      	beq.n	8003f44 <RCC_APB1PeriphClockCmd+0x20>
 8003f36:	4b09      	ldr	r3, [pc, #36]	; (8003f5c <RCC_APB1PeriphClockCmd+0x38>)
 8003f38:	4a08      	ldr	r2, [pc, #32]	; (8003f5c <RCC_APB1PeriphClockCmd+0x38>)
 8003f3a:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8003f3c:	687a      	ldr	r2, [r7, #4]
 8003f3e:	430a      	orrs	r2, r1
 8003f40:	641a      	str	r2, [r3, #64]	; 0x40
 8003f42:	e006      	b.n	8003f52 <RCC_APB1PeriphClockCmd+0x2e>
 8003f44:	4b05      	ldr	r3, [pc, #20]	; (8003f5c <RCC_APB1PeriphClockCmd+0x38>)
 8003f46:	4a05      	ldr	r2, [pc, #20]	; (8003f5c <RCC_APB1PeriphClockCmd+0x38>)
 8003f48:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8003f4a:	687a      	ldr	r2, [r7, #4]
 8003f4c:	43d2      	mvns	r2, r2
 8003f4e:	400a      	ands	r2, r1
 8003f50:	641a      	str	r2, [r3, #64]	; 0x40
 8003f52:	370c      	adds	r7, #12
 8003f54:	46bd      	mov	sp, r7
 8003f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f5a:	4770      	bx	lr
 8003f5c:	40023800 	.word	0x40023800

08003f60 <RCC_APB2PeriphClockCmd>:
 8003f60:	b480      	push	{r7}
 8003f62:	b083      	sub	sp, #12
 8003f64:	af00      	add	r7, sp, #0
 8003f66:	6078      	str	r0, [r7, #4]
 8003f68:	460b      	mov	r3, r1
 8003f6a:	70fb      	strb	r3, [r7, #3]
 8003f6c:	78fb      	ldrb	r3, [r7, #3]
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	d006      	beq.n	8003f80 <RCC_APB2PeriphClockCmd+0x20>
 8003f72:	4b09      	ldr	r3, [pc, #36]	; (8003f98 <RCC_APB2PeriphClockCmd+0x38>)
 8003f74:	4a08      	ldr	r2, [pc, #32]	; (8003f98 <RCC_APB2PeriphClockCmd+0x38>)
 8003f76:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8003f78:	687a      	ldr	r2, [r7, #4]
 8003f7a:	430a      	orrs	r2, r1
 8003f7c:	645a      	str	r2, [r3, #68]	; 0x44
 8003f7e:	e006      	b.n	8003f8e <RCC_APB2PeriphClockCmd+0x2e>
 8003f80:	4b05      	ldr	r3, [pc, #20]	; (8003f98 <RCC_APB2PeriphClockCmd+0x38>)
 8003f82:	4a05      	ldr	r2, [pc, #20]	; (8003f98 <RCC_APB2PeriphClockCmd+0x38>)
 8003f84:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8003f86:	687a      	ldr	r2, [r7, #4]
 8003f88:	43d2      	mvns	r2, r2
 8003f8a:	400a      	ands	r2, r1
 8003f8c:	645a      	str	r2, [r3, #68]	; 0x44
 8003f8e:	370c      	adds	r7, #12
 8003f90:	46bd      	mov	sp, r7
 8003f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f96:	4770      	bx	lr
 8003f98:	40023800 	.word	0x40023800

08003f9c <RCC_AHB1PeriphResetCmd>:
 8003f9c:	b480      	push	{r7}
 8003f9e:	b083      	sub	sp, #12
 8003fa0:	af00      	add	r7, sp, #0
 8003fa2:	6078      	str	r0, [r7, #4]
 8003fa4:	460b      	mov	r3, r1
 8003fa6:	70fb      	strb	r3, [r7, #3]
 8003fa8:	78fb      	ldrb	r3, [r7, #3]
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d006      	beq.n	8003fbc <RCC_AHB1PeriphResetCmd+0x20>
 8003fae:	4b09      	ldr	r3, [pc, #36]	; (8003fd4 <RCC_AHB1PeriphResetCmd+0x38>)
 8003fb0:	4a08      	ldr	r2, [pc, #32]	; (8003fd4 <RCC_AHB1PeriphResetCmd+0x38>)
 8003fb2:	6911      	ldr	r1, [r2, #16]
 8003fb4:	687a      	ldr	r2, [r7, #4]
 8003fb6:	430a      	orrs	r2, r1
 8003fb8:	611a      	str	r2, [r3, #16]
 8003fba:	e006      	b.n	8003fca <RCC_AHB1PeriphResetCmd+0x2e>
 8003fbc:	4b05      	ldr	r3, [pc, #20]	; (8003fd4 <RCC_AHB1PeriphResetCmd+0x38>)
 8003fbe:	4a05      	ldr	r2, [pc, #20]	; (8003fd4 <RCC_AHB1PeriphResetCmd+0x38>)
 8003fc0:	6911      	ldr	r1, [r2, #16]
 8003fc2:	687a      	ldr	r2, [r7, #4]
 8003fc4:	43d2      	mvns	r2, r2
 8003fc6:	400a      	ands	r2, r1
 8003fc8:	611a      	str	r2, [r3, #16]
 8003fca:	370c      	adds	r7, #12
 8003fcc:	46bd      	mov	sp, r7
 8003fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fd2:	4770      	bx	lr
 8003fd4:	40023800 	.word	0x40023800

08003fd8 <RCC_APB1PeriphResetCmd>:
 8003fd8:	b480      	push	{r7}
 8003fda:	b083      	sub	sp, #12
 8003fdc:	af00      	add	r7, sp, #0
 8003fde:	6078      	str	r0, [r7, #4]
 8003fe0:	460b      	mov	r3, r1
 8003fe2:	70fb      	strb	r3, [r7, #3]
 8003fe4:	78fb      	ldrb	r3, [r7, #3]
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	d006      	beq.n	8003ff8 <RCC_APB1PeriphResetCmd+0x20>
 8003fea:	4b09      	ldr	r3, [pc, #36]	; (8004010 <RCC_APB1PeriphResetCmd+0x38>)
 8003fec:	4a08      	ldr	r2, [pc, #32]	; (8004010 <RCC_APB1PeriphResetCmd+0x38>)
 8003fee:	6a11      	ldr	r1, [r2, #32]
 8003ff0:	687a      	ldr	r2, [r7, #4]
 8003ff2:	430a      	orrs	r2, r1
 8003ff4:	621a      	str	r2, [r3, #32]
 8003ff6:	e006      	b.n	8004006 <RCC_APB1PeriphResetCmd+0x2e>
 8003ff8:	4b05      	ldr	r3, [pc, #20]	; (8004010 <RCC_APB1PeriphResetCmd+0x38>)
 8003ffa:	4a05      	ldr	r2, [pc, #20]	; (8004010 <RCC_APB1PeriphResetCmd+0x38>)
 8003ffc:	6a11      	ldr	r1, [r2, #32]
 8003ffe:	687a      	ldr	r2, [r7, #4]
 8004000:	43d2      	mvns	r2, r2
 8004002:	400a      	ands	r2, r1
 8004004:	621a      	str	r2, [r3, #32]
 8004006:	370c      	adds	r7, #12
 8004008:	46bd      	mov	sp, r7
 800400a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800400e:	4770      	bx	lr
 8004010:	40023800 	.word	0x40023800

08004014 <RCC_APB2PeriphResetCmd>:
 8004014:	b480      	push	{r7}
 8004016:	b083      	sub	sp, #12
 8004018:	af00      	add	r7, sp, #0
 800401a:	6078      	str	r0, [r7, #4]
 800401c:	460b      	mov	r3, r1
 800401e:	70fb      	strb	r3, [r7, #3]
 8004020:	78fb      	ldrb	r3, [r7, #3]
 8004022:	2b00      	cmp	r3, #0
 8004024:	d006      	beq.n	8004034 <RCC_APB2PeriphResetCmd+0x20>
 8004026:	4b09      	ldr	r3, [pc, #36]	; (800404c <RCC_APB2PeriphResetCmd+0x38>)
 8004028:	4a08      	ldr	r2, [pc, #32]	; (800404c <RCC_APB2PeriphResetCmd+0x38>)
 800402a:	6a51      	ldr	r1, [r2, #36]	; 0x24
 800402c:	687a      	ldr	r2, [r7, #4]
 800402e:	430a      	orrs	r2, r1
 8004030:	625a      	str	r2, [r3, #36]	; 0x24
 8004032:	e006      	b.n	8004042 <RCC_APB2PeriphResetCmd+0x2e>
 8004034:	4b05      	ldr	r3, [pc, #20]	; (800404c <RCC_APB2PeriphResetCmd+0x38>)
 8004036:	4a05      	ldr	r2, [pc, #20]	; (800404c <RCC_APB2PeriphResetCmd+0x38>)
 8004038:	6a51      	ldr	r1, [r2, #36]	; 0x24
 800403a:	687a      	ldr	r2, [r7, #4]
 800403c:	43d2      	mvns	r2, r2
 800403e:	400a      	ands	r2, r1
 8004040:	625a      	str	r2, [r3, #36]	; 0x24
 8004042:	370c      	adds	r7, #12
 8004044:	46bd      	mov	sp, r7
 8004046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800404a:	4770      	bx	lr
 800404c:	40023800 	.word	0x40023800

08004050 <USART_DeInit>:
 8004050:	b580      	push	{r7, lr}
 8004052:	b082      	sub	sp, #8
 8004054:	af00      	add	r7, sp, #0
 8004056:	6078      	str	r0, [r7, #4]
 8004058:	687a      	ldr	r2, [r7, #4]
 800405a:	4b3a      	ldr	r3, [pc, #232]	; (8004144 <USART_DeInit+0xf4>)
 800405c:	429a      	cmp	r2, r3
 800405e:	d108      	bne.n	8004072 <USART_DeInit+0x22>
 8004060:	2010      	movs	r0, #16
 8004062:	2101      	movs	r1, #1
 8004064:	f7ff ffd6 	bl	8004014 <RCC_APB2PeriphResetCmd>
 8004068:	2010      	movs	r0, #16
 800406a:	2100      	movs	r1, #0
 800406c:	f7ff ffd2 	bl	8004014 <RCC_APB2PeriphResetCmd>
 8004070:	e065      	b.n	800413e <USART_DeInit+0xee>
 8004072:	687a      	ldr	r2, [r7, #4]
 8004074:	4b34      	ldr	r3, [pc, #208]	; (8004148 <USART_DeInit+0xf8>)
 8004076:	429a      	cmp	r2, r3
 8004078:	d10a      	bne.n	8004090 <USART_DeInit+0x40>
 800407a:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 800407e:	2101      	movs	r1, #1
 8004080:	f7ff ffaa 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 8004084:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8004088:	2100      	movs	r1, #0
 800408a:	f7ff ffa5 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 800408e:	e056      	b.n	800413e <USART_DeInit+0xee>
 8004090:	687a      	ldr	r2, [r7, #4]
 8004092:	4b2e      	ldr	r3, [pc, #184]	; (800414c <USART_DeInit+0xfc>)
 8004094:	429a      	cmp	r2, r3
 8004096:	d10a      	bne.n	80040ae <USART_DeInit+0x5e>
 8004098:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 800409c:	2101      	movs	r1, #1
 800409e:	f7ff ff9b 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80040a2:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80040a6:	2100      	movs	r1, #0
 80040a8:	f7ff ff96 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80040ac:	e047      	b.n	800413e <USART_DeInit+0xee>
 80040ae:	687a      	ldr	r2, [r7, #4]
 80040b0:	4b27      	ldr	r3, [pc, #156]	; (8004150 <USART_DeInit+0x100>)
 80040b2:	429a      	cmp	r2, r3
 80040b4:	d10a      	bne.n	80040cc <USART_DeInit+0x7c>
 80040b6:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 80040ba:	2101      	movs	r1, #1
 80040bc:	f7ff ff8c 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80040c0:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 80040c4:	2100      	movs	r1, #0
 80040c6:	f7ff ff87 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80040ca:	e038      	b.n	800413e <USART_DeInit+0xee>
 80040cc:	687a      	ldr	r2, [r7, #4]
 80040ce:	4b21      	ldr	r3, [pc, #132]	; (8004154 <USART_DeInit+0x104>)
 80040d0:	429a      	cmp	r2, r3
 80040d2:	d10a      	bne.n	80040ea <USART_DeInit+0x9a>
 80040d4:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80040d8:	2101      	movs	r1, #1
 80040da:	f7ff ff7d 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80040de:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80040e2:	2100      	movs	r1, #0
 80040e4:	f7ff ff78 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 80040e8:	e029      	b.n	800413e <USART_DeInit+0xee>
 80040ea:	687a      	ldr	r2, [r7, #4]
 80040ec:	4b1a      	ldr	r3, [pc, #104]	; (8004158 <USART_DeInit+0x108>)
 80040ee:	429a      	cmp	r2, r3
 80040f0:	d108      	bne.n	8004104 <USART_DeInit+0xb4>
 80040f2:	2020      	movs	r0, #32
 80040f4:	2101      	movs	r1, #1
 80040f6:	f7ff ff8d 	bl	8004014 <RCC_APB2PeriphResetCmd>
 80040fa:	2020      	movs	r0, #32
 80040fc:	2100      	movs	r1, #0
 80040fe:	f7ff ff89 	bl	8004014 <RCC_APB2PeriphResetCmd>
 8004102:	e01c      	b.n	800413e <USART_DeInit+0xee>
 8004104:	687a      	ldr	r2, [r7, #4]
 8004106:	4b15      	ldr	r3, [pc, #84]	; (800415c <USART_DeInit+0x10c>)
 8004108:	429a      	cmp	r2, r3
 800410a:	d10a      	bne.n	8004122 <USART_DeInit+0xd2>
 800410c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8004110:	2101      	movs	r1, #1
 8004112:	f7ff ff61 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 8004116:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800411a:	2100      	movs	r1, #0
 800411c:	f7ff ff5c 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 8004120:	e00d      	b.n	800413e <USART_DeInit+0xee>
 8004122:	687a      	ldr	r2, [r7, #4]
 8004124:	4b0e      	ldr	r3, [pc, #56]	; (8004160 <USART_DeInit+0x110>)
 8004126:	429a      	cmp	r2, r3
 8004128:	d109      	bne.n	800413e <USART_DeInit+0xee>
 800412a:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
 800412e:	2101      	movs	r1, #1
 8004130:	f7ff ff52 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 8004134:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
 8004138:	2100      	movs	r1, #0
 800413a:	f7ff ff4d 	bl	8003fd8 <RCC_APB1PeriphResetCmd>
 800413e:	3708      	adds	r7, #8
 8004140:	46bd      	mov	sp, r7
 8004142:	bd80      	pop	{r7, pc}
 8004144:	40011000 	.word	0x40011000
 8004148:	40004400 	.word	0x40004400
 800414c:	40004800 	.word	0x40004800
 8004150:	40004c00 	.word	0x40004c00
 8004154:	40005000 	.word	0x40005000
 8004158:	40011400 	.word	0x40011400
 800415c:	40007800 	.word	0x40007800
 8004160:	40007c00 	.word	0x40007c00

08004164 <USART_Init>:
 8004164:	b580      	push	{r7, lr}
 8004166:	b08a      	sub	sp, #40	; 0x28
 8004168:	af00      	add	r7, sp, #0
 800416a:	6078      	str	r0, [r7, #4]
 800416c:	6039      	str	r1, [r7, #0]
 800416e:	2300      	movs	r3, #0
 8004170:	627b      	str	r3, [r7, #36]	; 0x24
 8004172:	2300      	movs	r3, #0
 8004174:	623b      	str	r3, [r7, #32]
 8004176:	2300      	movs	r3, #0
 8004178:	61fb      	str	r3, [r7, #28]
 800417a:	2300      	movs	r3, #0
 800417c:	61bb      	str	r3, [r7, #24]
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	8a1b      	ldrh	r3, [r3, #16]
 8004182:	b29b      	uxth	r3, r3
 8004184:	627b      	str	r3, [r7, #36]	; 0x24
 8004186:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004188:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800418c:	627b      	str	r3, [r7, #36]	; 0x24
 800418e:	683b      	ldr	r3, [r7, #0]
 8004190:	88db      	ldrh	r3, [r3, #6]
 8004192:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004194:	4313      	orrs	r3, r2
 8004196:	627b      	str	r3, [r7, #36]	; 0x24
 8004198:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800419a:	b29a      	uxth	r2, r3
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	821a      	strh	r2, [r3, #16]
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	899b      	ldrh	r3, [r3, #12]
 80041a4:	b29b      	uxth	r3, r3
 80041a6:	627b      	str	r3, [r7, #36]	; 0x24
 80041a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041aa:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80041ae:	f023 030c 	bic.w	r3, r3, #12
 80041b2:	627b      	str	r3, [r7, #36]	; 0x24
 80041b4:	683b      	ldr	r3, [r7, #0]
 80041b6:	889a      	ldrh	r2, [r3, #4]
 80041b8:	683b      	ldr	r3, [r7, #0]
 80041ba:	891b      	ldrh	r3, [r3, #8]
 80041bc:	4313      	orrs	r3, r2
 80041be:	b29a      	uxth	r2, r3
 80041c0:	683b      	ldr	r3, [r7, #0]
 80041c2:	895b      	ldrh	r3, [r3, #10]
 80041c4:	4313      	orrs	r3, r2
 80041c6:	b29b      	uxth	r3, r3
 80041c8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80041ca:	4313      	orrs	r3, r2
 80041cc:	627b      	str	r3, [r7, #36]	; 0x24
 80041ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041d0:	b29a      	uxth	r2, r3
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	819a      	strh	r2, [r3, #12]
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	8a9b      	ldrh	r3, [r3, #20]
 80041da:	b29b      	uxth	r3, r3
 80041dc:	627b      	str	r3, [r7, #36]	; 0x24
 80041de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041e0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80041e4:	627b      	str	r3, [r7, #36]	; 0x24
 80041e6:	683b      	ldr	r3, [r7, #0]
 80041e8:	899b      	ldrh	r3, [r3, #12]
 80041ea:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80041ec:	4313      	orrs	r3, r2
 80041ee:	627b      	str	r3, [r7, #36]	; 0x24
 80041f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041f2:	b29a      	uxth	r2, r3
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	829a      	strh	r2, [r3, #20]
 80041f8:	f107 0308 	add.w	r3, r7, #8
 80041fc:	4618      	mov	r0, r3
 80041fe:	f7ff fdab 	bl	8003d58 <RCC_GetClocksFreq>
 8004202:	687a      	ldr	r2, [r7, #4]
 8004204:	4b31      	ldr	r3, [pc, #196]	; (80042cc <USART_Init+0x168>)
 8004206:	429a      	cmp	r2, r3
 8004208:	d003      	beq.n	8004212 <USART_Init+0xae>
 800420a:	687a      	ldr	r2, [r7, #4]
 800420c:	4b30      	ldr	r3, [pc, #192]	; (80042d0 <USART_Init+0x16c>)
 800420e:	429a      	cmp	r2, r3
 8004210:	d102      	bne.n	8004218 <USART_Init+0xb4>
 8004212:	697b      	ldr	r3, [r7, #20]
 8004214:	623b      	str	r3, [r7, #32]
 8004216:	e001      	b.n	800421c <USART_Init+0xb8>
 8004218:	693b      	ldr	r3, [r7, #16]
 800421a:	623b      	str	r3, [r7, #32]
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	899b      	ldrh	r3, [r3, #12]
 8004220:	b29b      	uxth	r3, r3
 8004222:	b29b      	uxth	r3, r3
 8004224:	b21b      	sxth	r3, r3
 8004226:	2b00      	cmp	r3, #0
 8004228:	da0c      	bge.n	8004244 <USART_Init+0xe0>
 800422a:	6a3a      	ldr	r2, [r7, #32]
 800422c:	4613      	mov	r3, r2
 800422e:	009b      	lsls	r3, r3, #2
 8004230:	4413      	add	r3, r2
 8004232:	009a      	lsls	r2, r3, #2
 8004234:	441a      	add	r2, r3
 8004236:	683b      	ldr	r3, [r7, #0]
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	005b      	lsls	r3, r3, #1
 800423c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004240:	61fb      	str	r3, [r7, #28]
 8004242:	e00b      	b.n	800425c <USART_Init+0xf8>
 8004244:	6a3a      	ldr	r2, [r7, #32]
 8004246:	4613      	mov	r3, r2
 8004248:	009b      	lsls	r3, r3, #2
 800424a:	4413      	add	r3, r2
 800424c:	009a      	lsls	r2, r3, #2
 800424e:	441a      	add	r2, r3
 8004250:	683b      	ldr	r3, [r7, #0]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	009b      	lsls	r3, r3, #2
 8004256:	fbb2 f3f3 	udiv	r3, r2, r3
 800425a:	61fb      	str	r3, [r7, #28]
 800425c:	69fa      	ldr	r2, [r7, #28]
 800425e:	4b1d      	ldr	r3, [pc, #116]	; (80042d4 <USART_Init+0x170>)
 8004260:	fba3 1302 	umull	r1, r3, r3, r2
 8004264:	095b      	lsrs	r3, r3, #5
 8004266:	011b      	lsls	r3, r3, #4
 8004268:	627b      	str	r3, [r7, #36]	; 0x24
 800426a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800426c:	091b      	lsrs	r3, r3, #4
 800426e:	2264      	movs	r2, #100	; 0x64
 8004270:	fb02 f303 	mul.w	r3, r2, r3
 8004274:	69fa      	ldr	r2, [r7, #28]
 8004276:	1ad3      	subs	r3, r2, r3
 8004278:	61bb      	str	r3, [r7, #24]
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	899b      	ldrh	r3, [r3, #12]
 800427e:	b29b      	uxth	r3, r3
 8004280:	b29b      	uxth	r3, r3
 8004282:	b21b      	sxth	r3, r3
 8004284:	2b00      	cmp	r3, #0
 8004286:	da0d      	bge.n	80042a4 <USART_Init+0x140>
 8004288:	69bb      	ldr	r3, [r7, #24]
 800428a:	00db      	lsls	r3, r3, #3
 800428c:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8004290:	4b10      	ldr	r3, [pc, #64]	; (80042d4 <USART_Init+0x170>)
 8004292:	fba3 1302 	umull	r1, r3, r3, r2
 8004296:	095b      	lsrs	r3, r3, #5
 8004298:	f003 0307 	and.w	r3, r3, #7
 800429c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800429e:	4313      	orrs	r3, r2
 80042a0:	627b      	str	r3, [r7, #36]	; 0x24
 80042a2:	e00c      	b.n	80042be <USART_Init+0x15a>
 80042a4:	69bb      	ldr	r3, [r7, #24]
 80042a6:	011b      	lsls	r3, r3, #4
 80042a8:	f103 0232 	add.w	r2, r3, #50	; 0x32
 80042ac:	4b09      	ldr	r3, [pc, #36]	; (80042d4 <USART_Init+0x170>)
 80042ae:	fba3 1302 	umull	r1, r3, r3, r2
 80042b2:	095b      	lsrs	r3, r3, #5
 80042b4:	f003 030f 	and.w	r3, r3, #15
 80042b8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80042ba:	4313      	orrs	r3, r2
 80042bc:	627b      	str	r3, [r7, #36]	; 0x24
 80042be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80042c0:	b29a      	uxth	r2, r3
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	811a      	strh	r2, [r3, #8]
 80042c6:	3728      	adds	r7, #40	; 0x28
 80042c8:	46bd      	mov	sp, r7
 80042ca:	bd80      	pop	{r7, pc}
 80042cc:	40011000 	.word	0x40011000
 80042d0:	40011400 	.word	0x40011400
 80042d4:	51eb851f 	.word	0x51eb851f

080042d8 <USART_StructInit>:
 80042d8:	b480      	push	{r7}
 80042da:	b083      	sub	sp, #12
 80042dc:	af00      	add	r7, sp, #0
 80042de:	6078      	str	r0, [r7, #4]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80042e6:	601a      	str	r2, [r3, #0]
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	2200      	movs	r2, #0
 80042ec:	809a      	strh	r2, [r3, #4]
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	2200      	movs	r2, #0
 80042f2:	80da      	strh	r2, [r3, #6]
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	2200      	movs	r2, #0
 80042f8:	811a      	strh	r2, [r3, #8]
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	220c      	movs	r2, #12
 80042fe:	815a      	strh	r2, [r3, #10]
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	2200      	movs	r2, #0
 8004304:	819a      	strh	r2, [r3, #12]
 8004306:	370c      	adds	r7, #12
 8004308:	46bd      	mov	sp, r7
 800430a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800430e:	4770      	bx	lr

08004310 <USART_ClockInit>:
 8004310:	b480      	push	{r7}
 8004312:	b085      	sub	sp, #20
 8004314:	af00      	add	r7, sp, #0
 8004316:	6078      	str	r0, [r7, #4]
 8004318:	6039      	str	r1, [r7, #0]
 800431a:	2300      	movs	r3, #0
 800431c:	60fb      	str	r3, [r7, #12]
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	8a1b      	ldrh	r3, [r3, #16]
 8004322:	b29b      	uxth	r3, r3
 8004324:	60fb      	str	r3, [r7, #12]
 8004326:	68fb      	ldr	r3, [r7, #12]
 8004328:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800432c:	60fb      	str	r3, [r7, #12]
 800432e:	683b      	ldr	r3, [r7, #0]
 8004330:	881a      	ldrh	r2, [r3, #0]
 8004332:	683b      	ldr	r3, [r7, #0]
 8004334:	885b      	ldrh	r3, [r3, #2]
 8004336:	4313      	orrs	r3, r2
 8004338:	b29a      	uxth	r2, r3
 800433a:	683b      	ldr	r3, [r7, #0]
 800433c:	889b      	ldrh	r3, [r3, #4]
 800433e:	4313      	orrs	r3, r2
 8004340:	b29a      	uxth	r2, r3
 8004342:	683b      	ldr	r3, [r7, #0]
 8004344:	88db      	ldrh	r3, [r3, #6]
 8004346:	4313      	orrs	r3, r2
 8004348:	b29b      	uxth	r3, r3
 800434a:	68fa      	ldr	r2, [r7, #12]
 800434c:	4313      	orrs	r3, r2
 800434e:	60fb      	str	r3, [r7, #12]
 8004350:	68fb      	ldr	r3, [r7, #12]
 8004352:	b29a      	uxth	r2, r3
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	821a      	strh	r2, [r3, #16]
 8004358:	3714      	adds	r7, #20
 800435a:	46bd      	mov	sp, r7
 800435c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004360:	4770      	bx	lr
 8004362:	bf00      	nop

08004364 <USART_ClockStructInit>:
 8004364:	b480      	push	{r7}
 8004366:	b083      	sub	sp, #12
 8004368:	af00      	add	r7, sp, #0
 800436a:	6078      	str	r0, [r7, #4]
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	2200      	movs	r2, #0
 8004370:	801a      	strh	r2, [r3, #0]
 8004372:	687b      	ldr	r3, [r7, #4]
 8004374:	2200      	movs	r2, #0
 8004376:	805a      	strh	r2, [r3, #2]
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	2200      	movs	r2, #0
 800437c:	809a      	strh	r2, [r3, #4]
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	2200      	movs	r2, #0
 8004382:	80da      	strh	r2, [r3, #6]
 8004384:	370c      	adds	r7, #12
 8004386:	46bd      	mov	sp, r7
 8004388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800438c:	4770      	bx	lr
 800438e:	bf00      	nop

08004390 <USART_Cmd>:
 8004390:	b480      	push	{r7}
 8004392:	b083      	sub	sp, #12
 8004394:	af00      	add	r7, sp, #0
 8004396:	6078      	str	r0, [r7, #4]
 8004398:	460b      	mov	r3, r1
 800439a:	70fb      	strb	r3, [r7, #3]
 800439c:	78fb      	ldrb	r3, [r7, #3]
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d008      	beq.n	80043b4 <USART_Cmd+0x24>
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	899b      	ldrh	r3, [r3, #12]
 80043a6:	b29b      	uxth	r3, r3
 80043a8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80043ac:	b29a      	uxth	r2, r3
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	819a      	strh	r2, [r3, #12]
 80043b2:	e007      	b.n	80043c4 <USART_Cmd+0x34>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	899b      	ldrh	r3, [r3, #12]
 80043b8:	b29b      	uxth	r3, r3
 80043ba:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80043be:	b29a      	uxth	r2, r3
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	819a      	strh	r2, [r3, #12]
 80043c4:	370c      	adds	r7, #12
 80043c6:	46bd      	mov	sp, r7
 80043c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043cc:	4770      	bx	lr
 80043ce:	bf00      	nop

080043d0 <USART_ITConfig>:
 80043d0:	b480      	push	{r7}
 80043d2:	b087      	sub	sp, #28
 80043d4:	af00      	add	r7, sp, #0
 80043d6:	6078      	str	r0, [r7, #4]
 80043d8:	4613      	mov	r3, r2
 80043da:	460a      	mov	r2, r1
 80043dc:	807a      	strh	r2, [r7, #2]
 80043de:	707b      	strb	r3, [r7, #1]
 80043e0:	2300      	movs	r3, #0
 80043e2:	613b      	str	r3, [r7, #16]
 80043e4:	2300      	movs	r3, #0
 80043e6:	60fb      	str	r3, [r7, #12]
 80043e8:	2300      	movs	r3, #0
 80043ea:	60bb      	str	r3, [r7, #8]
 80043ec:	2300      	movs	r3, #0
 80043ee:	617b      	str	r3, [r7, #20]
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	617b      	str	r3, [r7, #20]
 80043f4:	887b      	ldrh	r3, [r7, #2]
 80043f6:	b2db      	uxtb	r3, r3
 80043f8:	095b      	lsrs	r3, r3, #5
 80043fa:	b2db      	uxtb	r3, r3
 80043fc:	613b      	str	r3, [r7, #16]
 80043fe:	887b      	ldrh	r3, [r7, #2]
 8004400:	f003 031f 	and.w	r3, r3, #31
 8004404:	60fb      	str	r3, [r7, #12]
 8004406:	68fb      	ldr	r3, [r7, #12]
 8004408:	2201      	movs	r2, #1
 800440a:	fa02 f303 	lsl.w	r3, r2, r3
 800440e:	60bb      	str	r3, [r7, #8]
 8004410:	693b      	ldr	r3, [r7, #16]
 8004412:	2b01      	cmp	r3, #1
 8004414:	d103      	bne.n	800441e <USART_ITConfig+0x4e>
 8004416:	697b      	ldr	r3, [r7, #20]
 8004418:	330c      	adds	r3, #12
 800441a:	617b      	str	r3, [r7, #20]
 800441c:	e009      	b.n	8004432 <USART_ITConfig+0x62>
 800441e:	693b      	ldr	r3, [r7, #16]
 8004420:	2b02      	cmp	r3, #2
 8004422:	d103      	bne.n	800442c <USART_ITConfig+0x5c>
 8004424:	697b      	ldr	r3, [r7, #20]
 8004426:	3310      	adds	r3, #16
 8004428:	617b      	str	r3, [r7, #20]
 800442a:	e002      	b.n	8004432 <USART_ITConfig+0x62>
 800442c:	697b      	ldr	r3, [r7, #20]
 800442e:	3314      	adds	r3, #20
 8004430:	617b      	str	r3, [r7, #20]
 8004432:	787b      	ldrb	r3, [r7, #1]
 8004434:	2b00      	cmp	r3, #0
 8004436:	d006      	beq.n	8004446 <USART_ITConfig+0x76>
 8004438:	697b      	ldr	r3, [r7, #20]
 800443a:	697a      	ldr	r2, [r7, #20]
 800443c:	6811      	ldr	r1, [r2, #0]
 800443e:	68ba      	ldr	r2, [r7, #8]
 8004440:	430a      	orrs	r2, r1
 8004442:	601a      	str	r2, [r3, #0]
 8004444:	e006      	b.n	8004454 <USART_ITConfig+0x84>
 8004446:	697b      	ldr	r3, [r7, #20]
 8004448:	697a      	ldr	r2, [r7, #20]
 800444a:	6811      	ldr	r1, [r2, #0]
 800444c:	68ba      	ldr	r2, [r7, #8]
 800444e:	43d2      	mvns	r2, r2
 8004450:	400a      	ands	r2, r1
 8004452:	601a      	str	r2, [r3, #0]
 8004454:	371c      	adds	r7, #28
 8004456:	46bd      	mov	sp, r7
 8004458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800445c:	4770      	bx	lr
 800445e:	bf00      	nop

08004460 <USART_ClearFlag>:
 8004460:	b480      	push	{r7}
 8004462:	b083      	sub	sp, #12
 8004464:	af00      	add	r7, sp, #0
 8004466:	6078      	str	r0, [r7, #4]
 8004468:	460b      	mov	r3, r1
 800446a:	807b      	strh	r3, [r7, #2]
 800446c:	887b      	ldrh	r3, [r7, #2]
 800446e:	43db      	mvns	r3, r3
 8004470:	b29a      	uxth	r2, r3
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	801a      	strh	r2, [r3, #0]
 8004476:	370c      	adds	r7, #12
 8004478:	46bd      	mov	sp, r7
 800447a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800447e:	4770      	bx	lr

08004480 <USART_GetITStatus>:
 8004480:	b480      	push	{r7}
 8004482:	b087      	sub	sp, #28
 8004484:	af00      	add	r7, sp, #0
 8004486:	6078      	str	r0, [r7, #4]
 8004488:	460b      	mov	r3, r1
 800448a:	807b      	strh	r3, [r7, #2]
 800448c:	2300      	movs	r3, #0
 800448e:	60fb      	str	r3, [r7, #12]
 8004490:	2300      	movs	r3, #0
 8004492:	617b      	str	r3, [r7, #20]
 8004494:	2300      	movs	r3, #0
 8004496:	60bb      	str	r3, [r7, #8]
 8004498:	2300      	movs	r3, #0
 800449a:	74fb      	strb	r3, [r7, #19]
 800449c:	887b      	ldrh	r3, [r7, #2]
 800449e:	b2db      	uxtb	r3, r3
 80044a0:	095b      	lsrs	r3, r3, #5
 80044a2:	b2db      	uxtb	r3, r3
 80044a4:	60bb      	str	r3, [r7, #8]
 80044a6:	887b      	ldrh	r3, [r7, #2]
 80044a8:	f003 031f 	and.w	r3, r3, #31
 80044ac:	617b      	str	r3, [r7, #20]
 80044ae:	697b      	ldr	r3, [r7, #20]
 80044b0:	2201      	movs	r2, #1
 80044b2:	fa02 f303 	lsl.w	r3, r2, r3
 80044b6:	617b      	str	r3, [r7, #20]
 80044b8:	68bb      	ldr	r3, [r7, #8]
 80044ba:	2b01      	cmp	r3, #1
 80044bc:	d106      	bne.n	80044cc <USART_GetITStatus+0x4c>
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	899b      	ldrh	r3, [r3, #12]
 80044c2:	b29b      	uxth	r3, r3
 80044c4:	697a      	ldr	r2, [r7, #20]
 80044c6:	4013      	ands	r3, r2
 80044c8:	617b      	str	r3, [r7, #20]
 80044ca:	e00f      	b.n	80044ec <USART_GetITStatus+0x6c>
 80044cc:	68bb      	ldr	r3, [r7, #8]
 80044ce:	2b02      	cmp	r3, #2
 80044d0:	d106      	bne.n	80044e0 <USART_GetITStatus+0x60>
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	8a1b      	ldrh	r3, [r3, #16]
 80044d6:	b29b      	uxth	r3, r3
 80044d8:	697a      	ldr	r2, [r7, #20]
 80044da:	4013      	ands	r3, r2
 80044dc:	617b      	str	r3, [r7, #20]
 80044de:	e005      	b.n	80044ec <USART_GetITStatus+0x6c>
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	8a9b      	ldrh	r3, [r3, #20]
 80044e4:	b29b      	uxth	r3, r3
 80044e6:	697a      	ldr	r2, [r7, #20]
 80044e8:	4013      	ands	r3, r2
 80044ea:	617b      	str	r3, [r7, #20]
 80044ec:	887b      	ldrh	r3, [r7, #2]
 80044ee:	0a1b      	lsrs	r3, r3, #8
 80044f0:	b29b      	uxth	r3, r3
 80044f2:	60fb      	str	r3, [r7, #12]
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	2201      	movs	r2, #1
 80044f8:	fa02 f303 	lsl.w	r3, r2, r3
 80044fc:	60fb      	str	r3, [r7, #12]
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	881b      	ldrh	r3, [r3, #0]
 8004502:	b29b      	uxth	r3, r3
 8004504:	68fa      	ldr	r2, [r7, #12]
 8004506:	4013      	ands	r3, r2
 8004508:	60fb      	str	r3, [r7, #12]
 800450a:	697b      	ldr	r3, [r7, #20]
 800450c:	2b00      	cmp	r3, #0
 800450e:	d005      	beq.n	800451c <USART_GetITStatus+0x9c>
 8004510:	68fb      	ldr	r3, [r7, #12]
 8004512:	2b00      	cmp	r3, #0
 8004514:	d002      	beq.n	800451c <USART_GetITStatus+0x9c>
 8004516:	2301      	movs	r3, #1
 8004518:	74fb      	strb	r3, [r7, #19]
 800451a:	e001      	b.n	8004520 <USART_GetITStatus+0xa0>
 800451c:	2300      	movs	r3, #0
 800451e:	74fb      	strb	r3, [r7, #19]
 8004520:	7cfb      	ldrb	r3, [r7, #19]
 8004522:	4618      	mov	r0, r3
 8004524:	371c      	adds	r7, #28
 8004526:	46bd      	mov	sp, r7
 8004528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800452c:	4770      	bx	lr
 800452e:	bf00      	nop

08004530 <USART_ClearITPendingBit>:
 8004530:	b480      	push	{r7}
 8004532:	b085      	sub	sp, #20
 8004534:	af00      	add	r7, sp, #0
 8004536:	6078      	str	r0, [r7, #4]
 8004538:	460b      	mov	r3, r1
 800453a:	807b      	strh	r3, [r7, #2]
 800453c:	2300      	movs	r3, #0
 800453e:	81fb      	strh	r3, [r7, #14]
 8004540:	2300      	movs	r3, #0
 8004542:	81bb      	strh	r3, [r7, #12]
 8004544:	887b      	ldrh	r3, [r7, #2]
 8004546:	0a1b      	lsrs	r3, r3, #8
 8004548:	81fb      	strh	r3, [r7, #14]
 800454a:	89fb      	ldrh	r3, [r7, #14]
 800454c:	2201      	movs	r2, #1
 800454e:	fa02 f303 	lsl.w	r3, r2, r3
 8004552:	81bb      	strh	r3, [r7, #12]
 8004554:	89bb      	ldrh	r3, [r7, #12]
 8004556:	43db      	mvns	r3, r3
 8004558:	b29a      	uxth	r2, r3
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	801a      	strh	r2, [r3, #0]
 800455e:	3714      	adds	r7, #20
 8004560:	46bd      	mov	sp, r7
 8004562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004566:	4770      	bx	lr

08004568 <LCD_WriteArea>:
 8004568:	b590      	push	{r4, r7, lr}
 800456a:	b085      	sub	sp, #20
 800456c:	af02      	add	r7, sp, #8
 800456e:	80f8      	strh	r0, [r7, #6]
 8004570:	80b9      	strh	r1, [r7, #4]
 8004572:	807a      	strh	r2, [r7, #2]
 8004574:	803b      	strh	r3, [r7, #0]
 8004576:	88f8      	ldrh	r0, [r7, #6]
 8004578:	88b9      	ldrh	r1, [r7, #4]
 800457a:	887a      	ldrh	r2, [r7, #2]
 800457c:	883b      	ldrh	r3, [r7, #0]
 800457e:	69bc      	ldr	r4, [r7, #24]
 8004580:	9400      	str	r4, [sp, #0]
 8004582:	f7fe fd33 	bl	8002fec <SSD1963_WriteArea>
 8004586:	370c      	adds	r7, #12
 8004588:	46bd      	mov	sp, r7
 800458a:	bd90      	pop	{r4, r7, pc}

0800458c <LCD_DrawChar>:
 800458c:	b590      	push	{r4, r7, lr}
 800458e:	b0d1      	sub	sp, #324	; 0x144
 8004590:	af02      	add	r7, sp, #8
 8004592:	4604      	mov	r4, r0
 8004594:	4608      	mov	r0, r1
 8004596:	4611      	mov	r1, r2
 8004598:	461a      	mov	r2, r3
 800459a:	1dbb      	adds	r3, r7, #6
 800459c:	801c      	strh	r4, [r3, #0]
 800459e:	1d3b      	adds	r3, r7, #4
 80045a0:	8018      	strh	r0, [r3, #0]
 80045a2:	1cbb      	adds	r3, r7, #2
 80045a4:	8019      	strh	r1, [r3, #0]
 80045a6:	463b      	mov	r3, r7
 80045a8:	801a      	strh	r2, [r3, #0]
 80045aa:	2300      	movs	r3, #0
 80045ac:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 80045b0:	2300      	movs	r3, #0
 80045b2:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 80045b6:	2300      	movs	r3, #0
 80045b8:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
 80045bc:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80045c0:	785b      	ldrb	r3, [r3, #1]
 80045c2:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 80045c6:	e043      	b.n	8004650 <LCD_DrawChar+0xc4>
 80045c8:	2300      	movs	r3, #0
 80045ca:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 80045ce:	e032      	b.n	8004636 <LCD_DrawChar+0xaa>
 80045d0:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80045d4:	789b      	ldrb	r3, [r3, #2]
 80045d6:	f8d7 2134 	ldr.w	r2, [r7, #308]	; 0x134
 80045da:	fb02 f303 	mul.w	r3, r2, r3
 80045de:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 80045e2:	4413      	add	r3, r2
 80045e4:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 80045e8:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 80045ec:	681a      	ldr	r2, [r3, #0]
 80045ee:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 80045f2:	3b01      	subs	r3, #1
 80045f4:	2101      	movs	r1, #1
 80045f6:	fa01 f303 	lsl.w	r3, r1, r3
 80045fa:	4013      	ands	r3, r2
 80045fc:	2b00      	cmp	r3, #0
 80045fe:	d108      	bne.n	8004612 <LCD_DrawChar+0x86>
 8004600:	f897 212f 	ldrb.w	r2, [r7, #303]	; 0x12f
 8004604:	f107 0308 	add.w	r3, r7, #8
 8004608:	1cb9      	adds	r1, r7, #2
 800460a:	8809      	ldrh	r1, [r1, #0]
 800460c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8004610:	e007      	b.n	8004622 <LCD_DrawChar+0x96>
 8004612:	f897 212f 	ldrb.w	r2, [r7, #303]	; 0x12f
 8004616:	f107 0308 	add.w	r3, r7, #8
 800461a:	4639      	mov	r1, r7
 800461c:	8809      	ldrh	r1, [r1, #0]
 800461e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8004622:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8004626:	3301      	adds	r3, #1
 8004628:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
 800462c:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 8004630:	3301      	adds	r3, #1
 8004632:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 8004636:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 800463a:	781b      	ldrb	r3, [r3, #0]
 800463c:	461a      	mov	r2, r3
 800463e:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 8004642:	429a      	cmp	r2, r3
 8004644:	d8c4      	bhi.n	80045d0 <LCD_DrawChar+0x44>
 8004646:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 800464a:	3b01      	subs	r3, #1
 800464c:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 8004650:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
 8004654:	2b00      	cmp	r3, #0
 8004656:	d1b7      	bne.n	80045c8 <LCD_DrawChar+0x3c>
 8004658:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 800465c:	781b      	ldrb	r3, [r3, #0]
 800465e:	461a      	mov	r2, r3
 8004660:	1dbb      	adds	r3, r7, #6
 8004662:	881b      	ldrh	r3, [r3, #0]
 8004664:	4413      	add	r3, r2
 8004666:	b29b      	uxth	r3, r3
 8004668:	3b01      	subs	r3, #1
 800466a:	b29a      	uxth	r2, r3
 800466c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8004670:	785b      	ldrb	r3, [r3, #1]
 8004672:	4619      	mov	r1, r3
 8004674:	1d3b      	adds	r3, r7, #4
 8004676:	881b      	ldrh	r3, [r3, #0]
 8004678:	440b      	add	r3, r1
 800467a:	b29b      	uxth	r3, r3
 800467c:	3b01      	subs	r3, #1
 800467e:	b29b      	uxth	r3, r3
 8004680:	1db9      	adds	r1, r7, #6
 8004682:	8808      	ldrh	r0, [r1, #0]
 8004684:	1d39      	adds	r1, r7, #4
 8004686:	8809      	ldrh	r1, [r1, #0]
 8004688:	f107 0408 	add.w	r4, r7, #8
 800468c:	9400      	str	r4, [sp, #0]
 800468e:	f7ff ff6b 	bl	8004568 <LCD_WriteArea>
 8004692:	f507 779e 	add.w	r7, r7, #316	; 0x13c
 8004696:	46bd      	mov	sp, r7
 8004698:	bd90      	pop	{r4, r7, pc}
 800469a:	bf00      	nop

0800469c <LCD_SetTextColor>:
 800469c:	b480      	push	{r7}
 800469e:	b083      	sub	sp, #12
 80046a0:	af00      	add	r7, sp, #0
 80046a2:	4603      	mov	r3, r0
 80046a4:	80fb      	strh	r3, [r7, #6]
 80046a6:	4b04      	ldr	r3, [pc, #16]	; (80046b8 <LCD_SetTextColor+0x1c>)
 80046a8:	88fa      	ldrh	r2, [r7, #6]
 80046aa:	801a      	strh	r2, [r3, #0]
 80046ac:	370c      	adds	r7, #12
 80046ae:	46bd      	mov	sp, r7
 80046b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046b4:	4770      	bx	lr
 80046b6:	bf00      	nop
 80046b8:	200004f4 	.word	0x200004f4

080046bc <LCD_SetFont>:
 80046bc:	b480      	push	{r7}
 80046be:	b083      	sub	sp, #12
 80046c0:	af00      	add	r7, sp, #0
 80046c2:	6078      	str	r0, [r7, #4]
 80046c4:	4b03      	ldr	r3, [pc, #12]	; (80046d4 <LCD_SetFont+0x18>)
 80046c6:	687a      	ldr	r2, [r7, #4]
 80046c8:	601a      	str	r2, [r3, #0]
 80046ca:	370c      	adds	r7, #12
 80046cc:	46bd      	mov	sp, r7
 80046ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046d2:	4770      	bx	lr
 80046d4:	200004f8 	.word	0x200004f8

080046d8 <LCD_GetFont>:
 80046d8:	b480      	push	{r7}
 80046da:	af00      	add	r7, sp, #0
 80046dc:	4b03      	ldr	r3, [pc, #12]	; (80046ec <LCD_GetFont+0x14>)
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	4618      	mov	r0, r3
 80046e2:	46bd      	mov	sp, r7
 80046e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046e8:	4770      	bx	lr
 80046ea:	bf00      	nop
 80046ec:	200004f8 	.word	0x200004f8

080046f0 <LCD_DisplayCharXY>:
 80046f0:	b5b0      	push	{r4, r5, r7, lr}
 80046f2:	b084      	sub	sp, #16
 80046f4:	af02      	add	r7, sp, #8
 80046f6:	4613      	mov	r3, r2
 80046f8:	4602      	mov	r2, r0
 80046fa:	80fa      	strh	r2, [r7, #6]
 80046fc:	460a      	mov	r2, r1
 80046fe:	80ba      	strh	r2, [r7, #4]
 8004700:	70fb      	strb	r3, [r7, #3]
 8004702:	78fb      	ldrb	r3, [r7, #3]
 8004704:	3b20      	subs	r3, #32
 8004706:	70fb      	strb	r3, [r7, #3]
 8004708:	4b0e      	ldr	r3, [pc, #56]	; (8004744 <LCD_DisplayCharXY+0x54>)
 800470a:	881a      	ldrh	r2, [r3, #0]
 800470c:	4b0e      	ldr	r3, [pc, #56]	; (8004748 <LCD_DisplayCharXY+0x58>)
 800470e:	881b      	ldrh	r3, [r3, #0]
 8004710:	490e      	ldr	r1, [pc, #56]	; (800474c <LCD_DisplayCharXY+0x5c>)
 8004712:	680d      	ldr	r5, [r1, #0]
 8004714:	490d      	ldr	r1, [pc, #52]	; (800474c <LCD_DisplayCharXY+0x5c>)
 8004716:	6809      	ldr	r1, [r1, #0]
 8004718:	6848      	ldr	r0, [r1, #4]
 800471a:	78f9      	ldrb	r1, [r7, #3]
 800471c:	4c0b      	ldr	r4, [pc, #44]	; (800474c <LCD_DisplayCharXY+0x5c>)
 800471e:	6824      	ldr	r4, [r4, #0]
 8004720:	7824      	ldrb	r4, [r4, #0]
 8004722:	fb04 f101 	mul.w	r1, r4, r1
 8004726:	4c09      	ldr	r4, [pc, #36]	; (800474c <LCD_DisplayCharXY+0x5c>)
 8004728:	6824      	ldr	r4, [r4, #0]
 800472a:	78a4      	ldrb	r4, [r4, #2]
 800472c:	fb04 f101 	mul.w	r1, r4, r1
 8004730:	1844      	adds	r4, r0, r1
 8004732:	88f8      	ldrh	r0, [r7, #6]
 8004734:	88b9      	ldrh	r1, [r7, #4]
 8004736:	9500      	str	r5, [sp, #0]
 8004738:	9401      	str	r4, [sp, #4]
 800473a:	f7ff ff27 	bl	800458c <LCD_DrawChar>
 800473e:	3708      	adds	r7, #8
 8004740:	46bd      	mov	sp, r7
 8004742:	bdb0      	pop	{r4, r5, r7, pc}
 8004744:	200008bc 	.word	0x200008bc
 8004748:	200004f4 	.word	0x200004f4
 800474c:	200004f8 	.word	0x200004f8

08004750 <LCD_DisplayCharLine>:
 8004750:	b580      	push	{r7, lr}
 8004752:	b082      	sub	sp, #8
 8004754:	af00      	add	r7, sp, #0
 8004756:	4613      	mov	r3, r2
 8004758:	4602      	mov	r2, r0
 800475a:	71fa      	strb	r2, [r7, #7]
 800475c:	460a      	mov	r2, r1
 800475e:	71ba      	strb	r2, [r7, #6]
 8004760:	717b      	strb	r3, [r7, #5]
 8004762:	79bb      	ldrb	r3, [r7, #6]
 8004764:	b29b      	uxth	r3, r3
 8004766:	4a0b      	ldr	r2, [pc, #44]	; (8004794 <LCD_DisplayCharLine+0x44>)
 8004768:	6812      	ldr	r2, [r2, #0]
 800476a:	7812      	ldrb	r2, [r2, #0]
 800476c:	fb02 f303 	mul.w	r3, r2, r3
 8004770:	b299      	uxth	r1, r3
 8004772:	79fb      	ldrb	r3, [r7, #7]
 8004774:	b29b      	uxth	r3, r3
 8004776:	4a07      	ldr	r2, [pc, #28]	; (8004794 <LCD_DisplayCharLine+0x44>)
 8004778:	6812      	ldr	r2, [r2, #0]
 800477a:	7852      	ldrb	r2, [r2, #1]
 800477c:	fb02 f303 	mul.w	r3, r2, r3
 8004780:	b29a      	uxth	r2, r3
 8004782:	797b      	ldrb	r3, [r7, #5]
 8004784:	4608      	mov	r0, r1
 8004786:	4611      	mov	r1, r2
 8004788:	461a      	mov	r2, r3
 800478a:	f7ff ffb1 	bl	80046f0 <LCD_DisplayCharXY>
 800478e:	3708      	adds	r7, #8
 8004790:	46bd      	mov	sp, r7
 8004792:	bd80      	pop	{r7, pc}
 8004794:	200004f8 	.word	0x200004f8

08004798 <LCD_DisplayStringLine>:
 8004798:	b5b0      	push	{r4, r5, r7, lr}
 800479a:	b084      	sub	sp, #16
 800479c:	af00      	add	r7, sp, #0
 800479e:	4603      	mov	r3, r0
 80047a0:	6039      	str	r1, [r7, #0]
 80047a2:	71fb      	strb	r3, [r7, #7]
 80047a4:	2300      	movs	r3, #0
 80047a6:	73fb      	strb	r3, [r7, #15]
 80047a8:	e04b      	b.n	8004842 <LCD_DisplayStringLine+0xaa>
 80047aa:	683b      	ldr	r3, [r7, #0]
 80047ac:	781b      	ldrb	r3, [r3, #0]
 80047ae:	2b0a      	cmp	r3, #10
 80047b0:	d103      	bne.n	80047ba <LCD_DisplayStringLine+0x22>
 80047b2:	79fb      	ldrb	r3, [r7, #7]
 80047b4:	3301      	adds	r3, #1
 80047b6:	71fb      	strb	r3, [r7, #7]
 80047b8:	e040      	b.n	800483c <LCD_DisplayStringLine+0xa4>
 80047ba:	683b      	ldr	r3, [r7, #0]
 80047bc:	781b      	ldrb	r3, [r3, #0]
 80047be:	2b0d      	cmp	r3, #13
 80047c0:	d102      	bne.n	80047c8 <LCD_DisplayStringLine+0x30>
 80047c2:	2300      	movs	r3, #0
 80047c4:	73fb      	strb	r3, [r7, #15]
 80047c6:	e039      	b.n	800483c <LCD_DisplayStringLine+0xa4>
 80047c8:	683b      	ldr	r3, [r7, #0]
 80047ca:	781b      	ldrb	r3, [r3, #0]
 80047cc:	2b09      	cmp	r3, #9
 80047ce:	d119      	bne.n	8004804 <LCD_DisplayStringLine+0x6c>
 80047d0:	7bfb      	ldrb	r3, [r7, #15]
 80047d2:	1c5a      	adds	r2, r3, #1
 80047d4:	73fa      	strb	r2, [r7, #15]
 80047d6:	79fa      	ldrb	r2, [r7, #7]
 80047d8:	4610      	mov	r0, r2
 80047da:	4619      	mov	r1, r3
 80047dc:	2220      	movs	r2, #32
 80047de:	f7ff ffb7 	bl	8004750 <LCD_DisplayCharLine>
 80047e2:	e008      	b.n	80047f6 <LCD_DisplayStringLine+0x5e>
 80047e4:	7bfb      	ldrb	r3, [r7, #15]
 80047e6:	1c5a      	adds	r2, r3, #1
 80047e8:	73fa      	strb	r2, [r7, #15]
 80047ea:	79fa      	ldrb	r2, [r7, #7]
 80047ec:	4610      	mov	r0, r2
 80047ee:	4619      	mov	r1, r3
 80047f0:	2220      	movs	r2, #32
 80047f2:	f7ff ffad 	bl	8004750 <LCD_DisplayCharLine>
 80047f6:	7bfb      	ldrb	r3, [r7, #15]
 80047f8:	f003 0303 	and.w	r3, r3, #3
 80047fc:	b2db      	uxtb	r3, r3
 80047fe:	2b00      	cmp	r3, #0
 8004800:	d1f0      	bne.n	80047e4 <LCD_DisplayStringLine+0x4c>
 8004802:	e01b      	b.n	800483c <LCD_DisplayStringLine+0xa4>
 8004804:	683b      	ldr	r3, [r7, #0]
 8004806:	781b      	ldrb	r3, [r3, #0]
 8004808:	2b08      	cmp	r3, #8
 800480a:	d10d      	bne.n	8004828 <LCD_DisplayStringLine+0x90>
 800480c:	7bfb      	ldrb	r3, [r7, #15]
 800480e:	3b01      	subs	r3, #1
 8004810:	73fb      	strb	r3, [r7, #15]
 8004812:	79fa      	ldrb	r2, [r7, #7]
 8004814:	7bfb      	ldrb	r3, [r7, #15]
 8004816:	4610      	mov	r0, r2
 8004818:	4619      	mov	r1, r3
 800481a:	2220      	movs	r2, #32
 800481c:	f7ff ff98 	bl	8004750 <LCD_DisplayCharLine>
 8004820:	7bfb      	ldrb	r3, [r7, #15]
 8004822:	3b01      	subs	r3, #1
 8004824:	73fb      	strb	r3, [r7, #15]
 8004826:	e009      	b.n	800483c <LCD_DisplayStringLine+0xa4>
 8004828:	7bfb      	ldrb	r3, [r7, #15]
 800482a:	1c5a      	adds	r2, r3, #1
 800482c:	73fa      	strb	r2, [r7, #15]
 800482e:	683a      	ldr	r2, [r7, #0]
 8004830:	7812      	ldrb	r2, [r2, #0]
 8004832:	79f9      	ldrb	r1, [r7, #7]
 8004834:	4608      	mov	r0, r1
 8004836:	4619      	mov	r1, r3
 8004838:	f7ff ff8a 	bl	8004750 <LCD_DisplayCharLine>
 800483c:	683b      	ldr	r3, [r7, #0]
 800483e:	3301      	adds	r3, #1
 8004840:	603b      	str	r3, [r7, #0]
 8004842:	683b      	ldr	r3, [r7, #0]
 8004844:	781b      	ldrb	r3, [r3, #0]
 8004846:	2b00      	cmp	r3, #0
 8004848:	d014      	beq.n	8004874 <LCD_DisplayStringLine+0xdc>
 800484a:	7bfc      	ldrb	r4, [r7, #15]
 800484c:	f04f 0500 	mov.w	r5, #0
 8004850:	4b19      	ldr	r3, [pc, #100]	; (80048b8 <LCD_DisplayStringLine+0x120>)
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	781b      	ldrb	r3, [r3, #0]
 8004856:	b2da      	uxtb	r2, r3
 8004858:	f04f 0300 	mov.w	r3, #0
 800485c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8004860:	f04f 0100 	mov.w	r1, #0
 8004864:	f7fb fd0c 	bl	8000280 <__aeabi_uldivmod>
 8004868:	4602      	mov	r2, r0
 800486a:	460b      	mov	r3, r1
 800486c:	429d      	cmp	r5, r3
 800486e:	bf08      	it	eq
 8004870:	4294      	cmpeq	r4, r2
 8004872:	d39a      	bcc.n	80047aa <LCD_DisplayStringLine+0x12>
 8004874:	e008      	b.n	8004888 <LCD_DisplayStringLine+0xf0>
 8004876:	7bfb      	ldrb	r3, [r7, #15]
 8004878:	1c5a      	adds	r2, r3, #1
 800487a:	73fa      	strb	r2, [r7, #15]
 800487c:	79fa      	ldrb	r2, [r7, #7]
 800487e:	4610      	mov	r0, r2
 8004880:	4619      	mov	r1, r3
 8004882:	2220      	movs	r2, #32
 8004884:	f7ff ff64 	bl	8004750 <LCD_DisplayCharLine>
 8004888:	7bfc      	ldrb	r4, [r7, #15]
 800488a:	f04f 0500 	mov.w	r5, #0
 800488e:	4b0a      	ldr	r3, [pc, #40]	; (80048b8 <LCD_DisplayStringLine+0x120>)
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	781b      	ldrb	r3, [r3, #0]
 8004894:	b2da      	uxtb	r2, r3
 8004896:	f04f 0300 	mov.w	r3, #0
 800489a:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800489e:	f04f 0100 	mov.w	r1, #0
 80048a2:	f7fb fced 	bl	8000280 <__aeabi_uldivmod>
 80048a6:	4602      	mov	r2, r0
 80048a8:	460b      	mov	r3, r1
 80048aa:	429d      	cmp	r5, r3
 80048ac:	bf08      	it	eq
 80048ae:	4294      	cmpeq	r4, r2
 80048b0:	d3e1      	bcc.n	8004876 <LCD_DisplayStringLine+0xde>
 80048b2:	3710      	adds	r7, #16
 80048b4:	46bd      	mov	sp, r7
 80048b6:	bdb0      	pop	{r4, r5, r7, pc}
 80048b8:	200004f8 	.word	0x200004f8
 80048bc:	5f636341 	.word	0x5f636341
 80048c0:	64253a58 	.word	0x64253a58
 80048c4:	3330252e 	.word	0x3330252e
 80048c8:	00000064 	.word	0x00000064
 80048cc:	5f636341 	.word	0x5f636341
 80048d0:	64253a59 	.word	0x64253a59
 80048d4:	3330252e 	.word	0x3330252e
 80048d8:	00000064 	.word	0x00000064
 80048dc:	5f636341 	.word	0x5f636341
 80048e0:	64253a5a 	.word	0x64253a5a
 80048e4:	3330252e 	.word	0x3330252e
 80048e8:	00000064 	.word	0x00000064
 80048ec:	5f727947 	.word	0x5f727947
 80048f0:	64253a58 	.word	0x64253a58
 80048f4:	3330252e 	.word	0x3330252e
 80048f8:	00000064 	.word	0x00000064
 80048fc:	5f727947 	.word	0x5f727947
 8004900:	64253a59 	.word	0x64253a59
 8004904:	3330252e 	.word	0x3330252e
 8004908:	00000064 	.word	0x00000064
 800490c:	5f727947 	.word	0x5f727947
 8004910:	64253a5a 	.word	0x64253a5a
 8004914:	3330252e 	.word	0x3330252e
 8004918:	00000064 	.word	0x00000064
 800491c:	40021400 	.word	0x40021400
 8004920:	0c020001 	.word	0x0c020001
 8004924:	40021400 	.word	0x40021400
 8004928:	0c020002 	.word	0x0c020002
 800492c:	40021400 	.word	0x40021400
 8004930:	0c020004 	.word	0x0c020004
 8004934:	40021400 	.word	0x40021400
 8004938:	0c020008 	.word	0x0c020008
 800493c:	40021400 	.word	0x40021400
 8004940:	0c020010 	.word	0x0c020010
 8004944:	40021400 	.word	0x40021400
 8004948:	0c020020 	.word	0x0c020020
 800494c:	40021400 	.word	0x40021400
 8004950:	0c021000 	.word	0x0c021000
 8004954:	40021400 	.word	0x40021400
 8004958:	0c022000 	.word	0x0c022000
 800495c:	40021400 	.word	0x40021400
 8004960:	0c024000 	.word	0x0c024000
 8004964:	40021400 	.word	0x40021400
 8004968:	0c028000 	.word	0x0c028000
 800496c:	40021800 	.word	0x40021800
 8004970:	0c020001 	.word	0x0c020001
 8004974:	40021800 	.word	0x40021800
 8004978:	0c020002 	.word	0x0c020002
 800497c:	40021800 	.word	0x40021800
 8004980:	0c020004 	.word	0x0c020004
 8004984:	40021800 	.word	0x40021800
 8004988:	0c020008 	.word	0x0c020008
 800498c:	40021800 	.word	0x40021800
 8004990:	0c020010 	.word	0x0c020010
 8004994:	40021800 	.word	0x40021800
 8004998:	0c020020 	.word	0x0c020020
 800499c:	40020c00 	.word	0x40020c00
 80049a0:	0c020800 	.word	0x0c020800
 80049a4:	40020c00 	.word	0x40020c00
 80049a8:	0c021000 	.word	0x0c021000
 80049ac:	40020c00 	.word	0x40020c00
 80049b0:	0c022000 	.word	0x0c022000
 80049b4:	40021000 	.word	0x40021000
 80049b8:	0c020008 	.word	0x0c020008
 80049bc:	40021000 	.word	0x40021000
 80049c0:	0c020010 	.word	0x0c020010
 80049c4:	40021000 	.word	0x40021000
 80049c8:	0c020020 	.word	0x0c020020
 80049cc:	40021000 	.word	0x40021000
 80049d0:	0c020040 	.word	0x0c020040
 80049d4:	40021000 	.word	0x40021000
 80049d8:	0c020004 	.word	0x0c020004
 80049dc:	40021800 	.word	0x40021800
 80049e0:	0c022000 	.word	0x0c022000
 80049e4:	40021800 	.word	0x40021800
 80049e8:	0c024000 	.word	0x0c024000
 80049ec:	40020c00 	.word	0x40020c00
 80049f0:	0c024000 	.word	0x0c024000
 80049f4:	40020c00 	.word	0x40020c00
 80049f8:	0c028000 	.word	0x0c028000
 80049fc:	40020c00 	.word	0x40020c00
 8004a00:	0c020001 	.word	0x0c020001
 8004a04:	40020c00 	.word	0x40020c00
 8004a08:	0c020002 	.word	0x0c020002
 8004a0c:	40021000 	.word	0x40021000
 8004a10:	0c020080 	.word	0x0c020080
 8004a14:	40021000 	.word	0x40021000
 8004a18:	0c020100 	.word	0x0c020100
 8004a1c:	40021000 	.word	0x40021000
 8004a20:	0c020200 	.word	0x0c020200
 8004a24:	40021000 	.word	0x40021000
 8004a28:	0c020400 	.word	0x0c020400
 8004a2c:	40021000 	.word	0x40021000
 8004a30:	0c020800 	.word	0x0c020800
 8004a34:	40021000 	.word	0x40021000
 8004a38:	0c021000 	.word	0x0c021000
 8004a3c:	40021000 	.word	0x40021000
 8004a40:	0c022000 	.word	0x0c022000
 8004a44:	40021000 	.word	0x40021000
 8004a48:	0c024000 	.word	0x0c024000
 8004a4c:	40021000 	.word	0x40021000
 8004a50:	0c028000 	.word	0x0c028000
 8004a54:	40020c00 	.word	0x40020c00
 8004a58:	0c020100 	.word	0x0c020100
 8004a5c:	40020c00 	.word	0x40020c00
 8004a60:	0c020200 	.word	0x0c020200
 8004a64:	40020c00 	.word	0x40020c00
 8004a68:	0c020400 	.word	0x0c020400
 8004a6c:	40020c00 	.word	0x40020c00
 8004a70:	0c020080 	.word	0x0c020080
 8004a74:	40021800 	.word	0x40021800
 8004a78:	0c020200 	.word	0x0c020200
 8004a7c:	40021800 	.word	0x40021800
 8004a80:	0c020400 	.word	0x0c020400
 8004a84:	40021800 	.word	0x40021800
 8004a88:	0c021000 	.word	0x0c021000
 8004a8c:	40020400 	.word	0x40020400
 8004a90:	0c020080 	.word	0x0c020080
 8004a94:	40020c00 	.word	0x40020c00
 8004a98:	0c020008 	.word	0x0c020008
 8004a9c:	40020c00 	.word	0x40020c00
 8004aa0:	0c020010 	.word	0x0c020010
 8004aa4:	40020c00 	.word	0x40020c00
 8004aa8:	0c020020 	.word	0x0c020020
 8004aac:	40020c00 	.word	0x40020c00
 8004ab0:	0c020040 	.word	0x0c020040
 8004ab4:	40021000 	.word	0x40021000
 8004ab8:	0c020001 	.word	0x0c020001
 8004abc:	40021000 	.word	0x40021000
 8004ac0:	0c020002 	.word	0x0c020002
 8004ac4:	2b302d23 	.word	0x2b302d23
 8004ac8:	6c680020 	.word	0x6c680020
 8004acc:	6665004c 	.word	0x6665004c
 8004ad0:	47464567 	.word	0x47464567
 8004ad4:	00          	.byte	0x00
 8004ad5:	30          	.byte	0x30
 8004ad6:	3231      	.short	0x3231
 8004ad8:	36353433 	.word	0x36353433
 8004adc:	41393837 	.word	0x41393837
 8004ae0:	45444342 	.word	0x45444342
 8004ae4:	31300046 	.word	0x31300046
 8004ae8:	35343332 	.word	0x35343332
 8004aec:	39383736 	.word	0x39383736
 8004af0:	64636261 	.word	0x64636261
 8004af4:	00006665 	.word	0x00006665

08004af8 <_init>:
 8004af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004afa:	bf00      	nop
 8004afc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004afe:	bc08      	pop	{r3}
 8004b00:	469e      	mov	lr, r3
 8004b02:	4770      	bx	lr

08004b04 <_fini>:
 8004b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004b06:	bf00      	nop
 8004b08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004b0a:	bc08      	pop	{r3}
 8004b0c:	469e      	mov	lr, r3
 8004b0e:	4770      	bx	lr
